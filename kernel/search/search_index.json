{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"General information Install environment development for developers Getting-started Kernel primitives Primitives Tools Doxygen for kernel . Samples for kernel calls Get ctrl+c hook .include \"telestrat.inc\" asl KBDCTC bcc @no_ctrl ; here is ctrl management @no_ctrl: rts Test kernel Error when fopen failed ; Open ... BRK_KERNEL XOPEN cpy #$00 bne @read_rom cmp #$00 bne @read_rom ldx #$04 ; Get kernel ERRNO BRK_KERNEL XVARS sta userzp sty userzp+1 ldy #$00 lda (userzp),y ; get ERRNO from kernel cmp #ENOMEM bne @no_enomem_kernel_error PRINT str_enomem @no_enomem_kernel_error: cmp #ENOENT bne @no_enoent_kernel_error PRINT str_not_found Stop output when spacebar is pressed (for example) .include \"telestrat.inc\" @L12: BRK_KERNEL XRD0 bcs @no_char_action cmp #' ' ; Space pressed ? bne @no_char ; no continue lda myOffsetToManageSwitch ; One byte beq @inv_to_1 lda #$00 sta myOffsetToManageSwitch jmp @L12 @inv_to_1: inc myOffsetToManageSwitch jmp @L12 @no_char_action: lda myOffsetToManageSwitch beq @L12 @no_char: ; No keypressed Displays a string lda #<mystr ldy #>mystr BRK_KERNEL XWRSTR0 rts mysstr: .asciiz \"hello\"","title":"General information"},{"location":"#general-information","text":"","title":"General information"},{"location":"#install-environment-development-for-developers","text":"Getting-started","title":"Install environment development for developers"},{"location":"#kernel-primitives","text":"Primitives Tools Doxygen for kernel .","title":"Kernel primitives"},{"location":"#samples-for-kernel-calls","text":"","title":"Samples for kernel calls"},{"location":"#get-ctrlc-hook","text":".include \"telestrat.inc\" asl KBDCTC bcc @no_ctrl ; here is ctrl management @no_ctrl: rts","title":"Get ctrl+c hook"},{"location":"#test-kernel-error-when-fopen-failed","text":"; Open ... BRK_KERNEL XOPEN cpy #$00 bne @read_rom cmp #$00 bne @read_rom ldx #$04 ; Get kernel ERRNO BRK_KERNEL XVARS sta userzp sty userzp+1 ldy #$00 lda (userzp),y ; get ERRNO from kernel cmp #ENOMEM bne @no_enomem_kernel_error PRINT str_enomem @no_enomem_kernel_error: cmp #ENOENT bne @no_enoent_kernel_error PRINT str_not_found","title":"Test kernel Error when fopen failed"},{"location":"#stop-output-when-spacebar-is-pressed-for-example","text":".include \"telestrat.inc\" @L12: BRK_KERNEL XRD0 bcs @no_char_action cmp #' ' ; Space pressed ? bne @no_char ; no continue lda myOffsetToManageSwitch ; One byte beq @inv_to_1 lda #$00 sta myOffsetToManageSwitch jmp @L12 @inv_to_1: inc myOffsetToManageSwitch jmp @L12 @no_char_action: lda myOffsetToManageSwitch beq @L12 @no_char: ; No keypressed","title":"Stop output when spacebar is pressed (for example)"},{"location":"#displays-a-string","text":"lda #<mystr ldy #>mystr BRK_KERNEL XWRSTR0 rts mysstr: .asciiz \"hello\"","title":"Displays a string"},{"location":"return/","text":"Return to main documentation Main documentation","title":"Return to main documentation"},{"location":"return/#return-to-main-documentation","text":"Main documentation","title":"Return to main documentation"},{"location":"dynamiclink/XCALLFUNCTLIB/","text":"XCALLFUNCTLIB Check if the id of the function is valid ? Calls always $c000 of the bank ? Returns error code ?","title":"XCALLFUNCTLIB"},{"location":"dynamiclink/XCALLFUNCTLIB/#xcallfunctlib","text":"Check if the id of the function is valid ? Calls always $c000 of the bank ? Returns error code ?","title":"XCALLFUNCTLIB"},{"location":"dynamiclink/XOPENLIB/","text":"XOPENLIB lda #<lib_sdl ldy #>lib_sdl BRK_KERNEL OPENLIB ; Return in X the id of the lib rts lib_sdl: .asciiz \"sdl.so\" ; RES contains the id of the lib ; A & Y contains maybe the struct ; X contains others thing ; RES contains the id of the function BRK_KERNEL XCALL","title":"XOPENLIB"},{"location":"dynamiclink/XOPENLIB/#xopenlib","text":"lda #<lib_sdl ldy #>lib_sdl BRK_KERNEL OPENLIB ; Return in X the id of the lib rts lib_sdl: .asciiz \"sdl.so\" ; RES contains the id of the lib ; A & Y contains maybe the struct ; X contains others thing ; RES contains the id of the function BRK_KERNEL XCALL","title":"XOPENLIB"},{"location":"dynamiclink/dynlibformat/","text":"Dynamic lib format Relocatable format. name_lib .res 14 version_lib ; ascii .res 6 version_num ; .res 2 number_of_function .res 1 ; d\u00e9finition des fonctions de la lib entry_1 .res 4 ; offset dans le fichier entry_2 .res 4 ; offset dans le fichier","title":"Dynamic lib format"},{"location":"dynamiclink/dynlibformat/#dynamic-lib-format","text":"Relocatable format. name_lib .res 14 version_lib ; ascii .res 6 version_num ; .res 2 number_of_function .res 1 ; d\u00e9finition des fonctions de la lib entry_1 .res 4 ; offset dans le fichier entry_2 .res 4 ; offset dans le fichier","title":"Dynamic lib format"}]}