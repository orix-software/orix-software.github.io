{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"General information Install environment development for developers Getting-started Kernel primitives Primitives Tools Doxygen for kernel . Samples for kernel calls Get ctrl+c hook .include \"telestrat.inc\" asl KBDCTC bcc @no_ctrl ; here is ctrl management @no_ctrl: rts Test kernel Error when fopen failed ; Open ... BRK_KERNEL XOPEN cpy #$00 bne @read_rom cmp #$00 bne @read_rom ldx #$04 ; Get kernel ERRNO BRK_KERNEL XVARS sta userzp sty userzp+1 ldy #$00 lda (userzp),y ; get ERRNO from kernel cmp #ENOMEM bne @no_enomem_kernel_error PRINT str_enomem @no_enomem_kernel_error: cmp #ENOENT bne @no_enoent_kernel_error PRINT str_not_found Stop output when spacebar is pressed (for example) .include \"telestrat.inc\" @L12: BRK_KERNEL XRD0 bcs @no_char_action cmp #' ' ; Space pressed ? bne @no_char ; no continue lda myOffsetToManageSwitch ; One byte beq @inv_to_1 lda #$00 sta myOffsetToManageSwitch jmp @L12 @inv_to_1: inc myOffsetToManageSwitch jmp @L12 @no_char_action: lda myOffsetToManageSwitch beq @L12 @no_char: ; No keypressed Displays a string lda #<mystr ldy #>mystr BRK_KERNEL XWRSTR0 rts mysstr: .asciiz \"hello\"","title":"General information"},{"location":"#general-information","text":"","title":"General information"},{"location":"#install-environment-development-for-developers","text":"Getting-started","title":"Install environment development for developers"},{"location":"#kernel-primitives","text":"Primitives Tools Doxygen for kernel .","title":"Kernel primitives"},{"location":"#samples-for-kernel-calls","text":"","title":"Samples for kernel calls"},{"location":"#get-ctrlc-hook","text":".include \"telestrat.inc\" asl KBDCTC bcc @no_ctrl ; here is ctrl management @no_ctrl: rts","title":"Get ctrl+c hook"},{"location":"#test-kernel-error-when-fopen-failed","text":"; Open ... BRK_KERNEL XOPEN cpy #$00 bne @read_rom cmp #$00 bne @read_rom ldx #$04 ; Get kernel ERRNO BRK_KERNEL XVARS sta userzp sty userzp+1 ldy #$00 lda (userzp),y ; get ERRNO from kernel cmp #ENOMEM bne @no_enomem_kernel_error PRINT str_enomem @no_enomem_kernel_error: cmp #ENOENT bne @no_enoent_kernel_error PRINT str_not_found","title":"Test kernel Error when fopen failed"},{"location":"#stop-output-when-spacebar-is-pressed-for-example","text":".include \"telestrat.inc\" @L12: BRK_KERNEL XRD0 bcs @no_char_action cmp #' ' ; Space pressed ? bne @no_char ; no continue lda myOffsetToManageSwitch ; One byte beq @inv_to_1 lda #$00 sta myOffsetToManageSwitch jmp @L12 @inv_to_1: inc myOffsetToManageSwitch jmp @L12 @no_char_action: lda myOffsetToManageSwitch beq @L12 @no_char: ; No keypressed","title":"Stop output when spacebar is pressed (for example)"},{"location":"#displays-a-string","text":"lda #<mystr ldy #>mystr BRK_KERNEL XWRSTR0 rts mysstr: .asciiz \"hello\"","title":"Displays a string"},{"location":"return/","text":"Return to main documentation Main documentation","title":"Return to main documentation"},{"location":"return/#return-to-main-documentation","text":"Main documentation","title":"Return to main documentation"},{"location":"primitives/","text":"Summary Args from commandline XMAINARGS : get command line and build argv/argc XGETARGV : get an argv from xmainargs struct Numbers XBINDX : convert a number to decimal Memory XMALLOC XFREE Files XOPEN : Open a file","title":"Summary"},{"location":"primitives/#summary","text":"","title":"Summary"},{"location":"primitives/#args-from-commandline","text":"XMAINARGS : get command line and build argv/argc XGETARGV : get an argv from xmainargs struct","title":"Args from commandline"},{"location":"primitives/#numbers","text":"XBINDX : convert a number to decimal","title":"Numbers"},{"location":"primitives/#memory","text":"XMALLOC XFREE","title":"Memory"},{"location":"primitives/#files","text":"XOPEN : Open a file","title":"Files"},{"location":"primitives/xbindx/","text":"XBINDX (16 bytes to decimal) Description convert A & Y number into decimal Input A & Y the 16 bits values TR5 the pointer of the address to put decimal number DEFAFF : space before the number X : xxx Output A,TR4, TR5 Example lda #<$bb80 sta TR5 lda #>$bb80 sta TR5+1 lda #$20 sta DEFAFF ldx #$01 ldy #$00 lda #$10 BRK_KERNEL XBINDX rts","title":"XBINDX (16 bytes to decimal)"},{"location":"primitives/xbindx/#xbindx-16-bytes-to-decimal","text":"","title":"XBINDX (16 bytes to decimal)"},{"location":"primitives/xbindx/#description","text":"convert A & Y number into decimal","title":"Description"},{"location":"primitives/xbindx/#input","text":"A & Y the 16 bits values TR5 the pointer of the address to put decimal number DEFAFF : space before the number X : xxx","title":"Input"},{"location":"primitives/xbindx/#output","text":"A,TR4, TR5","title":"Output"},{"location":"primitives/xbindx/#example","text":"lda #<$bb80 sta TR5 lda #>$bb80 sta TR5+1 lda #$20 sta DEFAFF ldx #$01 ldy #$00 lda #$10 BRK_KERNEL XBINDX rts","title":"Example"},{"location":"primitives/xexec/","text":"XEXEC Description Start a binary (located in a ROM or on the current device) Input A & Y the ptr of the string. Output Returns an error if the binary is not found Example lda #<str ldy #>str BRK_KERNEL XEXEC rts str: .asciiz \"mybin\"","title":"XEXEC"},{"location":"primitives/xexec/#xexec","text":"","title":"XEXEC"},{"location":"primitives/xexec/#description","text":"Start a binary (located in a ROM or on the current device)","title":"Description"},{"location":"primitives/xexec/#input","text":"A & Y the ptr of the string.","title":"Input"},{"location":"primitives/xexec/#output","text":"Returns an error if the binary is not found","title":"Output"},{"location":"primitives/xexec/#example","text":"lda #<str ldy #>str BRK_KERNEL XEXEC rts str: .asciiz \"mybin\"","title":"Example"},{"location":"primitives/xgetargv/","text":"XGETARGV Description Get argv. X register contains the number of the arg search Input A & Y the ptr of struct from XMAINARGS X the number of arg to get Output A & Y contains argv ptr from xmainargs struct. It returns a copy of the command line with args parsed Example XMAINARGS = $2C XGETARGV = $2E BRK_KERNEL XMAINARGS sta debug_mainargs_ptr sty debug_mainargs_ptr+1 ldx #$02 ; get arg 2 lda debug_mainargs_ptr ldy debug_mainargs_ptr+1 BRK_KERNEL XGETARGV ; A & Y contains ptr","title":"XGETARGV"},{"location":"primitives/xgetargv/#xgetargv","text":"","title":"XGETARGV"},{"location":"primitives/xgetargv/#description","text":"Get argv. X register contains the number of the arg search","title":"Description"},{"location":"primitives/xgetargv/#input","text":"A & Y the ptr of struct from XMAINARGS X the number of arg to get","title":"Input"},{"location":"primitives/xgetargv/#output","text":"A & Y contains argv ptr from xmainargs struct. It returns a copy of the command line with args parsed","title":"Output"},{"location":"primitives/xgetargv/#example","text":"XMAINARGS = $2C XGETARGV = $2E BRK_KERNEL XMAINARGS sta debug_mainargs_ptr sty debug_mainargs_ptr+1 ldx #$02 ; get arg 2 lda debug_mainargs_ptr ldy debug_mainargs_ptr+1 BRK_KERNEL XGETARGV ; A & Y contains ptr","title":"Example"},{"location":"primitives/xgetcwd/","text":"XGETTCWD (getcwd) Description Return current directory of the process Input Output A/Y returns a string Example ``` ca65 BRK_KERNEL XGETCWD BRK_KERNEL XWSTR0 rts","title":"XGETTCWD (getcwd)"},{"location":"primitives/xgetcwd/#xgettcwd-getcwd","text":"","title":"XGETTCWD (getcwd)"},{"location":"primitives/xgetcwd/#description","text":"Return current directory of the process","title":"Description"},{"location":"primitives/xgetcwd/#input","text":"","title":"Input"},{"location":"primitives/xgetcwd/#output","text":"A/Y returns a string","title":"Output"},{"location":"primitives/xgetcwd/#example","text":"``` ca65 BRK_KERNEL XGETCWD BRK_KERNEL XWSTR0 rts","title":"Example"},{"location":"primitives/xmainargs/","text":"XMAINARGS (argmains) ID primitive : $2C Description Return argc and argv Input Nothing Output A & Y contains ptr to XMAINARGS Struct X: number of args Usage XMAINARGS = $2C brk_kernel XMAINARGS stx save_argc sta save_argvlow sty save_argvhigh","title":"XMAINARGS (argmains)"},{"location":"primitives/xmainargs/#xmainargs-argmains","text":"ID primitive : $2C","title":"XMAINARGS (argmains)"},{"location":"primitives/xmainargs/#description","text":"Return argc and argv","title":"Description"},{"location":"primitives/xmainargs/#input","text":"Nothing","title":"Input"},{"location":"primitives/xmainargs/#output","text":"A & Y contains ptr to XMAINARGS Struct X: number of args","title":"Output"},{"location":"primitives/xmainargs/#usage","text":"XMAINARGS = $2C brk_kernel XMAINARGS stx save_argc sta save_argvlow sty save_argvhigh","title":"Usage"},{"location":"primitives/xmalloc/","text":"XMALLOC (malloc) Description Allocate memory. Use orix-sdk with macro to handle XMALLOC Input A and Y : number of bytes Output A&Y = $0000 : OOM or others errors else A&Y : ptr Usage lda #<4000 ldy #>4000 BRK_TELEMON XMALLOC ; A & Y contains a ptr rts","title":"XMALLOC (malloc)"},{"location":"primitives/xmalloc/#xmalloc-malloc","text":"","title":"XMALLOC (malloc)"},{"location":"primitives/xmalloc/#description","text":"Allocate memory. Use orix-sdk with macro to handle XMALLOC","title":"Description"},{"location":"primitives/xmalloc/#input","text":"A and Y : number of bytes","title":"Input"},{"location":"primitives/xmalloc/#output","text":"A&Y = $0000 : OOM or others errors else A&Y : ptr","title":"Output"},{"location":"primitives/xmalloc/#usage","text":"lda #<4000 ldy #>4000 BRK_TELEMON XMALLOC ; A & Y contains a ptr rts","title":"Usage"},{"location":"primitives/xmkdir/","text":"XMKDIR (mkdir) ID primitive : $4B Description Create a folder. But it does not support absolute path for instance. It can only create path in the current path. Input A and Y : ptr of the string Output Return #ENODEV if the device can't be mount Usage lda #<str ldy #>str BRK_TELEMON XMKDIR rts str: .asciiz \"myfolder\"","title":"XMKDIR (mkdir)"},{"location":"primitives/xmkdir/#xmkdir-mkdir","text":"ID primitive : $4B","title":"XMKDIR (mkdir)"},{"location":"primitives/xmkdir/#description","text":"Create a folder. But it does not support absolute path for instance. It can only create path in the current path.","title":"Description"},{"location":"primitives/xmkdir/#input","text":"A and Y : ptr of the string","title":"Input"},{"location":"primitives/xmkdir/#output","text":"Return #ENODEV if the device can't be mount","title":"Output"},{"location":"primitives/xmkdir/#usage","text":"lda #<str ldy #>str BRK_TELEMON XMKDIR rts str: .asciiz \"myfolder\"","title":"Usage"},{"location":"primitives/xputcwd/","text":"XPUTCWD (chdir) Description Change current process directory Input A & Y the 16 bits values (string with \\0) Output N/A Example lda #<str ldy #>str BRK_KERNEL XPUTCWD rts str: .asciiz \"/etc\"","title":"XPUTCWD (chdir)"},{"location":"primitives/xputcwd/#xputcwd-chdir","text":"","title":"XPUTCWD (chdir)"},{"location":"primitives/xputcwd/#description","text":"Change current process directory","title":"Description"},{"location":"primitives/xputcwd/#input","text":"A & Y the 16 bits values (string with \\0)","title":"Input"},{"location":"primitives/xputcwd/#output","text":"N/A","title":"Output"},{"location":"primitives/xputcwd/#example","text":"lda #<str ldy #>str BRK_KERNEL XPUTCWD rts str: .asciiz \"/etc\"","title":"Example"},{"location":"primitives/xscrob/","text":"XSCROB (Scroll down) Scroll all lines from the top to the bottom ldx #$01 ldy #25 BRK_KERNEL XSCROB","title":"XSCROB (Scroll down)"},{"location":"primitives/xscrob/#xscrob-scroll-down","text":"Scroll all lines from the top to the bottom ldx #$01 ldy #25 BRK_KERNEL XSCROB","title":"XSCROB (Scroll down)"},{"location":"primitives/xscroh/","text":"XSCROH (Scrollup text mode) scroll all lines from bottom to the top ldx #$01 ldy #26 BRK_KERNEL XSCROH","title":"XSCROH (Scrollup text mode)"},{"location":"primitives/xscroh/#xscroh-scrollup-text-mode","text":"scroll all lines from bottom to the top ldx #$01 ldy #26 BRK_KERNEL XSCROH","title":"XSCROH (Scrollup text mode)"}]}