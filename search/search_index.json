{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#news","title":"News","text":"<p>[06-11-2023] Telestrat mode had been released : Download telstrat&amp; Download stratsed disks and look at Telstrat manual </p> <p>[15-10-2023] Sedoric mode had been released : Download sedoric &amp; Download dsk-bank &amp; Download softwares and Sedoric manual </p> <p>[25-09-2023] Kernel 2023.3 and Shell 2023.3 had been released  : Notes</p> <p>Contact to have a board : jede[at]oric[dot]org</p>"},{"location":"#overview","title":"Overview","text":"<p>The twilighte board is a board which can be plug on a Oric atmos or Oric-1</p> <p></p> <p>Orix is an operating system which handles others programs in order to start all softwares available on the Oric.</p> <p>There are 4 modes :</p> <ul> <li>'Native mode binary' in order to start binary from command line</li> <li>basic10 and basic11 binaries which starts .tap file (Oric-1 for basic10, atmos for basic11) (manage read/write .tap file)</li> <li>ftdos command in order to start ftdos .dsk command (manage read .dsk file)</li> <li>sedoric command in order to start sedoric .dsk command (manage read .dsk file)</li> </ul>"},{"location":"hardware/","title":"Hardware","text":""},{"location":"hardware/#twilighte-board","title":"Twilighte board","text":"<p>The Twilighte board is an extra hardware connected on the the oric (Atmos or Oric-1), it improves Oric with hardware feature as eeprom (in system update), RAM, joysticks, usb controler.</p> <p>It handles 32 eeprom banks of 16KB and 32 Banks of 16KB for RAM. The architecture of hardware registers, joystick management has compatibility with Telestrat in order to have Oric working on Telestrat or Atmos.</p> Feature Availability <code>Sdcard</code> <code>Usbdrive storage</code> <code>Long filename</code> <code>Every usb device control</code> <code>2 Joysticks</code> <code>512KB RAM memory</code> <code>512KB eeprom memory</code> <code>Eeprom in system update</code>"},{"location":"menu/","title":"Getting started","text":""},{"location":"menu/#getting-started","title":"Getting started","text":""},{"location":"menu/#users-manuals","title":"Users manuals","text":"<p>Users manuals</p>"},{"location":"menu/#developers-manual","title":"developers manual","text":"<p>Developers manuals</p>"},{"location":"network/","title":"Carte r\u00e9seau ethernet pour Oric","text":""},{"location":"network/#carte-reseau-ethernet-pour-oric","title":"Carte r\u00e9seau ethernet pour Oric","text":"<ul> <li>vraie carte r\u00e9seau ethernet avec gestion de la stack tcp/ip hardware</li> <li>vitesse 40KB/sec du r\u00e9seau \u00e0 la ram, et 23KB du r\u00e9seau \u00e0 la sdcard</li> </ul> <p>En cours de dev, mais voici les choses en cours et en partie fonctionnel pour certains:</p> <ul> <li>Gestion du dhcp</li> <li>check du cable</li> <li>ifconfig</li> <li>resvctl pour voir le dns server ou le setter</li> <li>netcnf pour une vue de tous les param\u00e8tres</li> <li>curl</li> <li>dig</li> <li>serveur telnetd</li> <li>netstat</li> <li>nc : permet l'envoi de log sur du loghost</li> <li>ip</li> <li>mini browser</li> <li>ping</li> </ul> <p>Api r\u00e9seau possible \u00e0 l'avenir pour ses propres programmes.</p>"},{"location":"software/","title":"Software","text":""},{"location":"software/#software","title":"Software","text":""},{"location":"software/#orix","title":"Orix","text":"<p>Orix is the default (D)OS of the board when it plugged into the oric. Orix is a linux/unix style OS. It's the main OS which can help to start every others systems as oric-1 ROM, atmos ROM etc</p> <p>Orix must have at least 2 banks to boot : Kernel and shell.</p> <p>Kernel is a bank inserted in the 7th slot and it's the first start to boot. Shell is the 5th bank and contains sh binary.</p> <p>When system starts, kernel forks \"sh\" commands at the end of the kernel initialisation. Shell is available and can starts any commands.</p> <p>There are 2 kind of rom :</p> <ul> <li> <p>Standalone ROM : it does not need to call kernel primitive, and manage all the main memory (for example : atmos ROM)</p> </li> <li> <p>Orix Roms : in that case, rom does not manage the main memory, and calls kernel to do tasks (for example : Shell roms).</p> </li> </ul> <p>In Orix roms, the rom declares commands to an offset in the bank and can be accessed from command line. If any command are typed from prompt, kernel will launch \"XEXEC\" primitive to find in any rom where the command is.</p> Feature Availability <code>Multitasking</code> <code>Long filename management</code>"},{"location":"binaries/generateBinary/","title":"Generate a binary for sdcard/usb key","text":""},{"location":"binaries/generateBinary/#build-a-binary-from-cc65-or-assembly-located-on-sdcard","title":"Build a binary from cc65 or assembly located on sdcard","text":"<p>cc65 generates a non relocation format for telestrat target.</p> <p>We decided to stop this format in the kernel v2022.4 because it was too complex to manage it in a kernel which use dynamic memory allocation.</p> <p>In order to generate a launchable binary, relocbin must be used : https://github.com/assinie/orix-sdk/blob/master/bin/relocbin.py3</p>"},{"location":"binaries/generateBinary/#step-one-build-your-binary-from-cc65-with-the-start-address-80","title":"Step one : build your binary from cc65 with the start address $80","text":"<pre><code>cl65 -ttelestrat mysrc.c -o mysrc_800 --start-addr \\$800\n</code></pre>"},{"location":"binaries/generateBinary/#step-two-build-your-binary-from-cc65-with-the-start-address-900","title":"Step Two : build your binary from cc65 with the start address $900","text":"<pre><code>/# cl65 -ttelestrat mysrc.c -o mysrc_900 --start-addr \\$900\n</code></pre>"},{"location":"binaries/generateBinary/#step-three-last-one-generate-the-relocation-format","title":"Step three (last one) : generate the relocation format:","text":"<pre><code>/#python relocbin.py3 -2 -o mybin mysrc_800 mysrc_900\n</code></pre> <p>Place mybin in /bin of the sdcard/usb key of the twilighte board, and launch :</p> <pre><code>/#mybin\n</code></pre>"},{"location":"commands/asm2k2/","title":"asm2k2","text":""},{"location":"commands/asm2k2/#asm2k2","title":"asm2k2","text":"<p>launch asm2k2 demo</p> <p>/#asm2k2</p>"},{"location":"commands/bank/","title":"bank","text":""},{"location":"commands/bank/#bank","title":"bank","text":""},{"location":"commands/bank/#introduction","title":"Introduction","text":"<p>Bank command is command line tool to see which bank are loaded into EEPROM bank and RAM bank. Each bank has a \"signature\". Bank allows to see theses signatures. Bank can also start a ROM with his identifier. In that case, you don't need to have a rom \"orix friendly\" and you can start it from command line.</p>"},{"location":"commands/bank/#synopsys","title":"SYNOPSYS","text":""},{"location":"commands/bank/#list-all-bank-when-rom-signature-is-valid","title":"List all bank (when ROM signature is valid)","text":"<pre><code>/#bank\n</code></pre> <p>Bank 1 to 32 are eeprom banks and banks from 33 to 64 are ram banks</p>"},{"location":"commands/bank/#displays-all-signature-even-when-rom-is-not-valid","title":"Displays all signature even when ROM is not valid","text":"<pre><code>/#bank\n</code></pre>"},{"location":"commands/bank/#list-all-commands-from-a-bank","title":"List all commands from a bank","text":"<pre><code>/#help -b5\n</code></pre>"},{"location":"commands/bank/#start-a-specific-bank","title":"Start a specific bank","text":"<pre><code>/#bank 1\n</code></pre> <p>If you need to load a rom into a bank, you need to have a look to orixcfg binar</p>"},{"location":"commands/bank/#description","title":"DESCRIPTION","text":"<p>This command displays bank when the command is called without parameter. WIth a parameter, you can switch to a the id of the bank passed to the argument :</p> <p>bank : displays all the bank (if a signature is found) bank 4 : switch to bank 4 bank -a : displauys all bank (empty bank too)</p>"},{"location":"commands/bank/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/bank.asm</p>"},{"location":"commands/barboric/","title":"barboric","text":""},{"location":"commands/barboric/#barboricbarbitoric-demo","title":"Barboric/Barbitoric demo","text":"<p>Launch barbitoric demo from orix (sdcard/usbdrive)</p> <p>/# barboric</p>"},{"location":"commands/basic10/","title":"basic10","text":""},{"location":"commands/basic10/#basic10","title":"basic10","text":""},{"location":"commands/basic10/#introduction","title":"Introduction","text":"<p>Start Oric-1 rom</p>"},{"location":"commands/basic10/#synopsys","title":"SYNOPSYS","text":"<ul> <li>basic10</li> <li>basic10 -g</li> <li>basic10 -l</li> <li>basic10 \"MYTAPE</li> </ul>"},{"location":"commands/basic10/#description","title":"DESCRIPTION","text":"<p>This command starts the Oric-1 rom. This rom did not test RAM and cload/csave are done on sdcard. It means that it calls file from sdcard.</p> <p>Cload works with .tap file. Multitap files works too.</p> <p>Get a tape file, and place it in the root folder of the sdcard.</p> <p>When there is no parameter, basic10 has /home/basic10 default folder</p> <p>Starts basic10 : /#basic10 or /#basic10 \"DEFENDER</p> <p>CLOAD\"ZORGONS =&gt; it will load zorgons.tap</p>"},{"location":"commands/basic10/#working-software","title":"Working software","text":"<ul> <li>all games except the Hobbit (another ROM is available)</li> </ul>"},{"location":"commands/basic10/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/basic10.asm</p>"},{"location":"commands/basic11/","title":"basic11","text":""},{"location":"commands/basic11/#basic11","title":"basic11","text":""},{"location":"commands/basic11/#introduction","title":"Introduction","text":"<p>basic11 starts Atmos rom. You can type basic11 or press FUNCT+B to start.</p> <p>Load a personal .tap file. When you starts basic11 commands, the default path is \"/home/basic11/\". Each action on the basic11 mode will be done in this folder (cload/csave). If you cload a tape file, it must be in \"/home/basic11\" folder.</p> <p>You have downloaded a .tap file, and want to use it. Then, you can create a folder /home/basic11/</p> <p>Under Orix</p> <pre><code>/#mkdir home\n/#cd home\n/home#mkdir basic11\n/home#cd basic11\n</code></pre> <p>Put your file in this folder from your PC, and start basic11 (you don't need to be in the \"/home/basic11\" folder to start basic11 with no parameter. By default, basic11 starts in \"/home/basic11/\" Oric.org tape file</p> <p>When you downloaded sdcard.tgz and unzip it into sdcard or usbkey device, there is many tape file included in this archive. You don't need to move these type file, if you know the key, you can starts it from commands line. In this case, it will load the correct basic1.1 rom to start the tape file (see below), and the correct joystick configuration if it's correct. Oric.org tape file update</p> <p>Each week a new software.tgz is generated. You can download it from \"repo \" and unzip it on the device. It will generate last tape file and last joysticks configuration. Search a tape file from command line</p> <p>Basic11 has also many.tap files inserted in sdcard.tgz</p> <p>A software key can be found  -l.</p> <pre><code>/#basic11 -l\n</code></pre> <p>Space to do a pause.</p> <p>When the searched software is found on the screen, a ctrl+c returns to command line</p> <p>The key can be inserted to launch the software.</p> <pre><code>/#basic11 \"KEYDISPLAYED\n</code></pre> <p>When KEYDISPLAYED is the key displayed in key column. Please note that the key must be in UPPERCASE Load a tap file from command line Note that MYFILE must be in UPPERCASE</p> <pre><code>/#basic11 \"MYFILE\n</code></pre> <p>If MYFILE is in the oric.org database, it will launch the software with the filename MYFILE. If basic11 command does not find MYFILE in the oric.org database, it will try to load it from \"/home/basic11/\" folder. Save your program If you start \"basic11\" with no options, basic rom will starts and each csave (or cload) actions will store files in \"/home/basic11\" folder</p>"},{"location":"commands/basic11/#start-basic11-menu","title":"Start basic11 menu","text":"<p>If you type \"basic11 -g\" on command line or FUNCT+G, you will have a menu with all software which have a download link on oric.org (only atmos version and when a tape file is available).</p> <pre><code>/#basic11 -g\n</code></pre> <p>You can use left and right letters to change to a new letter. If the letter is empty, it means that there is no available tap file for this letter. You can use up and down link to navigate into software. If you press enter, the software will starts. Note that not all games are working yet. Some times, chars are corrupted. If the joysticks does not works, there is two case :</p> <ul> <li>the game does not call rom routine to manage keyboard</li> <li>keyboard mapping is not done yet You can use arrows to navigate into the menu :</li> <li>up and down to select the software</li> <li>right and left to switch to the menu letters Some letters are empty. It means that there is no software with tape file available on oric.org for this letter Quit basic11 If you want to quit basic11 from interpreter command line, you can type \"QUIT\". This will force to reboot to Orix (you can also use reset button)</li> </ul>"},{"location":"commands/basic11/#how-the-tap-file-starts","title":"How the .tap file starts","text":"<p>If you only type \"basic11\", this will start bank 6 (normal basic rom). The default folder in that case is \"/home/basic11\" If you type \"basic11 \" with a tape file as an argument, there is 2 cases</p> <ol> <li> <p>The tape file (key) is already known in oric.org website, then basic11 try to find it in its databank file (/var/cache/basic11/ folder). If the key is found, it will start the tape file located in \"/usr/share/basic11/...\"</p> </li> <li> <p>If the key is unknown, it will try to find it in \"/home/basic11\" If the tap file is in the oric.org db file, basic11 will load the software configuration from the db software file (as joystick configuration, and the id of the rom). Basic11 load the right rom into ram bank, override the default basic11 path to the tape file folder (\"usr/share/basic11/[firstletter software]). It means that if you load this kind of software and you can quit the software, each file action in basic11 rom, will be performed in \"usr/share/basic11/[firstletter software].\" Not working tapes (for instance)</p> </li> </ol> <p>All Oric-1 games can be started with FUNCT+L in ROM menu : start oric-1 (depending of your device), and put .tap files in /home/basic10</p>"},{"location":"commands/basic11/#software-which-does-not-work","title":"Software which does not work","text":"<ul> <li>Cobra</li> <li>Cobra pinball</li> <li>Le diamant de l'ile maudite</li> <li>Durendal</li> <li>HU*BERT</li> <li>Schtroumpfs (Missing file for the tape file on Oric.org: SCH.BIN)</li> <li>Stanley (special loading routine)</li> <li>Them</li> <li>Titan</li> <li>Visif</li> <li>Dig Dog (Write into $c000 - RAM which is possible from the loader)</li> <li>Volcanic demo</li> <li>Clavidact</li> </ul>"},{"location":"commands/basic11/#strange-behavior","title":"Strange behavior","text":"<p>Kryllis : when we lost one life, the game does not restart Psychiatric : image on the top of score is corrupted MARC : corrupted image</p>"},{"location":"commands/basic11/#tape-with-altered-charset","title":"Tape with altered charset","text":"<p>Fire flash, Scuba Dive, 3D fongus (i,f letters)</p>"},{"location":"commands/basic11/#some-informations-to-start-tap-file","title":"Some informations to start .tap file","text":"<ul> <li>Le tr\u00e9sor du pirate : check information on www.oric.org (on \"Tr\u00e9sor du pirate\" software page), it explains on to proceed when the games is CLOAD'ed</li> </ul>"},{"location":"commands/basic11/#joysticks-issues","title":"Joysticks issues","text":"<p>We did keyboard/joystick mapping for a lot of games, but we did not set the keyboard mapping for all software. If you want to help us, contact us. Some game does not work because they handle their own keyboard routine. It could be handle with hardware tricks but, it's not done. Some others games uses special keys (SHIFT, CTRL) for direction or the first button. Theses cases are not handle yet : but it could in the future.</p>"},{"location":"commands/basic11/#synopsys","title":"SYNOPSYS","text":"<ul> <li>basic11</li> <li>basic11 -g</li> <li>basic11 -l</li> <li>basic11 \"MYTAPE</li> </ul>"},{"location":"commands/basic11/#description","title":"DESCRIPTION","text":"<p>This command starts the atmos rom. This rom did not test RAM and cload/csave are done on sdcard. It means that it calls file from sdcard.</p> <p>Cload works with .tap file. Multitap files works too.</p> <p>Get a tape file, and place it in the root folder of the sdcard.</p> <p>Starts basic11 : /#basic11 or /#basic11 \"DEFENDER\"</p> <p>CLOAD\"ZORGONS =&gt; it will load zorgons.tap</p>"},{"location":"commands/basic11/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/basic11.asm</p>"},{"location":"commands/blakes7/","title":"blakes7","text":""},{"location":"commands/blakes7/#blakes7","title":"Blakes7","text":""},{"location":"commands/blakes7/#description","title":"Description","text":"<p>Start Blakes7</p> <pre><code>/#blakes7\n</code></pre> <p>If you want to remove your saved game :</p> <pre><code>/#cd /usr/share/blakes7\n/usr/share/blakes7# rm 136.o\n</code></pre>"},{"location":"commands/blakes7/#check-the-version","title":"Check the version","text":"<pre><code>/#blakes7 -v\n</code></pre>"},{"location":"commands/bootfd/","title":"bootfd","text":""},{"location":"commands/bootfd/#command-bootfd","title":"Command: bootfd","text":""},{"location":"commands/bootfd/#starts-microdisc-bootsector","title":"Starts microdisc bootsector","text":"<p>bootfd is a tool to boot the boot sector when a drive is connected. Insert a disk and type\u00a0:</p> <p>/#bootfd</p> <p>The binary is located in \"/bin\" folder. It will load microdisc rom and will start it. If it displays \"microdis.rom not found\", then place \"microdis.rom\" file in the right folder.</p> <p>If you have firmware 1, you will be able to load \u00ab\u00a0blake's 7\u00a0\u00bb. If you have firmware 2, all sedoric .dsk should start.</p> <p>For instance, only Space99 does not work, it stops after intro.</p>"},{"location":"commands/bootfd/#synopsys","title":"SYNOPSYS","text":"<ul> <li>bootfd</li> </ul>"},{"location":"commands/bootfd/#examples","title":"EXAMPLES","text":"<ul> <li>bootfd</li> </ul> <p>Boots only microdisc boot sector with the help of microdisc.rom. In this version, we don't verify if a dsk is inserted or not. If there is no disk, the oric will crash</p>"},{"location":"commands/bootfd/#source","title":"SOURCE","text":"<p>Src code : https://github.com/orix-software/bootfd.git (Assembly and C)</p>"},{"location":"commands/born1983/","title":"born1983","text":""},{"location":"commands/born1983/#born1983","title":"Born1983","text":"<p>Launch born 1983 demo</p> <p>/#born1983</p>"},{"location":"commands/cat/","title":"cat","text":""},{"location":"commands/cat/#cat","title":"cat","text":""},{"location":"commands/cat/#introduction","title":"Introduction","text":"<p>Display a file to the screen</p>"},{"location":"commands/cat/#synopsys","title":"SYNOPSYS","text":"<ul> <li>cat FILENAME</li> </ul>"},{"location":"commands/cat/#notes","title":"NOTES","text":"<p>Displays content of the FILENAME</p>"},{"location":"commands/cat/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/cat.asm</p>"},{"location":"commands/cd/","title":"cd","text":""},{"location":"commands/cd/#cd","title":"cd","text":""},{"location":"commands/cd/#introduction","title":"INTRODUCTION","text":"<p>Change directory</p>"},{"location":"commands/cd/#synopsys","title":"SYNOPSYS","text":"<ul> <li>cd DIRECTORY</li> </ul>"},{"location":"commands/cd/#examples","title":"EXAMPLES","text":"<ul> <li>cd /usr/bin</li> <li>cd ..</li> <li>cd /</li> </ul>"},{"location":"commands/cd/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/cd.asm</p>"},{"location":"commands/cd/#images","title":"Images","text":""},{"location":"commands/cksum/","title":"cksum","text":""},{"location":"commands/cksum/#command-cksum","title":"Command: cksum","text":""},{"location":"commands/cksum/#checksum-utility","title":"checksum utility","text":""},{"location":"commands/cksum/#synopsys","title":"SYNOPSYS","text":"<ul> <li>cksum -h|-v</li> <li>cksum file [...]</li> <li>cksum @batchfile</li> </ul>"},{"location":"commands/cksum/#examples","title":"EXAMPLES","text":"<ul> <li>cksum /bin/cksum</li> </ul>"},{"location":"commands/cksum/#description","title":"DESCRIPTION","text":"<p>checksum and count the bytes in a file</p>"},{"location":"commands/cksum/#options","title":"OPTIONS","text":"<ul> <li>-h                 show this help message and exit</li> <li>-v                 display program version and exit</li> </ul>"},{"location":"commands/cksum/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/cksum</p>"},{"location":"commands/clear/","title":"clear","text":""},{"location":"commands/clear/#clear","title":"clear","text":""},{"location":"commands/clear/#introduction","title":"Introduction","text":"<p>Clear the screen</p>"},{"location":"commands/clear/#synopsys","title":"SYNOPSYS","text":"<ul> <li>clear</li> </ul>"},{"location":"commands/clear/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/clear.asm</p>"},{"location":"commands/cp/","title":"cp","text":""},{"location":"commands/cp/#cp","title":"cp","text":""},{"location":"commands/cp/#introduction","title":"Introduction","text":"<p>Copy a file to another file</p>"},{"location":"commands/cp/#synopsys","title":"SYNOPSYS","text":"<ul> <li>cp from to</li> </ul>"},{"location":"commands/cp/#description","title":"DESCRIPTION","text":"<p>Copy a file to another. Only 40KB can be copied. It's a software limit. cp tries to allocate 40KB, if there is not enough memory it displays Out of memory.</p>"},{"location":"commands/cp/#examples","title":"EXAMPLES","text":"<ul> <li>cp from.txt to.txt</li> </ul>"},{"location":"commands/cp/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/cp.asm</p>"},{"location":"commands/df/","title":"df","text":""},{"location":"commands/df/#df","title":"df","text":""},{"location":"commands/df/#description","title":"Description","text":"<p>Displays storage device informations.</p>"},{"location":"commands/df/#usage","title":"Usage","text":"<pre><code>    /# df\n</code></pre>"},{"location":"commands/dsk-util/","title":"dsk-util","text":""},{"location":"commands/dsk-util/#command-dsk-util","title":"Command: dsk-util","text":""},{"location":"commands/dsk-util/#disk-image-utility","title":"Disk image utility","text":""},{"location":"commands/dsk-util/#synopsys","title":"SYNOPSYS","text":"<ul> <li>dsk-util -f|-s file.dsk</li> <li>dsk-util -h</li> </ul>"},{"location":"commands/dsk-util/#examples","title":"EXAMPLES","text":"<ul> <li>dsk-util -f ftdos.dsk</li> <li>dsk-util -s sedoric3.dsk</li> </ul>"},{"location":"commands/dsk-util/#description","title":"DESCRIPTION","text":"<p>dsk-util display the directory of a disk image file.</p>"},{"location":"commands/dsk-util/#options","title":"OPTIONS","text":"<ul> <li>-h                 show this help message and exit</li> <li>-f                 FTDOS disk image</li> <li>-s                 Sedoric disk image</li> </ul>"},{"location":"commands/dsk-util/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/dsk-util</p>"},{"location":"commands/echo/","title":"echo","text":""},{"location":"commands/echo/#echo","title":"echo","text":""},{"location":"commands/echo/#introduction","title":"Introduction","text":"<p>Display a message</p>"},{"location":"commands/echo/#synopsys","title":"SYNOPSYS","text":"<ul> <li>echo hello</li> </ul>"},{"location":"commands/echo/#description","title":"DESCRIPTION","text":"<p>Display a message</p>"},{"location":"commands/echo/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/echo.asm</p>"},{"location":"commands/env/","title":"env","text":""},{"location":"commands/env/#env","title":"env","text":""},{"location":"commands/env/#introduction","title":"Introduction","text":"<p>Displays env variables</p>"},{"location":"commands/env/#synopsys","title":"SYNOPSYS","text":"<ul> <li>env</li> </ul>"},{"location":"commands/env/#description","title":"DESCRIPTION","text":"<p>Displays env variables. It can't be used in command line or shell script for instance</p>"},{"location":"commands/env/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/env.asm</p>"},{"location":"commands/forth/","title":"forth","text":""},{"location":"commands/forth/#command-forth","title":"Command: forth","text":"<p>Launch forth for Orix</p>"},{"location":"commands/forth/#synopsys","title":"SYNOPSYS","text":"<ul> <li>forth</li> </ul>"},{"location":"commands/forth/#description","title":"DESCRIPTION","text":"<p>Forth is a language based on teleforth (telestrat). You can type VLIST to list all words. If you need to switch to hires, you can type GRAFX and HIRES. If you need to switch to text: GRAFX and TEXT</p> <p>You can use forth language. It works the same ways than Tele forth (it's teleforth but it write file on sdcard/usbdrive).</p> <p>You can download Teleforth langage in order to see how to program in forth.</p> <p>When you type \u00ab\u00a0forth\u00a0\u00bb forth starts with the current folder directory.</p> <p>If you were in /, forth will load and save file in this folder.</p> <p>In others cases, you can create a forth folder in home and goes into it in forth for example\u00a0:</p> <ul> <li>mkdir home</li> <li> </li> <li> </li> <li>forth</li> </ul> <p>if you type \u00ab\u00a0cd\u00a0forth\u00bb in forth environnement, all files actions will be perform in \u00ab\u00a0/home/forth\u00a0\u00bb</p>"},{"location":"commands/forth/#cd-home","title":"cd home","text":""},{"location":"commands/forth/#mkdir-forth","title":"mkdir forth","text":""},{"location":"commands/forth/#source","title":"SOURCE","text":"<p>https://github.com/assinie/Tele-Forth</p>"},{"location":"commands/ftdos/","title":"ftdos","text":""},{"location":"commands/ftdos/#ftdos","title":"Ftdos","text":""},{"location":"commands/ftdos/#introduction","title":"Introduction","text":"<p>ftdos command starts ftdos .dsk file without jasmin floppy disc controler. It's a beta version.</p>"},{"location":"commands/ftdos/#usage","title":"Usage","text":"<p>To start a .dsk file</p> <p>/#ftdos mydsk</p> <p>To display the ftdos command version :</p> <p>/#ftdos -v</p> <p>ftdos disks must be present in /home/basic11/dsk/</p>"},{"location":"commands/ftdos/#informations","title":"Informations","text":"<ul> <li>Write on .dsk file is not supported</li> <li>refers to ftdos manual for usages</li> <li>you need to switch off/on the oric when you reset into ftdos mode, because there is a bug when we reset during ftdos mode. Ftdos does not load and reboot into Orix</li> </ul>"},{"location":"commands/grep/","title":"grep","text":""},{"location":"commands/grep/#command-grep","title":"Command: grep","text":""},{"location":"commands/grep/#grep-utility","title":"grep utility","text":""},{"location":"commands/grep/#synopsys","title":"SYNOPSYS","text":"<ul> <li>grep [-ncisw] string filename</li> <li>grep -h</li> </ul>"},{"location":"commands/grep/#description","title":"DESCRIPTION","text":"<p>grep display all lines of a text file that contain a string.</p>"},{"location":"commands/grep/#options","title":"OPTIONS","text":"<ul> <li>-h^GDisplay command syntax</li> <li>-n^GShow line numbers</li> <li>-c^GCount only the matching lines</li> <li>-i^GIgnore case</li> <li>-w^GString can use wildcards *, ?, ^ and $</li> <li>-s^GSilent mode</li> </ul>"},{"location":"commands/grep/#examples","title":"EXAMPLES","text":"<ul> <li>grep error menu.sub</li> <li>grep -n \"level 1\" menu.sub</li> <li>grep -i ERROR menu.sub</li> <li>grep -ni 'level 2' menu.sub</li> <li>grep -w '*lev?? 2*'menu.sub</li> <li>grep -w '^if' menu.sub</li> <li>grep -w 'error$' menu.sub</li> <li>grep -w 'if*level ??' menu.sub</li> </ul>"},{"location":"commands/grep/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/grep</p>"},{"location":"commands/help/","title":"help","text":""},{"location":"commands/help/#help","title":"help","text":""},{"location":"commands/help/#introduction","title":"Introduction","text":"<p>Display commands stored in a bank</p>"},{"location":"commands/help/#synopsys","title":"SYNOPSYS","text":"<ul> <li>help</li> </ul>"},{"location":"commands/help/#displays-all-commands-from-bank-5","title":"Displays all commands from bank 5","text":"<ul> <li>help -b5</li> </ul>"},{"location":"commands/help/#description","title":"DESCRIPTION","text":"<ul> <li>No parameter : Displays all internals shell command</li> <li>bX parameter : Displays all internals commands in bank X</li> </ul>"},{"location":"commands/help/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/help.asm</p> <p></p>"},{"location":"commands/hexdump/","title":"hexdump","text":""},{"location":"commands/hexdump/#command-hexdump","title":"Command: hexdump","text":""},{"location":"commands/hexdump/#hexdump-utility","title":"hexdump utility","text":""},{"location":"commands/hexdump/#synopsys","title":"SYNOPSYS","text":"<ul> <li>hexdump -v</li> <li>hexdump -h</li> <li>hexdump -b bankid [,offset]</li> <li>hexdump file</li> </ul>"},{"location":"commands/hexdump/#examples","title":"EXAMPLES","text":"<ul> <li>hexdump /bin/hexdump</li> <li>hexdump -b 7</li> <li>hexdump -b 33,16128</li> </ul>"},{"location":"commands/hexdump/#description","title":"DESCRIPTION","text":"<p>Display file or bank contents in hexadecimal. You can use [SPACE] to pause the display ou [CTRL]+C to abort.</p>"},{"location":"commands/hexdump/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/hexdump</p>"},{"location":"commands/ioports/","title":"ioports","text":""},{"location":"commands/ioports/#ioports","title":"ioports","text":""},{"location":"commands/ioports/#introduction","title":"Introduction","text":"<p>Display I/O Ports of the board</p>"},{"location":"commands/ioports/#synopsys","title":"SYNOPSYS","text":"<ul> <li>/#ioports</li> </ul>"},{"location":"commands/ioports/#description","title":"DESCRIPTION","text":"<p>Displays I/O ports.</p>"},{"location":"commands/ioports/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/ioports.asm</p>"},{"location":"commands/list/","title":"list","text":""},{"location":"commands/list/#command-list","title":"Command: list","text":""},{"location":"commands/list/#list-utility","title":"LIST utility","text":""},{"location":"commands/list/#synopsys","title":"SYNOPSYS","text":"<ul> <li>list [-c] [+offset] file</li> </ul>"},{"location":"commands/list/#examples","title":"EXAMPLES","text":"<ul> <li>list /home/basic11/prog.bas</li> <li>list +19 scuba.tap</li> </ul>"},{"location":"commands/list/#description","title":"DESCRIPTION","text":"<p>Similar to LIST instruction of the BASIC ROM but for files. With +nnn you can go past the tape header of a tape file. You can use [SPACE] to pause the display ou [CTRL]+C to abort.</p>"},{"location":"commands/list/#options","title":"OPTIONS","text":"<ul> <li>-h                 show help message and exit</li> <li>-c                 Color</li> <li>+nnn         skip nnn bytes before starting the listing</li> </ul>"},{"location":"commands/list/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/list</p>"},{"location":"commands/loader/","title":"loader","text":""},{"location":"commands/loader/#loader","title":"Loader","text":"<p>Uses funct + L to launch the menu or type \"twiload\" if you have Oric-1 keyboard</p> <p>You can select the rom you want to start :</p> <ul> <li>For atmos (usbdrive or sdcard), root path of the rom is /home/basic11</li> <li>For Oric-1 (usbdrive or sdcard), root path of the rom is /home/basic10</li> <li>For Pravetzt (usbdrive or sdcard), root path of the rom is /home/pravetzt</li> </ul> <p>and others Roms</p>"},{"location":"commands/loader/#usage","title":"Usage","text":"<ul> <li>up/left arrow : move into list</li> <li>space : displays infos of the sofware if available</li> <li>ESC : quit loader</li> </ul>"},{"location":"commands/loader/#informations","title":"Informations","text":""},{"location":"commands/loader/#informations_1","title":"Informations","text":"<p>Loader can starts tape file as atmos .tap file by category (demo, games).</p> <p>Demo, games, tools, music categories displays atmos tape file and Oric-1 tapes files. It means that loader is able to start atmos software only and Oric-1 only.</p> <p>In order to avoid 2 softwares for Oric-1 and another one for atmos when it's available for theses 2 machines, the choice is that loader displays atmos tape file, and if the software does not exist on the atmos, Oric-1 version is displayed.</p> <p>Number of software for each category since 15/5/2022</p> <ul> <li>Roms : 60</li> <li>Demo : 35</li> <li>Games : 788</li> <li>Tools : 142</li> <li>Music : 80</li> </ul>"},{"location":"commands/ls/","title":"ls","text":""},{"location":"commands/ls/#ls","title":"ls","text":""},{"location":"commands/ls/#display-catalog","title":"Display catalog","text":"<p>List all the file in the current folder. Token are supported (*,?) ex : \u00ab ls ?e.tap \u00bb will list all files with a \u2018e \u2019 in the second letter</p>"},{"location":"commands/ls/#synopsys","title":"SYNOPSYS","text":"<p>list all the files in the current folder</p> <ul> <li>ls</li> </ul> <p>List all *.tap files</p> <ul> <li>ls *.tap</li> </ul> <p>List size and datetime of the file</p> <ul> <li>ls -l</li> </ul>"},{"location":"commands/ls/#description","title":"DESCRIPTION","text":"<p>Directories are in <sup>FBLUE</sup>G color. It  manages '-l' and Pattern works in different ways : ls *.tap</p>"},{"location":"commands/ls/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/ls.asm</p>"},{"location":"commands/lscpu/","title":"lscpu","text":""},{"location":"commands/lscpu/#lscpu","title":"lscpu","text":""},{"location":"commands/lscpu/#introduction","title":"Introduction","text":"<p>Displays cpu info. It detects : 6502, 65c02 and 65816</p>"},{"location":"commands/lscpu/#synopsys","title":"SYNOPSYS","text":"<ul> <li>lscpu</li> </ul>"},{"location":"commands/lscpu/#description","title":"DESCRIPTION","text":"<p>Displays cpu info</p>"},{"location":"commands/lscpu/#examples","title":"EXAMPLES","text":"<ul> <li>lscpu</li> </ul>"},{"location":"commands/lscpu/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/lscpu.asm</p> <p></p>"},{"location":"commands/lsmem/","title":"lsmem","text":""},{"location":"commands/lsmem/#lsmem","title":"lsmem","text":""},{"location":"commands/lsmem/#introduction","title":"Introduction","text":"<p>Displays malloc table</p>"},{"location":"commands/lsmem/#synopsys","title":"SYNOPSYS","text":"<ul> <li>lsmem</li> </ul>"},{"location":"commands/lsmem/#description","title":"DESCRIPTION","text":"<p>Displays malloc table. Free chunks and busy chuncks are displayed with ranges, and process name</p>"},{"location":"commands/lsmem/#examples","title":"EXAMPLES","text":"<ul> <li>lsmem</li> </ul>"},{"location":"commands/lsmem/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/lsmem.asm</p> <p></p>"},{"location":"commands/man/","title":"man","text":""},{"location":"commands/man/#man","title":"man","text":""},{"location":"commands/man/#introduction","title":"Introduction","text":"<p>display manual pages</p>"},{"location":"commands/man/#synopsys","title":"SYNOPSYS","text":"<ul> <li>man lsmem</li> </ul>"},{"location":"commands/man/#description","title":"DESCRIPTION","text":"<p>Displays manual. All .hlp files are located in /usr/share/man/. It manages multiples text screen (if .hlp is bigger than a screen when space is pressed, it switch to next page).</p>"},{"location":"commands/man/#keys","title":"Keys","text":"<ul> <li> <p>SPACE to switch to next page</p> </li> <li> <p>ESC to exit</p> </li> </ul>"},{"location":"commands/man/#examples","title":"EXAMPLES","text":"<ul> <li>man ls</li> </ul>"},{"location":"commands/man/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/man.asm</p>"},{"location":"commands/mkdir/","title":"mkdir","text":""},{"location":"commands/mkdir/#mkdir","title":"mkdir","text":""},{"location":"commands/mkdir/#introduction","title":"Introduction","text":"<p>Create a folder</p>"},{"location":"commands/mkdir/#synopsys","title":"SYNOPSYS","text":"<ul> <li>mkdir PATH</li> </ul>"},{"location":"commands/mkdir/#description","title":"DESCRIPTION","text":"<p>Create a folder. -p (recursive mode) option is not available</p>"},{"location":"commands/mkdir/#examples","title":"EXAMPLES","text":"<ul> <li>mkdir /opt</li> </ul>"},{"location":"commands/mkdir/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/mkdir.asm</p>"},{"location":"commands/more/","title":"more","text":""},{"location":"commands/more/#command-more","title":"Command: more","text":""},{"location":"commands/more/#more-utility","title":"more utility","text":""},{"location":"commands/more/#synopsys","title":"SYNOPSYS","text":"<ul> <li>more </li> </ul>"},{"location":"commands/more/#examples","title":"EXAMPLES","text":"<ul> <li>more /etc/autoboot.sub</li> </ul>"},{"location":"commands/more/#description","title":"DESCRIPTION","text":"<p>more display a text file one screenfull at a time.</p> <p>[RETURN] display next line.</p> <p>[CTRL]+C break.</p> <p>*q * quit.</p> <p>Any other keys: display next page.</p>"},{"location":"commands/more/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/more</p>"},{"location":"commands/mount/","title":"mount","text":""},{"location":"commands/mount/#mount","title":"mount","text":""},{"location":"commands/mount/#introduction","title":"Introduction","text":"<p>Displays mounts</p>"},{"location":"commands/mount/#synopsys","title":"SYNOPSYS","text":"<ul> <li>mount</li> </ul>"},{"location":"commands/mount/#description","title":"DESCRIPTION","text":"<p>Displays mount (usb key or sdcard)</p>"},{"location":"commands/mount/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/mount.asm</p>"},{"location":"commands/orixcfg/","title":"orixcfg","text":""},{"location":"commands/orixcfg/#orixcfg","title":"orixcfg","text":""},{"location":"commands/orixcfg/#introduction","title":"Introduction","text":"<p>Update kernel, shell: orixcfg</p> <p>When a new released is done, you can update the eeprom with the new kernel and new roms.</p> <p>If you want to know if you need to update the kernel, you can compare your current version, and the last release version. You can go to http://orix.oric.org</p> <p>The sequence of the Orix release is 'YYYY.X' (Year + release in the year). There is 4 releases a year, and each one must be done until you reach the final one, in order to avoid some case. If your version is v2020.3 and the last available version is v2023.1. You need to update to v2020.4, then v2021.1, v2021.2, v2021.3, v2021.4, v2022.1, v2022.4 and v2023.1.</p> <p>It's maybe possible to jump to version v2022.3, but it's at your own risk because there is a \"chance\" that some kernel calls changed, and orixcfg could do wrong step.</p> <p>When you need to update kernel, you can update it with orixcfg. You just need to define set 4 on the command line. This step is very dangerous if you don't load the right file. There is no verification and any file on the command line will be load in the kernel set.</p> <p>Usually, kernel set file is named kernxxxx.r64.</p> <p>If you did something wrong on this step, you won't be able to start orix again. It means that you will need to remove eeprom from the card and program it with a eeprom programmer.</p> <p>This next command will load kernel.r64 to kernel set. Please wait until Orix reboots. If you have a kernel 2020.3 and you need to load a kernel 2021,1, you will need to load previous kernel set before the update of 2021.1.</p> <p>.r64 extension means that it's a 64KB set. It's usually used to define that the file contains 4 roms of 16KB.</p> <p>Please note that we provide 2 kernels version. One named \"kernelsd.r64\" which means that the default device will be sdcard, and the other one \"kernelus.r64\" which means that default device will be \"usb\" (usbkey). If you load the wrong kernel at this step, you can use twil command to switch to the right device, and you can start again kernel update with the right file (kernelsd.r64 or kernelus.r64 depending of your configuration).</p>"},{"location":"commands/orixcfg/#update-kernel","title":"Update kernel","text":"<pre><code>orixcfg -k kernelsd.r64\n</code></pre> <p>\"orixcfg -r -s 4 file.r64\" is no longer supported for kernel update. -k flag only will manage kernel .r64 files. -k flag verify if file pased on command line is correct or not for kernel.</p>"},{"location":"commands/orixcfg/#load-a-rom-into-a-ram-slot","title":"Load a ROM into a ram slot","text":"<p>Space between values and switches are not optionnal, orixcfg needs theses spaces.</p> <pre><code>orixcfg -b XX -l myrom.rom\n</code></pre> <p>This command will load myrom.rom (in the current path), in RAM bank XX.</p> <p>Older usage as : orixcfg -r -s X -b Y myrom.rom is no longer included in orixcfg since orixcfg v2021.3</p>"},{"location":"commands/orixcfg/#load-a-set-of-rom-into-rom-slot","title":"Load a set of ROM into ROM slot","text":"<pre><code>orixcfg -r -s 0 myrom.r64\n</code></pre> <p>This command will load myrom.r64 (in the current path), in set 0. For instance, you can not load one bank, you need to load 64KB set.</p>"},{"location":"commands/orixcfg/#clear-bank-ram-or-initialize-it","title":"Clear bank ram or initialize it","text":"<p>Ram bank are not initialized when the board is tested. If you have garbage on screen when you uses bank (after you used twil -w). You have to clear all ram bank (ram bank are battery saved).</p> <p>If you want to clear bank 4 of the set 0, you can do this command. You need to do this command for each bank of each set. For instance, there is no switch to clear all the ram with one command.</p> <pre><code>orixcfg -w -s 0 -b 4 -c\n</code></pre>"},{"location":"commands/orixcfg/#flush-all-ram-bank","title":"Flush all ram bank","text":"<pre><code>orixcfg -w -f\n</code></pre>"},{"location":"commands/orixcfg/#supported-functions","title":"Supported functions","text":"<pre><code>| Device  | Banks | Write one bank |\n| SRAM    | 33-64 | Yes            |\n| 29F040  | 1-32  | No             |\n| 39SF040 | 1-32  | Yes            |\n</code></pre>"},{"location":"commands/orixcfg/#synopsys","title":"SYNOPSYS","text":"<ul> <li>orixcfg</li> </ul> <p>Load a .rom into RAM (in the example, set 0, bank 4)</p> <ul> <li>orixcfg -w -s 0 -b 4 myrom.rom</li> </ul> <p>Clear a ram bank (in the example, set 0, bank 4)</p> <ul> <li>orixcfg -w -s 0 -b 4 -c</li> </ul> <p>Load an eeprom set (in the example, set 0), only 64KB set</p> <ul> <li>orixcfg -r -s 0 myset.r64</li> </ul> <p>Update kernel</p> <ul> <li>orixcfg -r -s 4 kernelus.r64</li> </ul>"},{"location":"commands/orixcfg/#description","title":"DESCRIPTION","text":"<p>Manage twilighte board configuration</p>"},{"location":"commands/otimer/","title":"otimer","text":""},{"location":"commands/otimer/#otimer","title":"otimer","text":""},{"location":"commands/otimer/#introduction","title":"Introduction","text":"<p>Display timer since the Oric is power on</p>"},{"location":"commands/otimer/#synopsys","title":"SYNOPSYS","text":"<ul> <li>otimer</li> </ul>"},{"location":"commands/otimer/#notes","title":"NOTES","text":"<p>Each time Oric reboots, this timer is reset.</p>"},{"location":"commands/otimer/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/otimer.asm</p>"},{"location":"commands/ps/","title":"ps","text":""},{"location":"commands/ps/#ps","title":"ps","text":""},{"location":"commands/ps/#introduction","title":"Introduction","text":"<p>Displays process list</p>"},{"location":"commands/ps/#synopsys","title":"SYNOPSYS","text":"<ul> <li>ps</li> </ul>"},{"location":"commands/ps/#description","title":"DESCRIPTION","text":"<p>Displays process list</p>"},{"location":"commands/ps/#examples","title":"EXAMPLES","text":"<ul> <li>ps</li> </ul>"},{"location":"commands/ps/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/ps.asm</p>"},{"location":"commands/pwd/","title":"pwd","text":""},{"location":"commands/pwd/#pwd","title":"pwd","text":""},{"location":"commands/pwd/#introduction","title":"Introduction","text":"<p>Display the current path</p>"},{"location":"commands/pwd/#synopsys","title":"SYNOPSYS","text":"<ul> <li>pwd</li> </ul>"},{"location":"commands/pwd/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/pwd.asm</p>"},{"location":"commands/quintes/","title":"quintes","text":""},{"location":"commands/quintes/#quintessential-demo","title":"Quintessential demo","text":"<p>Start quintessential demo </p> <p>/#quintes</p>"},{"location":"commands/raw2dsk/","title":"raw2dsk","text":""},{"location":"commands/raw2dsk/#raw2dsk","title":"raw2dsk","text":""},{"location":"commands/raw2dsk/#raw2dsk-utility","title":"raw2dsk utility","text":""},{"location":"commands/raw2dsk/#synopsys","title":"SYNOPSYS","text":"<ul> <li>raw2dsk rawfile dskfile</li> </ul>"},{"location":"commands/raw2dsk/#examples","title":"EXAMPLES","text":"<ul> <li>raw2dsk dumpdsk.raw dumpdsk.dsk</li> </ul>"},{"location":"commands/raw2dsk/#description","title":"DESCRIPTION","text":"<p>raw2dsk convert raw floppy disk dump file to .dsk file</p>"},{"location":"commands/raw2dsk/#options","title":"OPTIONS","text":"<ul> <li>no options</li> </ul>"},{"location":"commands/raw2dsk/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/raw2dsk</p>"},{"location":"commands/readdsk/","title":"readdsk","text":""},{"location":"commands/readdsk/#readdsk","title":"Readdsk","text":"<p>Dump a real floppy disk. It needs a real floppy drive controler to be attached with twilighte board</p>"},{"location":"commands/readdsk/#usage","title":"Usage","text":"<p>readdsk myfile.raw</p> <ul> <li>-v : verbose</li> <li>-vv : more verbose, displays sectors content</li> <li>-h : this help</li> <li>-V : displays version</li> </ul> <p>readdsk produces a rawfile. raw2dsk must be launch to build a .dsk file</p>"},{"location":"commands/reboot/","title":"reboot","text":""},{"location":"commands/reboot/#reboot","title":"reboot","text":""},{"location":"commands/reboot/#introduction","title":"Introduction","text":"<p>reboot machine</p>"},{"location":"commands/reboot/#synopsys","title":"SYNOPSYS","text":"<ul> <li>reboot</li> </ul>"},{"location":"commands/reboot/#description","title":"DESCRIPTION","text":"<p>Reboot the machine: it call NMI VECTORS and flush page 2 and page 0</p>"},{"location":"commands/reboot/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/reboot.asm</p>"},{"location":"commands/rm/","title":"rm","text":""},{"location":"commands/rm/#rm","title":"rm","text":""},{"location":"commands/rm/#introduction","title":"Introduction","text":"<p>remove file</p>"},{"location":"commands/rm/#synopsys","title":"SYNOPSYS","text":"<ul> <li>/# rm /myfile</li> </ul>"},{"location":"commands/rm/#description","title":"DESCRIPTION","text":"<p>rm file or directory. For instance, rm can only remove file in root folder, relative arg does not work yet</p>"},{"location":"commands/rm/#examples","title":"EXAMPLES","text":"<ul> <li>rm /myffile</li> </ul>"},{"location":"commands/rm/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/rm.asm</p>"},{"location":"commands/sedoric/","title":"sedoric","text":""},{"location":"commands/sedoric/#sedoric","title":"Sedoric","text":"<p>Starts .dsk sedoric disk file</p>"},{"location":"commands/sedoric/#search-a-dsk-file-with-the-first-letter","title":"Search a dsk file with the first letter","text":"<pre><code>/#sedoric -l p\n</code></pre> <p>It will list all .dsk files with the letter 'p' on the first letter.</p> <p>If a personnal disk must be inserted : It can be put in any folder (as /home/sedoric) for example.</p> <p>then without .dsk file, sedoric will try to find .dsk in the right folder :</p> <pre><code>/#sedoric pulsoids\n</code></pre>"},{"location":"commands/sedoric/#start-a-disk-from-args","title":"Start a disk from args","text":"<pre><code>/#sedoric my.dsk\n</code></pre> <p>or</p> <pre><code>/#cd /usr/share/sedoric/p\n/usr/share/sedoric/p#sedoric pulsoids.dsk\n</code></pre>"},{"location":"commands/sedoric/#requirements","title":"Requirements","text":"<p>install/dsk file on twilighte board device:</p> <p>Download http://repo.orix.oric.org/dists/official/tgz/6502/softwares.tgz gunzip, untar and put all extracted files into the twilighte device.</p> <p>Download http://repo.orix.oric.org/dists/official/tgz/6502/dsk-bank.tgz, gunzip, untar and put all extracted files into the twilighte device.</p>"},{"location":"commands/sedoric/#issues","title":"Issues","text":"<ul> <li>Write on .dsk does not work</li> <li>some .dsk does not work</li> <li>Does not handle sedoric 4 disks (NY2019 COMPETITION)</li> <li>Pulsoids : When a game is finished, computer reboots</li> <li>Magnetix : When a game is finished, the game stops</li> </ul>"},{"location":"commands/sedoric/#incompatibility","title":"Incompatibility","text":"<p>All dsk built with floppybuilder:</p> <ul> <li>quintessential =&gt;  use \"quintes\" binary</li> <li>pushing the envelop =&gt;  use \"pushing\" binary</li> <li>Born in 1983 =&gt;  use \"born1983\" binary</li> <li>Barbitoric =&gt;  use \"barboric\" binary</li> <li>asm2k2 =&gt;  use \"asm2k2\" binary</li> <li>zerofx =&gt;  use \"zerofx\" binary</li> <li>OricTech =&gt;  use \"orictech\" binary</li> <li>all .dsk on pinforic models : space99, 1337 and pinforic games (no solution for instance)</li> </ul>"},{"location":"commands/sedoric/#trouble-shooting","title":"Trouble shooting","text":"<p>If sedoric is launched without any args, it will try to load by default '/usr/share/sedoric/sedoric3.dsk'. If this disk is not present, sedoric will failed.</p>"},{"location":"commands/setfont/","title":"setfont","text":""},{"location":"commands/setfont/#setfont","title":"setfont","text":""},{"location":"commands/setfont/#introduction","title":"Introduction","text":"<p>Change the default font</p>"},{"location":"commands/setfont/#synopsys","title":"SYNOPSYS","text":"<ul> <li>setfont fontname</li> </ul>"},{"location":"commands/setfont/#description","title":"DESCRIPTION","text":"<p>This command overwrite the current charset with a new one</p>"},{"location":"commands/setfont/#examples","title":"EXAMPLES","text":"<ul> <li>setfont boldfr0</li> <li>setfont default</li> </ul>"},{"location":"commands/setfont/#lists-of-fonts","title":"Lists of fonts","text":"<ul> <li>BLACKFR0 BOLDFR0  CLEARUK0 CURSIVFR</li> <li>DIGITAFR FANTA1UK FANTA3UK GREEKUK0</li> <li>NAROW2FR ORICFR0  SMLCAPUK SQUBOLUK</li> <li>BLACKUK0 BOLDUK0  CURSI2FR CURSIVUK</li> <li>DIGITAUK FANTA2UK GOTHIQFR MIROIRUK</li> <li>NAROW2UK ORICUK0  SQUAREUK SYMBOLUK</li> <li>BOLD2FR0 CLEARFR0 CURSI2UK DEFAULT</li> <li>ENVERSUK FANTA3FR GOTHIQUK MODERNFR</li> <li>NARROWUK SLANTUK0 SQUBOLFR</li> </ul>"},{"location":"commands/setfont/#notes","title":"NOTES","text":"<p>Font files are in /usr/share/fonts</p>"},{"location":"commands/setfont/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/setfont.asm</p>"},{"location":"commands/sh/","title":"sh","text":""},{"location":"commands/sh/#sh","title":"sh","text":""},{"location":"commands/sh/#introduction","title":"Introduction","text":"<p>When kernel has finished to initialize at boot time, sh command is started in interactive mode</p>"},{"location":"commands/sh/#interactive-mode","title":"Interactive mode","text":"<p>Esc-b : move cursor at the beginning of the previous word</p> <p>Esc-f : move cursor at the end of the next word</p> <p>Esc-l : switch current word into lowercase, and put cursor at the end of the word</p> <p>Esc-u : switch current word into uppercase, and put cursor at the end of the word</p> <p>Ctrl-a : move cursor at the beginning of the line</p> <p>Ctrl-e : move cursor at the end of the line</p> <p>Ctrl-c : cancel current line</p> <p>Ctrl-k : delete the end of the line</p> <p>Ctrl-l : clear screen, and displays the line, the cursors keeps his position</p> <p>Ctrl-u : clear the line and put cursor at the beginning of the line</p> <p>Ctrl-t : swap char under the cursor with the previous one, and shift the cursor to the right</p> <p>Ctrl-o : Switch into replacement or insertion mode</p>"},{"location":"commands/sh/#shortcuts-for-tools","title":"Shortcuts for tools","text":"<p>Funct+A : Start Systemd rom</p> <p>Funct+B : Start Basic11</p> <p>Funct+G : Start basic11 gui</p> <p>Funct+L : Start Loader</p> <p>Funct+T : Start Twilighte setup</p>"},{"location":"commands/sh/#available-commands","title":"Available commands","text":"<p>The command line is limited in characters (37). If you reach this limit, you won\u2019t be able to type the complete command line Known bugs</p> <ul> <li>\u00ab ./ \u00bb can be used to launch a binary since Kernel v2023.2</li> </ul>"},{"location":"commands/strerr/","title":"sterr","text":""},{"location":"commands/strerr/#command-strerr","title":"Command: strerr","text":""},{"location":"commands/strerr/#strerr-utility","title":"strerr utility","text":""},{"location":"commands/strerr/#synopsys","title":"SYNOPSYS","text":"<ul> <li>strerr -h|-v|-a</li> <li>strerr [-q] start[,end]</li> <li>strerr [-a[q]] [start]</li> </ul>"},{"location":"commands/strerr/#examples","title":"EXAMPLES","text":"<ul> <li>strerr 1</li> <li>strerr 1,4</li> <li>strerr ,18</li> <li>strerr -a 3</li> </ul>"},{"location":"commands/strerr/#description","title":"DESCRIPTION","text":"<p>strerr return string describing error number</p>"},{"location":"commands/strerr/#options","title":"OPTIONS","text":"<ul> <li>-h    display command syntax</li> <li>-v    display program version</li> <li>-a    display all message from start</li> <li>-q    quiet mode</li> <li>start    message number (def: 0)</li> <li>end    last message number (def: 0)</li> </ul>"},{"location":"commands/strerr/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/strerr</p>"},{"location":"commands/submit/","title":"submit","text":""},{"location":"commands/submit/#command-submit","title":"Command: submit","text":""},{"location":"commands/submit/#submit-utility","title":"submit utility","text":""},{"location":"commands/submit/#synopsys","title":"SYNOPSYS","text":"<ul> <li>submit file [arg...]</li> </ul>"},{"location":"commands/submit/#examples","title":"EXAMPLES","text":"<ul> <li>submit help.sub</li> </ul>"},{"location":"commands/submit/#description","title":"DESCRIPTION","text":"<p>submit is a command language interpreter that executes commands read from a file.</p>"},{"location":"commands/submit/#options","title":"OPTIONS","text":"<ul> <li>no options</li> </ul>"},{"location":"commands/submit/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/submit</p>"},{"location":"commands/telstrat/","title":"telstrat","text":""},{"location":"commands/telstrat/#telstrat","title":"Telstrat","text":""},{"location":"commands/telstrat/#starts-telestrat","title":"Starts Telestrat","text":""},{"location":"commands/telstrat/#example","title":"Example","text":"<p>telstrat without binary starts hyperbasic mode with stratsed (Like -m 0 flag)</p> <pre><code>/#telstrat [-v] [-d mydisk] [-m mode] [-l first_letter]\n</code></pre>"},{"location":"commands/telstrat/#modes","title":"Modes","text":"<p>Starts telestrat with hyperbasic + Stratsed</p> <pre><code>/#telstrat -m 0\n</code></pre> <p>Starts telestrat with hyperbasic, teleass + Stratsed</p> <pre><code>/#telstrat -m 1\n</code></pre> <p>Starts telestrat with hyperbasic, telematic + Stratsed</p> <pre><code>/#telstrat -m 1\n</code></pre>"},{"location":"commands/telstrat/#disk-search","title":"Disk search","text":"<p>Displays all disks availables with the filename starting by 'a'</p> <pre><code>/#telstrat -l a\n</code></pre>"},{"location":"commands/telstrat/#starts-with-a-disk","title":"Starts with a disk","text":"<p>When telstrat starts, default disk (stratsed is inserted), it's possible to insert another disk with -d option.</p> <p>in that case, send</p> <pre><code>/#telstrat -d builder\n</code></pre> <p>It will try to load /usr/share/stratsed/b/builder.dsk</p> <p>If a .dsk is added to the disk like :</p> <pre><code>/#telstrat -d /builder.dsk\n</code></pre> <p>It will starts .dsk from / with the name builder.dsk</p> <p>When .dsk is in the argument of -d flag, it will get the disk as a right path and filename.</p>"},{"location":"commands/telstrat/#add-personnal-disk","title":"Add personnal disk","text":"<p>Add .dsk into /usr/share/stratsed/[FIRST_LETTER_OF_MYDISK]/</p>"},{"location":"commands/telstrat/#issues","title":"Issues","text":"<ul> <li>Tele disk 3 : Error, because it need Real Time Clock Extension</li> <li>Tele disk 2 : Keyboard mess (maybe a wrong .dsk ?)</li> <li>Tea 4 two : Does not work (waiting for rs232 ?)</li> <li>Software mapping keyboard&lt;-&gt; mouse is for instance disabled</li> <li>Wrong compute of ROM and RAM banks</li> <li>if an unknown command is launched, it crashes</li> <li>Serial port is not functionnal (minitel pages can't be started)</li> </ul>"},{"location":"commands/telstrat/#kernel","title":"Kernel","text":"<p>Need Oric kernel 2022.3 at least</p>"},{"location":"commands/touch/","title":"touch","text":""},{"location":"commands/touch/#touch","title":"touch","text":""},{"location":"commands/touch/#introduction","title":"Introduction","text":"<p>Create an empty file</p>"},{"location":"commands/touch/#synopsys","title":"SYNOPSYS","text":"<ul> <li>touch myfile</li> </ul>"},{"location":"commands/touch/#description","title":"DESCRIPTION","text":"<p>Create an empty file. Time does not affect the timstamp of the file.</p>"},{"location":"commands/touch/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/touch.asm</p>"},{"location":"commands/twil/","title":"twil","text":""},{"location":"commands/twil/#twil","title":"twil","text":""},{"location":"commands/twil/#introduction","title":"Introduction","text":"<p>Twil command can displays the current firmware of twilighte card, and can swap root folder to usbkey or sdcard.</p>"},{"location":"commands/twil/#synopsys","title":"SYNOPSYS","text":"<ul> <li>twil -f  : displays Twilighte board firmware</li> <li>twil -u  : switch default device : usbdrive</li> <li>twil -s  : swap default device to : sdcard</li> </ul>"},{"location":"commands/twil/#description","title":"DESCRIPTION","text":""},{"location":"commands/twil/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/twil.asm</p>"},{"location":"commands/twilconf/","title":"twilconf","text":""},{"location":"commands/twiload/","title":"twiload","text":""},{"location":"commands/twiload/#twilload","title":"Twilload","text":"<p>Start loader</p>"},{"location":"commands/uname/","title":"uname","text":""},{"location":"commands/uname/#uname","title":"uname","text":""},{"location":"commands/uname/#introduction","title":"Introduction","text":"<p>Display kernel info</p>"},{"location":"commands/uname/#synopsys","title":"SYNOPSYS","text":"<ul> <li>uname [-a]</li> </ul>"},{"location":"commands/uname/#description","title":"DESCRIPTION","text":"<p>Display kernel info</p>"},{"location":"commands/uname/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/uname.asm</p>"},{"location":"commands/untar/","title":"untar","text":""},{"location":"commands/untar/#command-untar","title":"Command: untar","text":""},{"location":"commands/untar/#untar-utility","title":"untar utility","text":""},{"location":"commands/untar/#synopsys","title":"SYNOPSYS","text":"<ul> <li>untar -t[v]f tarfile</li> <li>untar -x[v]f tarfile</li> </ul>"},{"location":"commands/untar/#examples","title":"EXAMPLES","text":"<ul> <li>untar -tf /home/test.tar</li> </ul>"},{"location":"commands/untar/#description","title":"DESCRIPTION","text":"<p>untar list and extract files in a TAR archive</p>"},{"location":"commands/untar/#options","title":"OPTIONS","text":"<ul> <li>-h ^Bshow this help message and exit</li> <li>-t ^Blist files</li> <li>-x ^Bextract files</li> <li>-v ^Bverbose mode</li> </ul>"},{"location":"commands/untar/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/untar</p>"},{"location":"commands/vidplay/","title":"vidplay","text":""},{"location":"commands/vidplay/#vidplay","title":"Vidplay","text":"<p>Play .vhi video (some are located in /usr/share/vidplay/)</p>"},{"location":"commands/viewhrs/","title":"viewhrs","text":""},{"location":"commands/viewhrs/#viewhrs","title":"viewhrs","text":""},{"location":"commands/viewhrs/#introduction","title":"Introduction","text":"<p>Displays a hrs file</p>"},{"location":"commands/viewhrs/#synopsys","title":"SYNOPSYS","text":"<ul> <li>viewhrs toto.hrs -t 1</li> </ul> <p>Wait 1 before returning to shell</p>"},{"location":"commands/viewhrs/#description","title":"DESCRIPTION","text":"<p>Displays a hrs file. If -t is not present, it will wait a key pressed</p>"},{"location":"commands/viewhrs/#examples","title":"EXAMPLES","text":"<ul> <li>viewhrs me.hrs</li> </ul>"},{"location":"commands/viewhrs/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/shell/blob/master/src/commands/viewhrs.asm</p>"},{"location":"commands/viewscr/","title":"viewscr","text":""},{"location":"commands/viewscr/#command-viewscr","title":"Command: viewscr","text":""},{"location":"commands/viewscr/#viewscr-utility","title":"viewscr utility","text":""},{"location":"commands/viewscr/#synopsys","title":"SYNOPSYS","text":"<ul> <li>viewscr file [...]</li> </ul>"},{"location":"commands/viewscr/#examples","title":"EXAMPLES","text":"<ul> <li>viewscr format.scr</li> <li>viewscr address.win monac1.hlp</li> </ul>"},{"location":"commands/viewscr/#description","title":"DESCRIPTION","text":"<p>Display TEXT screen dump files like SCR files from FTDOS disks or HLP, WIN files from Sedoric disks.</p>"},{"location":"commands/viewscr/#source","title":"SOURCE","text":"<p>https://github.com/orix-software/viewscr</p>"},{"location":"commands/zerofx/","title":"zerofx","text":""},{"location":"commands/zerofx/#zerofx-demo","title":"ZeroFX demo","text":"<p>Launch zerofx</p> <p>/#zerofx</p>"},{"location":"developer_manual/","title":"Install","text":""},{"location":"developer_manual/#installation-for-developpers","title":"Installation for developpers","text":"<p>There is two ways to develop : Oricutron and cross dev with test on real computer</p>"},{"location":"developer_manual/#step-1-download-the-oricutron-archive-with-all-things-set","title":"Step 1 : Download the oricutron archive with all things set:","text":"<p>oricutron_twilighte_board_for_projects.zip</p> <p>or</p> <p>Configure and start oricutron with twilighte board</p> <p>Build from source code oricutron : https://github.com/pete-gordon/oricutron or download last windows binaries : https://iss.sandacite.com/iss/oricutron/</p> <p>In oricutron.cfg, you have just to set the right parameter to start oric with the board emulated</p> <pre><code>ch376 = yes\ntwilighte_board = yes\n</code></pre> <p>plugins/twilighte_board/twilighte.cfg you can put any rom you want.</p>"},{"location":"developer_manual/#step-2-get-main-rom-kernel-and-shell","title":"Step 2 : get main rom (kernel and shell)","text":"<p>Skip this step, if you downloaded \"oricutron_twilighte_board_for_projects\" arhive</p>"},{"location":"developer_manual/#step-3-start-oricutron","title":"Step 3 : start oricutron","text":"<p>Starts oricutron, if everything is OK, Orix starts, if you have missing rom at boot, modify plugins/twilighte_board/twilighte.cfg in order to replace wrong ROM.</p> <p>there is 2 folders on oricutron: sdcard and usbdrive, in orix type \"/#mount\", if usb is shown, then \"usbdrive/\" folder is the main folder.</p> <p>Under Linux, all filenames must be uppercases (folder and files), it's mainly because emulation rescpect FAT32 specs in the sdcard/usbdrive chip</p>"},{"location":"developer_manual/#step-4-downloadbuild-cc65","title":"Step 4 : Download/build cc65","text":"<p>Build it from cc65. You can build your first program in C with cc65 and telestrat target. It builds an Orix binary. This binary can be put in bin/ folder of the device (for oricutron : usbdrive or sdcard folder)</p>"},{"location":"developer_manual/#step-5-download-sdk-mainly-for-assembly","title":"Step 5 : Download SDK  (mainly for assembly)","text":"<p>Clone https://github.com/assinie/orix-sdk in your project folder</p>"},{"location":"developer_manual/basic11_informations/","title":"basic11 rom","text":""},{"location":"developer_manual/basic11_informations/#basic11-rom","title":"basic11 rom","text":"<p>Dans tous les cas, les valeurs de RND en $FA ont \u00e9t\u00e9 copi\u00e9es en avance</p>"},{"location":"developer_manual/basic11_informations/#si-on-tape-basic11","title":"Si on tape : /#basic11","text":"<p>Cela lance la ROM</p>"},{"location":"developer_manual/basic11_informations/#si-on-tape-basic11-tapefile","title":"Si on tape : /#basic11 \"TAPEFILE\"","text":"<ul> <li> <p>Cela va chercher la pr\u00e9sence d'un fichier db dans /var/cache/basic11/[FIRSTLETTEROFTAPEFILE]/TAPEFILE.db</p> </li> <li> <p>Si TAPEFILE.db est pr\u00e9sent, il va lire les 1er octets du fichiers pour poker en $F1 les I/O des joysticks, sinon il va d\u00e9marrer la banque 6 qui est la ROM par d\u00e9faut qui contient le path courant : /home/basic11/</p> </li> <li> <p>Le code va regarder l'id de la ROM (stock\u00e9e en $F2 suite au load des confs au point pr\u00e9c\u00e9dent)</p> </li> <li> <p>Cela va d\u00e9tecter aussi si le device par d\u00e9faut est la sdcard ou la cl\u00e9 usb</p> </li> <li> <p>Le code va concat\u00e9ner /usr/share/basic11/basic avec le device courant (us ou sd) puis l'id de la rom converti en ascii</p> </li> <li> <p>La rom va \u00eatre charg\u00e9e en ram principale puis basic11 va copier un driver en ram principale. Si la rom demand\u00e9e n'est pas trouv\u00e9e, le programme s'arr\u00eate avec un message d'erreur.</p> </li> <li> <p>Ce driver passe en RAM 0 (banque 0) copie la ROM charg\u00e9e en ram principale, puis va patcher le path par d\u00e9faut pour acc\u00e9der au .tap demand\u00e9. Ainsi, la ROM serait pr\u00e9sente en RAM 0, avec le path par d\u00e9faut tel que : '/usr/share/basic11/3/' pour 3dfongus</p> </li> </ul> <p>Ainsi, la ROM a en argument 3Dfongus, et la rom charge donc \u00e0 partir de l\u00e0.</p> <p>Le code g\u00e8re un maximum de 9 roms en mode usb, et 9 en rom sd. Un soft d\u00e9fini avec une ROM 10 ne fonctionnera pas, c'est \u00e0 dire que la rom ne sera pas charg\u00e9e, et un message d'erreur dira qu'il ne trouve pas la rom.</p>"},{"location":"developer_manual/basic11_informations/#si-on-tape-basic11-l","title":"Si on tape : /#basic11 -l","text":"<p>Cela va ouvrir le fichier /var/cache/basic11/basic11.db</p> <p>Et cela va lire la cl\u00e9 du .tap et le nom du soft tronqu\u00e9 \u00e0 29 chars.</p> <p>L'espace et le ctrl+c fonctionne ici</p>"},{"location":"developer_manual/basic11_informations/#fonctionnement-global","title":"Fonctionnement global","text":"<p>Si la rom est lanc\u00e9e sans .tap ou avec un .tap, syst\u00e9matiquement, les valeurs de RND seront \u00e9crites en dur en RAM de $FA \u00e0 $FF. Cela interfera \u00e0 terme avec la ROM basic oric-1</p>"},{"location":"developer_manual/basic11_informations/#format-du-fichier-maindb-basic11db","title":"Format du fichier \"maindb\" (basic11.db)","text":""},{"location":"developer_manual/basic11_informations/#version-1","title":"Version 1","text":"<ul> <li> <p>1er octet : numero de version du fichier db (actuel : 1)</p> </li> <li> <p>puis la liste des noms de fichiers puis le titre tels que : filenametap8bytesLength ;  name_software '\\0'</p> </li> <li> <p>en dernier octet \u00e0 la fin du fichier, nous avons l'octet $ff qui signale la fin du fichier (ceci permettant de simplifier le code de lecture)</p> </li> </ul>"},{"location":"developer_manual/basic11_informations/#format-du-fichier-db-dun-soft","title":"Format du fichier .db d'un soft","text":"<ul> <li> <p>version_bin : 1 byte (binary)</p> </li> <li> <p>rombasic11 : 1 byte, id of the rom</p> </li> <li> <p>fire2_joy : keyboard fire2 matrix</p> </li> <li> <p>fire3_joy : keyboard fire2 matrix</p> </li> <li> <p>down_joy : keyboard fire2 matrix</p> </li> <li> <p>right_joy : keyboard fire2 matrix</p> </li> <li> <p>left_joy : keyboard fire2 matrix</p> </li> <li> <p>fire1_joy : keyboard fire2 matrix</p> </li> <li> <p>up_joy : keyboard fire2 matrix</p> </li> </ul>"},{"location":"developer_manual/binary_starts/","title":"Binary boot sequence","text":""},{"location":"developer_manual/binary_starts/#binary-start-sequence","title":"Binary start sequence","text":"<p>All commands are started with XEXEC kernel primitive. For example, when something is typed into shell, shell calls XEXEC kernel primitive (except for shell internal commands like echo, pwd ...).</p> <p>When a binary is executed, kernel fork a new process with its PID, PPID, CWD</p>"},{"location":"developer_manual/binary_starts/#step-1-check-if-binary-is-in-a-bank","title":"Step 1 : check if binary is in a bank","text":"<p>XEXEC reads all banks from 4 to 1 and tries to check if the program is in a ROM (that is why ROM needs to have a kind of header)</p> <p>If the commands is in a bank, it switches to the right bank and launch command vector (and it forks). If the commands is not found, it swaps \"Twilighte banking register\" to provide others 65KB of bank, kernel checks banks again. When kernel reached the 32 banks of rom, it swap to ram set, and reads all theses 32 banks of RAM. If the command is not found, kernel send error code, and shell will display error message according to kernel error code.</p> <p>That is why commands located in bank (eeprom and after RAM) are quicker to start. EEPROM banks are quicker to launch because kernel starts with eeprom set.</p>"},{"location":"developer_manual/binary_starts/#step-2-check-if-the-binary-is-on-the-device","title":"Step 2 : Check if the binary is on the device","text":"<p>If the binary is not in a bank, kernel will try to open \"/bin/BINARY_FILE\". If the binary open fails, it returns \"command not found\" or impossible to mount if device is not present.</p>"},{"location":"developer_manual/binary_starts/#step-3-binary-on-storage-device-is-found","title":"Step 3 : binary on storage device is found","text":"<p>Kernel opens the file, reads the header, and loads the content of the binary on the right address. When it's OK, the binary is started (and a fork occurs)</p>"},{"location":"developer_manual/buildman/","title":"Generate man pages","text":""},{"location":"developer_manual/buildman/#manual-pages","title":"Manual pages","text":"<p>man binary is available and you can build man pages from .md files</p> <p>You need to use md2hlp program here : https://github.com/assinie/md2hlp</p>"},{"location":"developer_manual/buildrom/","title":"Build an Orix rom","text":""},{"location":"developer_manual/buildrom/#build-an-orix-rom","title":"Build an Orix rom","text":""},{"location":"developer_manual/buildrom/#guideline","title":"Guideline","text":"<ul> <li> <p>In order to have commands available from shell, some rules must be set in the bank structure (https://github.com/orix-software/empty-rom/). Bank structure must be used, or commands won't be accessed from the kernel or commands (As help -b XX)</p> </li> <li> <p>A ROM will be in an ROM slot or a RAM slot.</p> </li> </ul> <p>Ram slot is useful if some values must be set internaly (and it avoid malloc use, but it's not the way a ROM should not done if the process can be launched twice at the same time).</p> <p>The twilighte board had been released without the sram saved with a battery, there is a lot more twilighte board in the workd without SRAM saved by battery than with a battery. In that case, if a .rom is coded with the behavior to keep information into it's bank slot (like configuration), it will lost (and the content of the rom) when oric is switch off.</p> <p>Since shell 2022.4, it's possible to load roms with a shortcut from a config file in /etc</p> <p>Some existing roms are in a eeprom slot (kernel, shell, monitor, forth ..). Systemd rom is a rom loaded into RAM bank.</p> <ul> <li> <p>C language can be used for bank, but the 16KB of a bank is quickly filled with C code.</p> </li> <li> <p>orix-sdk must be intensively used, and if it can't be used, kernel primitives must be used. If a universal feature is missing in kernel, it's better to insert into kernel than develop only for the ROM.</p> </li> <li> <p>Each rom contains 1 or X commands.</p> </li> <li> <p>In order to have multitasking in the future, commands must use malloc and free from kernel (and file operations from the kernel)</p> </li> <li> <p>commands must use zero page from $80 to $80+26 because kernel saves 26 bytes from $80 to $80+26 in order to swap processes. Address $80 to $80+26 are reserved for binary functionnality. It's also possible to use RES and RESB (used in kernel primitive), if you don't call kernel primitives, or else, it well be erased in each kernel primitive call</p> </li> <li> <p>limit for a rom is 16KB. But, it's maybe enough because many operations are done with kernel calls (fopen for example).</p> </li> <li> <p>Kernel is always available (Bank 7) when \"set\" banking is RAM or EEPROM  (kernel is always available during swapping banks with twilighte banking register ($343)).</p> </li> </ul>"},{"location":"developer_manual/buildrom/#bank-structure","title":"Bank Structure","text":"<p>If you want to build an orix compatible rom, a special format is used for Orix bank.</p> <p>A rom template can be downloaded here : https://github.com/orix-software/empty-rom/</p>"},{"location":"developer_manual/buildrom/#rom-definition","title":"Rom definition","text":"<ul> <li>$fff0 : 1 byte, rom type (Value 0 : empty bank, value 1 : command bank)</li> </ul>"},{"location":"developer_manual/buildrom/#zero-page","title":"Zero page","text":"<p>userzp is equal to $8C. It's a range from $8C to $8C+16 which is saved for each process, when a process is forked</p> <p>Kernel uses some address in zero page. But userzp to userzp+16 offset are reserved for binary, Orix banks. Address below userzp can be used, but kernel could erase it when IRQ or Kernels calls are performed</p> <p>Kernel saves 16 bytes (zeropage) when a binary is forked. It means that, a XEXEC calls in a binary, kernel will save PPID offset from userzp to userzp+16, and kernel will restore theses offsets when the PID has finished. In the future, multitasking will work in the same ways, and there is no guarantee that a binary will have its values restores when offset are greater than userzp+16</p>"},{"location":"developer_manual/buildrom/#launch-the-rom","title":"Launch the ROM","text":""},{"location":"developer_manual/buildrom/#oricutron","title":"Oricutron","text":"<p>If it's a rom which must be in a ram slot, the config file (twilighte.cfg) must be set it in in bankram section or else insert it in bankrom section.</p>"},{"location":"developer_manual/buildrom/#real","title":"Real","text":"<p>Rom can be loaded on eeprom easily, it will erase 4 banks :</p> <pre><code>/#orixcfg -r -s 0 myrom.rom\n</code></pre> <p>Rom must be loaded into ram slot, it will erase only one bank :</p> <pre><code>/#orixcfg -w -s 0 -b 4 myrom.rom\n</code></pre> <p>At this step if everything is OK, each commands from the bank can be accessed from shell.</p>"},{"location":"developer_manual/buildstandalonerom/","title":"Build standalone Rom","text":""},{"location":"developer_manual/buildstandalonerom/#build-a-standalone-rom","title":"Build a standalone ROM","text":""},{"location":"developer_manual/buildstandalonerom/#prerequisites","title":"Prerequisites","text":"<p>Before starting :</p> <ul> <li>Read Oricutron VS Real hardware</li> </ul>"},{"location":"developer_manual/buildstandalonerom/#guidelines","title":"Guidelines","text":"<p>A standalone ROM is a ROM which does not need the kernel and manage the fully main memory.</p> <p>It's not the main choice when a ROM is built, but it's used to handle easily compatibility for \"Legacy roms\" as Atmos Rom, Oric-1 and others customs roms released.</p> <p>It means that all code to manage files, joysticks, text I/O, Hires I/O must be inserted in this rom.</p> <p>This mode must avoided because it won't handle evolution handled in the kernel and the Twilighte board</p>"},{"location":"developer_manual/buildstandalonerom/#access-to-sdcard-and-usbdrive","title":"Access to sdcard and usbdrive","text":"<p>Orix and kernel handles devices : usbdrive (Usbkey) and sdcard. When a standalone rom is built, it must keep default device, in that case, it requires to ask to the kernel which is the default device before flushing main memory.</p>"},{"location":"developer_manual/buildstandalonerom/#launching-a-standalone-rom","title":"Launching a standalone ROM","text":"<p>If you are on Oricutron, you can put in bank 7, your rom and start Oricutron in twilighte board mode. On real computer, you need to</p> <ul> <li>copy your ROM into a folder (ex : /usr/share/myroms/myrom.rom)</li> <li>Modify /etc/systemd/banks.cnf to add a new rom entry</li> <li>Type funct + L and you will be able to start your standalone ROM</li> </ul>"},{"location":"developer_manual/cc65/","title":"cc65","text":""},{"location":"developer_manual/cc65/#cc65-use","title":"Cc65 use","text":"<p>cc65 and ca65 are used mainly for kernel, shell and others binaries. Any assembler can be used, it just needs to add the Orix binary header at the beginning of the binary file.</p> <p>It's easier to use ca65 because orix sdk provide ca65 macro and .cfg to build a binary when it's coded in assembly only.</p> <p>Some libs are also build under ca65, and it's easier to link with ca65 if your code is written with ca65.</p> <p>If you code with cc65 or ca65, you need to use -ttelestrat switch to build Orix binary.</p>"},{"location":"developer_manual/firmware/","title":"Firmware informations","text":""},{"location":"developer_manual/firmware/#firmwares","title":"Firmwares","text":"<p>You can get firmare version with $342 register and get b0,b1,b2. It will show the firmware version.</p> <p>There is only 2 versions availables :</p>"},{"location":"developer_manual/firmware/#firmware-1","title":"Firmware 1","text":""},{"location":"developer_manual/firmware/#firmware-2","title":"Firmware 2","text":"<p>Manage microdisc compatibility : it handes $314 register to switch on the right ram overlay bank</p>"},{"location":"developer_manual/firmware/#firmware-3","title":"Firmware 3","text":"<p>Under development</p>"},{"location":"developer_manual/firmware/#firmware-4","title":"Firmware 4","text":"<p>It's under development but it will handles others hardware chips.</p>"},{"location":"developer_manual/guidelines/","title":"Development guidelines","text":""},{"location":"developer_manual/guidelines/#guidelines","title":"Guidelines","text":""},{"location":"developer_manual/guidelines/#ways-to-do-a-binary","title":"Ways to do a binary","text":"<p>There is many ways to buid a binary : bank or on storage</p> <p>To summarize, the best speed shoud be read only bank, but it could a bit slow when program runs cd</p> type Starting speed Loading kernel search command speed Runtime speed Eeprom bank RAM bank Binary from /bin <ul> <li>Eeprom bank : No loading, Best mode to find a command for the kernel and probably slower due to zp use and indirect mode to access memory.</li> <li>RAM bank : No loading, second Best mode to find a command for the kernel and probably slower due to zp use and indirect mode to access memory.</li> <li>Binary on the storage : loading, the worst way to find a command : kernel search into bank and after in the storage. Probably faster than bank (due to absolute mode in it's own buffers).</li> </ul>"},{"location":"developer_manual/hardware/","title":"Hardware","text":""},{"location":"developer_manual/hardware/#hardware","title":"Hardware","text":"<ul> <li>Twilighte Board.</li> </ul>"},{"location":"developer_manual/header/","title":"Binary header format","text":""},{"location":"developer_manual/header/#header","title":"Header","text":""},{"location":"developer_manual/header/#orix-binary-v2-format-relocated-bitfield-table-available-since-kernel-20224","title":"Orix binary v2 format (relocated : bitfield table, available since Kernel 2022.4)","text":"<pre><code>  .byt $01,$00            ; non-C64 marker like o65 format\n.byt \"o\", \"r\", \"i\"      ; \"ori\" MAGIC number like o65 format\n.byt $02                ; version of this header\ncpu_mode:\n.byt $00                ; CPU see below for description\n;7\n.byt &lt;SIZE_BITFIELD,&gt;SIZE_BITFIELD    ; size of the bitfield map low\n;9\n.byt $00                ; reserved\n;10\n.byt $00                ; reserved\n;11\n.byt $00                ; reserved\n;12\n.byt &lt;OFFSET_BITFIELD,&gt;OFFSET_BITFIELD ; offset of the bitfield\n;14\n.byt &lt;start_adress,&gt;start_adress  ; loading adress\n;16\n.byt &lt;endofmemory,&gt;EndOfMemory    ; end of loading adress\n; 18\n.byt &lt;start_adress,&gt;start_adress  ; Execution adress\n; end of header\nstart_adress:\nlda  $00\nrts\nEndOfMemory:\n</code></pre>"},{"location":"developer_manual/header/#orix-binary-v1-format-will-be-deprecated","title":"Orix binary v1 format (Will be deprecated)","text":"<p>Orix binary v1 is not a relocated format. The binary must be never under $800. Relocation format (Format 2 see below) is now provided in kernel v2022.4</p> <p>You don't need to know this format except if you use others assembler than ca65 (or cc65 with C). Orix-sdk provide .cfg file to add header to your code in assembly</p> <pre><code>        .byt $01,$00            ; non-C64 marker like o65 format\n.byt \"o\", \"r\", \"i\"      ; \"ori\" MAGIC number :$6f, $36, $35 like o65 format\n.byt $01                ; version of this header (can not be relocated)\ncpu_mode:\n.byt $00                ; CPU see below for description\n.byt $00                ; reserved\n.byt $00                ; reserved\n.byt $00                ; reserved\n.byt $00                ; reserved\n.byt $00                ; reserved\n.byt $00                ; reserved\n.byt $00                ; reserved\n.byt &lt;start_adress,&gt;start_adress ; loading adress\n.byt &lt;endofmemory,&gt;EndOfMemory   ; end of loading adress\n.byt &lt;start_adress,&gt;start_adress ; starting adress\n\nstart_adress:\n*=$1000\nlda #$41\nsta $bb80\nrts\nEndOfMemory:\n</code></pre>"},{"location":"developer_manual/header/#description","title":"Description","text":"<p>cpu_mode   For 6502 rockwell (oric version no illegals opcodes)</p> <p>.byt %00000000 ; 6502 (bit 0 = 0)</p> <p>For 65C02 WDC</p> <p>.byt %00000001 ; 65c02 (bit 0 = 1)</p> <p>For 65C816 WDC</p> <p>.byt %00000010 ; 65C816 (bit 1 = 1)</p> <p>For 6502 with illegal opcodes (rockwell)</p>"},{"location":"developer_manual/joysticks/","title":"Joysticks management","text":""},{"location":"developer_manual/joysticks/#joysticks-management","title":"Joysticks management","text":"<p>Joystick supports are available in oricutron. Joysticks works exactly than on telestrat computer.</p>"},{"location":"developer_manual/kernel/","title":"Kernel","text":""},{"location":"developer_manual/kernel/#kernel","title":"Kernel","text":"<p>Kernel is located in bank 7.</p> <p>Each primitives are called with \"brk\" instruction with a value after it.</p> <p>We can pass args to AXY or others memory location and the primitive can be called.</p> <p>Orixsdk manages some kernel calls, and it's better to use macro set to call some primitives</p>"},{"location":"developer_manual/kernel/#useful-links","title":"Useful links","text":"<ul> <li> <p>Documented primitives  Primitives</p> </li> <li> <p>Orixsdk (sdk for assembly) : Orixsdk</p> </li> <li> <p>C programming : cc65 (telestrat target)</p> </li> </ul>"},{"location":"developer_manual/memory/","title":"Memory management","text":""},{"location":"developer_manual/memory/#memory-management","title":"Memory management","text":""},{"location":"developer_manual/memory/#hardware-informations","title":"Hardware informations","text":"<p>Twilighte board handles 512KB of RAM and 512KB of eeprom</p>"},{"location":"developer_manual/memory/#orix-roms","title":"Orix Roms","text":"<p>Kernel has XMALLOC and XFREE primitives to allocate memory dynamictly. XMALLOC  primitives only returns pointer from main memory.</p> <p>Kernel can't instanciate extra memory from bank for instance.</p>"},{"location":"developer_manual/memory/#standalone-rom","title":"Standalone ROM","text":"<p>Extra memory can be accessed without kernel primitive with simple code</p> <p>The banking management is the same as Telestrat in order to have Orix working on Telestrat too, because it keeps telestrat compatibility (7 banks available + 1 bank for Overlay RAM), that is why twilighte board adds others registers to keep telestrat compatibility</p> <p>There is a register which contains a set of 4 banks. This register accept values from 0 to 7 : $343. Each value set another set of 4 banks. For example, if $343 contains 2, it will displays others parts of eeprom or SRAM when bit b0, b1, b2 in $321 register contains 4,3,2,1</p>"},{"location":"developer_manual/memory/#banking-management-explanation","title":"Banking management explanation","text":"<p>Switching to another bank should not be done, but the behavior of the card is explained below.</p> <p>For example, a ROM can be loaded into eeprom or ram with orixcfg Some others ROMS (as systemd, or others standalone rom) are loaded on the fly with loader menu.</p> <p>If it needs more ram than the main memory, extended driver is not coded, but it could on the future.</p> <p>Kernel is always reached when $321&amp;7 is equal to 7 . $343 register does not change the behavior of the value set in $321, when $321&amp;7=7 $321&amp;6=6 and $321&amp;5=5. When it's below 5, banks are swapped when register value of $343 change</p> <p>To summarize :</p> <ul> <li>bank 7 : kernel</li> <li>bank 6 : basic11 (modified to work with sdcard or usb key)</li> <li>bank 5 : shell</li> </ul> <p>Theses banks can't be switch and are always shown but for others banks (4,3,2,1), you have (depending the value of $343)</p> <ul> <li>bank 4: what you want</li> <li>bank 3: what you want</li> <li>bank 2: what you want</li> <li>bank 1: what you want</li> </ul> <p>Theses banks can be switches to others set banking RAM or ROM with a flag.</p> <p>You should not use this code, because it's not necessary to use theses routines when you do an orix bank (Kernel provides routines, or facility to call binaries in banks)</p> <p>In the case you need to switch to another bank, you can do this :  If you want to switch to bank 4 (hardware) you have to do in main ram, but there is also vectors) :</p> <pre><code>sei\nlda $321\nand #%11111000 ; Do mask for b0,b1, b2 of banking register\nora #$04 ; Switch to bank 4\nsta $321\ncli\n</code></pre> <p>; $C000 to $FFFF will be on bank 4 on eeprom bank because we did not set any others registers)</p> <p>if you want to switch to RAM mode :</p> <pre><code>sei\nlda $342\nora #%00100000 ; switch to ram set\nsta $342\nlda $321\nand #%11111000 ; Do mask for b0,b1, b2 of banking register\nora #$04 ; Switch to bank 4\nsta $321\n\ncli\n</code></pre> <p>if you want to switch to antoher set RAM bank :</p> <pre><code>sei\nlda #$01 ; set 1 instead of current set at boot (0)\nsta $343\nlda $342\nora #%00100000 ; switch to ram set\nsta $342\nlda #$04 ; switch to bank set of ram bank\nsta $321\ncli\n</code></pre>"},{"location":"developer_manual/oricutronvsreal/","title":"Oricutron VS real hardware","text":""},{"location":"developer_manual/oricutronvsreal/#oricutron-vs-real-hardware","title":"Oricutron VS real hardware","text":""},{"location":"developer_manual/oricutronvsreal/#differencies-and-issues","title":"Differencies and issues","text":"<ul> <li>usb controller is not fully emulated, it means that a lot of commands does not work on the emulation (mainly low usb command)</li> <li>uppercase and lower case for filenames are not managed in oricutron. It means that a code could work on Oricutron but it won't work on real. Every access to sdcard or usbdrive with FAT fileformat must be done with filename and path in uppercase (eg : toto.txt must be sent to the controler like TOTO.TXT)</li> </ul>"},{"location":"developer_manual/orixsdk/","title":"Main usage","text":""},{"location":"developer_manual/orixsdk/#orix-sdk","title":"Orix SDK","text":"<p>It provides macro to help assembly coding for Orix :</p> <p>https://github.com/assinie/orix-sdk/</p> <p>The main way to handle orix-sdk is to add it as gitmodules (for example in a \"dependencies folder\")</p>"},{"location":"developer_manual/orixsdk/#install-in-a-project","title":"Install in a project","text":"<pre><code>mkdir myasmproject\ncd  myasm_project\nmkdir dependencies &amp;&amp; cd dependencies\ngit clone https://github.com/assinie/orix-sdk.git\n</code></pre>"},{"location":"developer_manual/orixsdk/#load-orix-sdk","title":"Load Orix SDK","text":"<p>you just need to load macro file in your code (and telestrat.inc from cc65):</p> <pre><code>.include \"telestrat.inc\"\n.include \"dependencies/orix-sdk/macros/SDK.mac\"\n</code></pre>"},{"location":"developer_manual/pizero_connection/","title":"Cross development on real hardware","text":""},{"location":"developer_manual/pizero_connection/#pi-zero-connection","title":"Pi zero connection","text":"<p>You can also develop on the oric, if you have it next you and you have a pi zero with usb storage gadget configured</p> <p>Mount under windows a drive which is pi zero with samba binary. Then when build your code, you just need to copy the binary to the right letter.</p> <p>For example : copy mycode /s/bin/</p> <p>/s/bin is pi zero folder, and you just need to type mycode at command line.</p> <p>You need to execute in crontab a shell script. It flushs linux cache to disk. The problem with gadget is that it keeps action in memory, and in facts, samba does not show you the binary because, it's not written on disk.</p>"},{"location":"developer_manual/pizero_connection/#how-to-install","title":"How to install","text":"<ul> <li> <p>Download img Pi image</p> </li> <li> <p>'gzip -d' it or use 7zip</p> </li> <li> <p>Download and install Win32 disk imager : DiskImager</p> </li> <li> <p>insert a sdcard into your PC, and write the orixpi.img on the sdcard with Win32 disk imager</p> </li> <li> <p>remove sdcard from the pc and insert it to pizero when Win32 disk imager had finished</p> </li> <li> <p>insert a usb cable in the second  usb port (it's really important), and insert usb cable into the PC</p> </li> <li> <p>Wait one minute, your PC should detect a new storage device (it's the pi)</p> </li> <li> <p>in the new device, copy all files you need for Orix (sdcard.tgz content for example)</p> </li> <li> <p>with an text editor, edit on this new mass storage : /etc/pizero/wpa/wpa.cnf and insert the wifi network you use and the password</p> </li> <li> <p>unplug the zero pi and insert it in the usb twilighte board port</p> </li> <li> <p>switch on the oric with the board and wait 1 minutes</p> </li> <li> <p>If everything is ok, you should see your files with \"ls\" and the pizero should be in your wifi network, you can now access to the network folder of pizero from your pc (with the right IP)</p> </li> </ul>"},{"location":"developer_manual/relocbin/","title":"Relocation format","text":""},{"location":"developer_manual/relocbin/#relocation-format","title":"Relocation format","text":"<p>If you want to generate a relocatable format for orix, follow this link :  https://github.com/assinie/orix-sdk/blob/master/README.md</p>"},{"location":"developer_manual/orixsdk_macros/atoi/","title":"atoi","text":""},{"location":"developer_manual/orixsdk_macros/atoi/#atoi-macro","title":"atoi macro","text":""},{"location":"developer_manual/orixsdk_macros/atoi/#description","title":"Description","text":"<p>Convert a string to a 16 bits number</p>"},{"location":"developer_manual/orixsdk_macros/atoi/#usage","title":"Usage","text":"<p>atoi [ptr]</p> <p>ptr may be: (ptr), address</p>"},{"location":"developer_manual/orixsdk_macros/atoi/#output","title":"Output","text":"<p>AY: value X: number of digits (ie 10^X)</p>"},{"location":"developer_manual/orixsdk_macros/atoi/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_misc.mac\"\n\natoi mystrnumber\nrts\nmystrnumber:\n.asciiz \"12\"\n</code></pre> <p>Call XDECAY kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/cgetc/","title":"cgetc","text":""},{"location":"developer_manual/orixsdk_macros/cgetc/#cgetc","title":"cgetc","text":""},{"location":"developer_manual/orixsdk_macros/cgetc/#description","title":"Description","text":"<p>Read the keyboard</p>"},{"location":"developer_manual/orixsdk_macros/cgetc/#usage","title":"usage","text":"<ul> <li>cgetc</li> <li>cgetc var</li> </ul> <p>note:   Keycode in A register and var if provided</p> <p>cgetc var</p>"},{"location":"developer_manual/orixsdk_macros/cgetc/#example","title":"example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_conio.mac\"\n\ncgetc\n; A contains the key pressed\nrts\n</code></pre> <p>Call XRD0 kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/chdir/","title":"chdir","text":""},{"location":"developer_manual/orixsdk_macros/chdir/#chdir-macro","title":"CHDIR macro","text":""},{"location":"developer_manual/orixsdk_macros/chdir/#description","title":"Description","text":"<p>Change currrent folder</p>"},{"location":"developer_manual/orixsdk_macros/chdir/#usage","title":"usage","text":"<p>chdir ptr</p> <p>note:</p> <ul> <li>ptr may be: (ptr), address</li> <li>Call XPUTCWD function</li> </ul>"},{"location":"developer_manual/orixsdk_macros/chdir/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_dir.mac\"\n\nchdir myfolder\nrts\nmyfolder:\n.asciiz \"home\"\n</code></pre> <p>Call XPUTCWD kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/cputc/","title":"cputc","text":""},{"location":"developer_manual/orixsdk_macros/cputc/#cputc","title":"cputc","text":""},{"location":"developer_manual/orixsdk_macros/cputc/#description","title":"Description","text":"<p>Displays a char</p>"},{"location":"developer_manual/orixsdk_macros/cputc/#usage","title":"usage","text":"<ul> <li>cputc</li> <li>cputc n</li> <li>cputc 'c'</li> </ul> <p>note:</p> <ul> <li>no parameter: use the value of A register</li> </ul> <p>Alias for: print #'c'</p>"},{"location":"developer_manual/orixsdk_macros/cputc/#example","title":"example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_conio.mac\"\n\ncputc char\nrts\n</code></pre> <p>Call XWR0 kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/crlf/","title":"crlf","text":""},{"location":"developer_manual/orixsdk_macros/crlf/#crlf","title":"crlf","text":""},{"location":"developer_manual/orixsdk_macros/crlf/#description","title":"Description","text":"<p>Return to the next line</p>"},{"location":"developer_manual/orixsdk_macros/crlf/#usage","title":"Usage","text":"<p>crlf</p>"},{"location":"developer_manual/orixsdk_macros/crlf/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_conio.mac\"\n\ncrlf\nrts\n</code></pre> <p>Call XCRLF kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/cursor/","title":"cursor","text":""},{"location":"developer_manual/orixsdk_macros/cursor/#cursor","title":"Cursor","text":""},{"location":"developer_manual/orixsdk_macros/cursor/#description","title":"Description","text":"<p>Switch on or switch off the cursor</p>"},{"location":"developer_manual/orixsdk_macros/cursor/#usage","title":"Usage","text":"<p>cursor ON|OFF</p>"},{"location":"developer_manual/orixsdk_macros/cursor/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_display.mac\"\n\ncursor ON\nrts\n</code></pre> <p>Call XCSSCR or XCOSCR kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/exec/","title":"exec","text":""},{"location":"developer_manual/orixsdk_macros/exec/#exec-macro","title":"Exec macro","text":""},{"location":"developer_manual/orixsdk_macros/exec/#description","title":"Description","text":"<p>Execute a binary</p>"},{"location":"developer_manual/orixsdk_macros/exec/#usage","title":"Usage","text":"<p>exec command</p> <p>command may be : (ptr), address</p>"},{"location":"developer_manual/orixsdk_macros/exec/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_process.mac\"\n\nexec mycommand\nrts\nmycommand:\n.asciiz ls\n</code></pre> <p>Call XEXEC kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/explode/","title":"explode","text":""},{"location":"developer_manual/orixsdk_macros/explode/#explode","title":"Explode","text":""},{"location":"developer_manual/orixsdk_macros/explode/#description","title":"Description","text":"<p>Produce an explode sound</p>"},{"location":"developer_manual/orixsdk_macros/explode/#usage","title":"Usage","text":"<p>explode</p>"},{"location":"developer_manual/orixsdk_macros/explode/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_sound.mac\"\n\nexplode\nrts\n</code></pre> <p>Call XEXPLODE kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/fclose/","title":"fclose","text":""},{"location":"developer_manual/orixsdk_macros/fclose/#fclose-macro","title":"FCLOSE macro","text":""},{"location":"developer_manual/orixsdk_macros/fclose/#description","title":"Description","text":"<p>Close an opened file</p>"},{"location":"developer_manual/orixsdk_macros/fclose/#usage","title":"usage","text":"<p>fclose (fp)</p>"},{"location":"developer_manual/orixsdk_macros/fclose/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_file.mac\"\n\n\nfclose (ptr) ; Ptr contains the FD (from fopen macro)\nrts\n</code></pre> <p>Call XCLOSE kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/fopen/","title":"fopen","text":""},{"location":"developer_manual/orixsdk_macros/fopen/#fopen-macro","title":"FOPEN macro","text":""},{"location":"developer_manual/orixsdk_macros/fopen/#description","title":"description","text":"<p>Open a file.</p>"},{"location":"developer_manual/orixsdk_macros/fopen/#usage","title":"usage","text":"<p>fopen file, mode [,TELEMON] [,ptr] [,oom_msg_ptr] [,fail_value]</p> <ul> <li>file may be: (ptr), address</li> <li>if parameter 'ptr' is present, store resulting AX in ptr &amp; ptr+1</li> <li>if parameter 'oom_msg_ptr' is present, emit string pointed by 'oom_msg_ptr' and return if AX is $FFFF (ie XOPEN error)</li> </ul>"},{"location":"developer_manual/orixsdk_macros/fopen/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"          ; from cc65\n.include \"fcntl.inc\"              ; from cc65\n.include \"../orix-sdk/macros/SDK_file.mac\"\n.include \"../orix-sdk/macros/SDK_print.mac\"\n.include \"../orix-sdk/macros/SDK_conio.mac\"\n\nstart:\nfopen (basic11_ptr2), O_RDONLY,,fp ; open the filename located in ptr 'basic11_ptr2', in readonly and store the fp in fp address\ncpx     #$FF\nbne     @read_maindb ; not null then  start because we did not found a conf\ncmp     #$FF\nbne     @read_maindb ; not null then  start because we did not found a conf\n\nprint   str_basic11_missing\ncrlf    ; Macro for return line\nlda     #$FF\nldx     #$FF\nrts\nfp:\n.res 2\n@read_maindb:\n; bla\n</code></pre> <p>The filename/path address must not be in the rom. If it's the case, the string must be copied into main memory because Kernel overlap the ROM. fopen macro from SDK will produce an error, if the 'address' is in a ROM range (eg : $c000-$FFFF). If you use a ptr, macro can not detect it, and XOPEN primitive won't be able to open your file</p> <p>See XOPEN kernel primitive.</p>"},{"location":"developer_manual/orixsdk_macros/fread/","title":"fread","text":""},{"location":"developer_manual/orixsdk_macros/fread/#fread-macro","title":"FREAD macro","text":""},{"location":"developer_manual/orixsdk_macros/fread/#description","title":"description","text":"<p>Read byte from file</p>"},{"location":"developer_manual/orixsdk_macros/fread/#usage","title":"Usage","text":"<p>fread ptr, size, count, fp</p> <p>note: * ptr may be : (ptr), address * size may be: (ptr), address * fp may be  : address, #value, {address,y}</p>"},{"location":"developer_manual/orixsdk_macros/fread/#output","title":"Output","text":"<p>A &amp; X returns length in 16 bits</p>"},{"location":"developer_manual/orixsdk_macros/fread/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_file.mac\"\n\nfopen (MAN_SAVE_MALLOC_PTR), O_RDONLY\ncpx     #$FF\nbne     next\n\ncmp     #$FF\nbne     next\n; Not found\nrts\n\nnext:\n; Save FP\nsta     MAN_FP\nstx     MAN_FP+1\nfread (myptr), #1080, 1, MAN_FP ; myptr is from a malloc for example\n; A and X contains number of bytes\nfclose(MAN_FP)\nrts\n</code></pre> <p>XFREAD returns the size in A &amp; Y since kernel 2023.2</p> <p>See XFREAD kernel primitive.</p>"},{"location":"developer_manual/orixsdk_macros/fseek/","title":"fseek","text":""},{"location":"developer_manual/orixsdk_macros/fseek/#fseek","title":"fseek","text":""},{"location":"developer_manual/orixsdk_macros/fseek/#description","title":"Description","text":"<p>Move into opened file</p>"},{"location":"developer_manual/orixsdk_macros/fseek/#usage","title":"Usage","text":"<p>fseek fp, offset, whence</p> <ul> <li>fp may be : (ptr), address</li> <li>offset may be: (ptr), address, constant</li> <li>whence may be  : address, #value</li> </ul>"},{"location":"developer_manual/orixsdk_macros/fseek/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_file.mac\"\n\n[...]\nfseek (myfp), 1080, #SEEK_CUR\nfclose(MAN_FP)\nrts\n</code></pre> <p>See XFSEEK kernel primitive.</p>"},{"location":"developer_manual/orixsdk_macros/fwrite/","title":"fwrite","text":""},{"location":"developer_manual/orixsdk_macros/fwrite/#fwrite-macro","title":"FWRITE macro","text":""},{"location":"developer_manual/orixsdk_macros/fwrite/#description","title":"Description","text":"<p>Write bytes into file</p>"},{"location":"developer_manual/orixsdk_macros/fwrite/#usage","title":"Usage","text":"<p>fwrite ptr, size, count, fp</p> <p>note:</p> <ul> <li>ptr may be : (ptr), address</li> <li>size may be: (ptr), address</li> <li>fp may be  : address, #value, {address,y}</li> </ul>"},{"location":"developer_manual/orixsdk_macros/fwrite/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_file.mac\"\n\n[...]\nfwrite (myptr), 1080, 1, MAN_FP ; myptr is from a malloc for example\nfclose(MAN_FP)\nrts\n</code></pre> <p>See XFWRITE kernel primitive</p>"},{"location":"developer_manual/orixsdk_macros/getcwd/","title":"getcwd","text":""},{"location":"developer_manual/orixsdk_macros/getcwd/#getcwd","title":"Getcwd","text":""},{"location":"developer_manual/orixsdk_macros/getcwd/#description","title":"Description","text":"<p>Get cwd</p>"},{"location":"developer_manual/orixsdk_macros/getcwd/#usage","title":"Usage","text":"<p>getcwd ptr</p> <p>note: ptr may be: ptr, address</p>"},{"location":"developer_manual/orixsdk_macros/getcwd/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_dir.mac\"\n\npwd            := userzp ; 2 bytes\n\ngetcwd pwd\nrts\n</code></pre> <p>Call XGETCWD kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/getmainargs/","title":"getmainargs","text":""},{"location":"developer_manual/orixsdk_macros/getmainargs/#getmainargs","title":"Getmainargs","text":""},{"location":"developer_manual/orixsdk_macros/getmainargs/#description","title":"Description","text":"<p>Get arg</p>"},{"location":"developer_manual/orixsdk_macros/getmainargs/#usage","title":"Usage","text":"<p>Get main args : get arg value</p>"},{"location":"developer_manual/orixsdk_macros/getmainargs/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_mainargs.mac\"\n\nXMAINARGS       = $2C\nXGETARGV        = $2E\n\nargv            := userzp   ; 2 bytes\nargc            := userzp+2 ; 1 byte\nfirst_arg_ptr   := userzp+2 ; 1 byte\n\n; Init struct\ninitmainargs argv, argc, 0\n\ngetmainarg #1, (argv)\n\n; Save the ptr of the first parameter in first_arg_ptr\nsta     first_arg_ptr\nsty     first_arg_ptr+1\n\n; Displays because A and Y are set\nBRK_TELEMON XWSTR0 ; Displays the arg 1 from the command line\nrts\n</code></pre> <p>Result (argbin) is binary in assembly with a parameter \"foo\"</p> <pre><code>/#argbin foo\nfoo\n</code></pre> <p>Call XGETARGV kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/initmainargs/","title":"initmainargs","text":""},{"location":"developer_manual/orixsdk_macros/initmainargs/#initmainargs","title":"initmainargs","text":""},{"location":"developer_manual/orixsdk_macros/initmainargs/#description","title":"Description","text":"<p>Initialize struct of the mainargs from current process</p>"},{"location":"developer_manual/orixsdk_macros/initmainargs/#usage","title":"Usage","text":""},{"location":"developer_manual/orixsdk_macros/initmainargs/#parameters-already-prepared","title":"Parameters already prepared","text":"<p>initmainargs ptr, nb_of_paramter, 0</p>"},{"location":"developer_manual/orixsdk_macros/initmainargs/#copy-only-command-line-to-ptr-buffer","title":"Copy only command line to ptr buffer","text":"<p>initmainargs ptr, nb_of_paramter, 1</p>"},{"location":"developer_manual/orixsdk_macros/initmainargs/#example","title":"Example","text":"<pre><code>  .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_mainargs.mac\"\n\nXMAINARGS       = $2C\nXGETARGV        = $2E\nargv            := userzp   ; 2 bytes -&gt; ptr\nargc            := userzp+2 ; 1 byte -&gt; value\n\ninitmainargs argv, argc, 0\n...\n\nmfree(argv) ; Free argv copy\nrts\n</code></pre> <p>initmainargs calls XMAINARGS kernel routine. It will returns in argv a ptr with a malloc performs by the kernel. It means that it must be free after the use of the mainargs (if there is no others uses after)</p> <p>Call XMAINARGS function.</p>"},{"location":"developer_manual/orixsdk_macros/itoa/","title":"itoa","text":""},{"location":"developer_manual/orixsdk_macros/itoa/#itoa-macro","title":"itoa macro","text":""},{"location":"developer_manual/orixsdk_macros/itoa/#description","title":"Description","text":"<p>convert a number into string</p>"},{"location":"developer_manual/orixsdk_macros/itoa/#usage","title":"Usage","text":"<p>itoa [ptr], [len], [char]</p> <p>ptr may be: (ptr), address</p>"},{"location":"developer_manual/orixsdk_macros/itoa/#output","title":"Output","text":"<p>N/A</p>"},{"location":"developer_manual/orixsdk_macros/itoa/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"SDK_misc.mac\"\n\nitoa mynumber,2,2\nrts\nmynumber:\n.byte 12\n</code></pre> <p>Call XBINDX kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/malloc/","title":"malloc","text":""},{"location":"developer_manual/orixsdk_macros/malloc/#malloc","title":"Malloc","text":""},{"location":"developer_manual/orixsdk_macros/malloc/#description","title":"Description","text":"<p>Performs a malloc</p>"},{"location":"developer_manual/orixsdk_macros/malloc/#usage","title":"usage","text":"<p>malloc size [,ptr] [,oom_msg_ptr] [,fail_value]</p> <p>malloc #$0100 malloc (ptr) malloc value</p> <p>Note:     - if parameter 'ptr' is present, store resulting AY in ptr &amp;ptr+1     - if parameter 'oom_msg_ptr' is present, emit string pointed by         'oom_msg_ptr' and return if AY is null (ie malloc error)</p>"},{"location":"developer_manual/orixsdk_macros/malloc/#output","title":"Output","text":"<p>A and Y contains the ptr. If A and Y are equal to 0, the malloc had failed</p>"},{"location":"developer_manual/orixsdk_macros/malloc/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_memory.mac\"\n\nmalloc #$100\nrts\n</code></pre> <p>Call XMALLOC function</p>"},{"location":"developer_manual/orixsdk_macros/memdecal/","title":"memdecal","text":""},{"location":"developer_manual/orixsdk_macros/memdecal/#memdecal-macro","title":"Memdecal macro","text":""},{"location":"developer_manual/orixsdk_macros/memdecal/#description","title":"Description","text":"<p>move memory</p>"},{"location":"developer_manual/orixsdk_macros/memdecal/#usage","title":"Usage","text":"<p>memdecal ptr_dst, src_start, src_end</p> <p>exit:     - X: unused     - AY: ptr_dst (A=LSB)</p> <p>note:     ptr may be: (ptr), address</p>"},{"location":"developer_manual/orixsdk_macros/memdecal/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_memory.mac\"\n\nmemdecal $c040, $c000, $c080\nrts\n</code></pre> <p>Call XDECAL kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/memmove/","title":"memmove","text":""},{"location":"developer_manual/orixsdk_macros/memmove/#memmove-macro","title":"Memmove macro","text":""},{"location":"developer_manual/orixsdk_macros/memmove/#description","title":"Description","text":"<p>Move memory</p>"},{"location":"developer_manual/orixsdk_macros/memmove/#usage","title":"Usage","text":"<p>memmove ptr_dst, src_start, src_len</p> <p>exit:     - X: unused     - AY: ptr_dst (A=LSB)</p> <p>note:     ptr may be: (ptr), address</p>"},{"location":"developer_manual/orixsdk_macros/memmove/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_memory.mac\"\n\nmemmove $c080,$c000, 10\n\nrts\n</code></pre> <p>Call XDECAL kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/mfree/","title":"mfree","text":""},{"location":"developer_manual/orixsdk_macros/mfree/#mfree-free-pointer","title":"Mfree (free pointer)","text":""},{"location":"developer_manual/orixsdk_macros/mfree/#description","title":"Description","text":"<p>Performs a mfree memory</p>"},{"location":"developer_manual/orixsdk_macros/mfree/#usage","title":"usage","text":"<p>mfree (ptr)</p>"},{"location":"developer_manual/orixsdk_macros/mfree/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_memory.mac\"\n\n; mymalloc is a 2 bytes zp ptr\nmfree (mymalloc)\nrts\n</code></pre> <p>Call XFREE function.</p>"},{"location":"developer_manual/orixsdk_macros/mkdir/","title":"mkdir","text":""},{"location":"developer_manual/orixsdk_macros/mkdir/#mkdir-macro","title":"MKDIR macro","text":""},{"location":"developer_manual/orixsdk_macros/mkdir/#decription","title":"Decription","text":"<p>Performs a mkdir</p>"},{"location":"developer_manual/orixsdk_macros/mkdir/#usage","title":"Usage","text":"<p>mkdir ptr</p> <p>note:  ptr may be: (ptr), address</p>"},{"location":"developer_manual/orixsdk_macros/mkdir/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_dir.mac\"\n\nmkdir myfolder\nrts\nmyfolder:\n.asciiz \"here\"\n</code></pre> <p>Call XMKDIR function.</p>"},{"location":"developer_manual/orixsdk_macros/overview/","title":"Overview","text":""},{"location":"developer_manual/orixsdk_macros/overview/#summary","title":"Summary","text":""},{"location":"developer_manual/orixsdk_macros/ping/","title":"ping","text":""},{"location":"developer_manual/orixsdk_macros/ping/#ping","title":"Ping","text":""},{"location":"developer_manual/orixsdk_macros/ping/#description","title":"Description","text":"<p>Produce a ping sound</p>"},{"location":"developer_manual/orixsdk_macros/ping/#usage","title":"Usage","text":"<p>ping</p>"},{"location":"developer_manual/orixsdk_macros/ping/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_sound.mac\"\n\nping\nrts\n</code></pre> <p>Call XPING kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/print/","title":"print","text":""},{"location":"developer_manual/orixsdk_macros/print/#print-macro","title":"Print macro","text":""},{"location":"developer_manual/orixsdk_macros/print/#description","title":"Description","text":"<p>print string in text mode</p>"},{"location":"developer_manual/orixsdk_macros/print/#usage","title":"usage","text":"<p>print #byte [,SAVE] print (pointer) [,SAVE] print address [,SAVE]</p> <p>Option:</p> <ul> <li>NOSAVE : does not preserve A,X,Y registers</li> </ul>"},{"location":"developer_manual/orixsdk_macros/print/#example","title":"Example","text":"<pre><code>  .include \"../orix-sdk/macros/SDK_print.mac\"\n.include \"telestrat.inc\"\n\nprint helloworld_str\ncrlf ; Return line\nrts\n\nhelloworld_str:\n.asciiz \"Hello world!\"\n</code></pre> <p>Call XWSTR0 function.</p>"},{"location":"developer_manual/orixsdk_macros/print_int/","title":"print_int","text":""},{"location":"developer_manual/orixsdk_macros/print_int/#print_int","title":"Print_int","text":""},{"location":"developer_manual/orixsdk_macros/print_int/#description","title":"Description","text":"<p>Displays integer</p>"},{"location":"developer_manual/orixsdk_macros/print_int/#usage","title":"Usage","text":"<p>print_int [ptr], [len], [char]</p> <p>note: ptr may be: (ptr), address,  len: value char: value (DEFAFF is not restored)</p>"},{"location":"developer_manual/orixsdk_macros/print_int/#example-1","title":"Example 1","text":"<p>The value is from mynumber offset</p> <pre><code>  .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_print.mac\"\n\nprint_int mynumber, 2, 2\nrts\n\nmynumber:\n.byt 12\n</code></pre>"},{"location":"developer_manual/orixsdk_macros/print_int/#example-2","title":"Example 2","text":"<p>The value is from registers</p> <pre><code>  .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_print.mac\"\n\nlda     #12 ; 12\nldy     #00 ; 0 because the number is 12 (from A)\nprint_int  ,2, 2 ; an arg is skipped because the number is from register\nrts\n</code></pre> <p>Call XDECIM xdecim</p>"},{"location":"developer_manual/orixsdk_macros/prints/","title":"prints","text":""},{"location":"developer_manual/orixsdk_macros/prints/#prints-macro","title":"prints macro","text":""},{"location":"developer_manual/orixsdk_macros/prints/#description","title":"Description","text":""},{"location":"developer_manual/orixsdk_macros/prints/#usage","title":"Usage","text":""},{"location":"developer_manual/orixsdk_macros/prints/#example","title":"Example","text":"<pre><code>.include \"../../orix-sdk/macros/SDK_print.mac\"\nprints \"TOTO\"\n</code></pre>"},{"location":"developer_manual/orixsdk_macros/scroll/","title":"scroll","text":""},{"location":"developer_manual/orixsdk_macros/scroll/#scroll-macro","title":"scroll macro","text":""},{"location":"developer_manual/orixsdk_macros/scroll/#description","title":"Description","text":"<p>Perfoms a scroll text</p>"},{"location":"developer_manual/orixsdk_macros/scroll/#usage","title":"Usage","text":"<p>scroll [Direction],firstline, last_line_to_scroll</p>"},{"location":"developer_manual/orixsdk_macros/scroll/#example-1","title":"Example 1","text":"<pre><code>    .include \"telestrat.inc\"\n; Scroll all lines from bottom to the first line : it erases the first line with the second and so open0\nscroll up, 0, 26\nscroll down, 0, 26\nrts\n</code></pre>"},{"location":"developer_manual/orixsdk_macros/scroll/#example-2","title":"Example 2","text":"<p>the first line to scroll is computed and is in X register</p> <pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_display.mac\"\n\n; The second arg is empty because we notice to the macro that it's provided by X register\nldx #3\nscroll up,, 26\nrts\n</code></pre> <p>This only work with X register</p> <p>Call XSCROB routine or XSCROH</p>"},{"location":"developer_manual/orixsdk_macros/setscreen/","title":"setscreen","text":""},{"location":"developer_manual/orixsdk_macros/setscreen/#setscreen","title":"Setscreen","text":""},{"location":"developer_manual/orixsdk_macros/setscreen/#description","title":"Description","text":"<p>Switch to text or hires</p>"},{"location":"developer_manual/orixsdk_macros/setscreen/#usage","title":"Usage","text":"<p>setscreen [text|hires]</p> <p>Call XTEXT/XHIRES functions</p>"},{"location":"developer_manual/orixsdk_macros/setscreen/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_display.mac\"\n\nsetscreen hires\nrts\n</code></pre> <p>Call XTEXT routine or XHIRES</p>"},{"location":"developer_manual/orixsdk_macros/shoot/","title":"shoot","text":""},{"location":"developer_manual/orixsdk_macros/shoot/#shoot","title":"Shoot","text":""},{"location":"developer_manual/orixsdk_macros/shoot/#description","title":"Description","text":"<p>Produce a shoot sound</p>"},{"location":"developer_manual/orixsdk_macros/shoot/#usage","title":"Usage","text":"<p>shoot</p>"},{"location":"developer_manual/orixsdk_macros/shoot/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_sound.mac\"\n\nshoot\nrts\n</code></pre> <p>Call XSHOOT kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/strncat/","title":"strncat","text":""},{"location":"developer_manual/orixsdk_macros/strncat/#strncat","title":"strncat","text":""},{"location":"developer_manual/orixsdk_macros/strncat/#description","title":"Description","text":"<p>concat 2 strings. Strings must be terminated by 0</p>"},{"location":"developer_manual/orixsdk_macros/strncat/#usage","title":"Usage","text":"<p>strncat src, dest, n</p>"},{"location":"developer_manual/orixsdk_macros/strncat/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda     #&lt;file_path\nsta     ptr2\nlda     #&gt;file_path\nsta     ptr2+1\n\nstrncpy ptr2, ptr1, #20 ;strncpy(src, dest, n)\n\nlda     files_type_loader_low\nsta     ptr2\nlda     files_type_loader_high\nsta     ptr2+1\n\n\nstrncat RESB, ptr1 , #13\nrts\n</code></pre> <p>dest ptr will be changed by strncat. dest pointer must be saved</p>"},{"location":"developer_manual/orixsdk_macros/strncpy/","title":"strncpy","text":""},{"location":"developer_manual/orixsdk_macros/strncpy/#strncpy","title":"strncpy","text":"<p>strncpy src, dest, n</p> <p>A: 0 et Z=1 si copie effectu\u00e9e, inchang\u00e9 si non X: 0 Y: Longueur r\u00e9ellement copi\u00e9e</p> <pre><code>    .include \"telestrat.inc\"\n\nlda     #&lt;file_path\nsta     ptr2\nlda     #&gt;file_path\nsta     ptr2+1\n\n;Limit 20 bytes (immediate mode) strncpy(src, dest, n)\nstrncpy ptr2, ptr1, #20\nrts\n</code></pre>"},{"location":"developer_manual/orixsdk_macros/tohex/","title":"tohex","text":""},{"location":"developer_manual/orixsdk_macros/tohex/#tohex-macro","title":"tohex macro","text":""},{"location":"developer_manual/orixsdk_macros/tohex/#description","title":"Description","text":"<p>convert a 8 bit number hexadecimal</p>"},{"location":"developer_manual/orixsdk_macros/tohex/#usage","title":"Usage","text":"<p>tohex ptr</p> <p>ptr may be: address</p>"},{"location":"developer_manual/orixsdk_macros/tohex/#output","title":"Output","text":"<p>A and Y contains the ascii hexa value</p>"},{"location":"developer_manual/orixsdk_macros/tohex/#example-1","title":"Example 1","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"SDK_misc.mac\"\n\ntohex mynumber\nrts\nmynumber:\n.byte 12\n</code></pre>"},{"location":"developer_manual/orixsdk_macros/tohex/#example-2","title":"Example 2","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"SDK_misc.mac\"\n\nlda     #12\ntohex\nrts\n</code></pre> <p>Call XHEXA kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/unlink/","title":"unlink","text":""},{"location":"developer_manual/orixsdk_macros/unlink/#unlink-macro","title":"UNLINK macro","text":""},{"location":"developer_manual/orixsdk_macros/unlink/#description","title":"Description","text":"<p>Remove a file</p>"},{"location":"developer_manual/orixsdk_macros/unlink/#usage","title":"Usage","text":"<p>unlink address</p>"},{"location":"developer_manual/orixsdk_macros/unlink/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_file.mac\"\n\nunlink myfile\nrts\nmyfile:\n.asciiz \"toto.txt\"\n</code></pre> <p>Call XRM kernel function.</p>"},{"location":"developer_manual/orixsdk_macros/zap/","title":"zap","text":""},{"location":"developer_manual/orixsdk_macros/zap/#zap","title":"Zap","text":""},{"location":"developer_manual/orixsdk_macros/zap/#description","title":"Description","text":"<p>Produce a zap sound</p>"},{"location":"developer_manual/orixsdk_macros/zap/#usage","title":"Usage","text":"<p>zap</p>"},{"location":"developer_manual/orixsdk_macros/zap/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_sound.mac\"\n\nzap\nrts\n</code></pre> <p>Call XZAP kernel function.</p>"},{"location":"developer_manual/tutorials/print_string/","title":"hello world","text":""},{"location":"developer_manual/tutorials/print_string/#tutorial","title":"Tutorial","text":""},{"location":"developer_manual/tutorials/print_string/#hello-world","title":"Hello world","text":"CAsm <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\nprintf(\"Hello world!\\n\");\nreturn 0;\n}\n</code></pre> <pre><code>.include \"telestrat.inc\"\n.include \"../orix-sdk/macros/SDK_print.mac\"\n\nstart:\nprint str_hello\n\nrts\nstr_hello:\n.byte \"Hello world!\",$0A,$0D,0\n</code></pre>"},{"location":"hardware/disk_controler_and_twilighte_board/","title":"Disk controler and twilighte board","text":""},{"location":"hardware/disk_controler_and_twilighte_board/#disk-controler-and-twilighte-board","title":"Disk controler and twilighte board","text":""},{"location":"hardware/eeprom_structure/","title":"Eeprom structure","text":""},{"location":"hardware/eeprom_structure/#eeprom-structure","title":"eeprom structure","text":"<p>112KB</p> <p>The eeprom structure is (minimum requirement to boot):</p> <ul> <li> <p>First bank (16KB) : empty</p> </li> <li> <p>First bank (16KB) : empty</p> </li> <li> <p>First bank (16KB) : empty</p> </li> <li> <p>First bank (16KB) : empty</p> </li> <li> <p>Shell (16KB)</p> </li> <li>basic11 (16KB)</li> <li>Kernel (16KB)</li> </ul>"},{"location":"hardware/hardware_issues/","title":"Hardware issues","text":""},{"location":"hardware/hardware_issues/#hardwares-issues","title":"Hardwares issues","text":""},{"location":"hardware/hardware_issues/#oric-does-not-work-with-the-board","title":"Oric does not work with the board","text":"<p>See Incompatibilty section</p>"},{"location":"hardware/hardware_issues/#the-screen-is-black-at-the-first-boot","title":"The screen is black at the first boot","text":"<p>On some Oric, the board does not start at boot time. If you press reset, it should start normally</p>"},{"location":"hardware/hardware_issues/#usb-mass-storage-and-sdcard-compatibility","title":"USB mass storage and sdcard compatibility","text":"<p>Some tests had been done on some usb mass storage key and sdcard, here is some informations</p>"},{"location":"hardware/hardware_issues/#working-sdcard","title":"Working sdcard","text":"<ul> <li> <p>samsung evo 32GB and 16GB</p> </li> <li> <p>samsung evo plus 32GB and 16GB</p> </li> <li> <p>and many others</p> </li> </ul>"},{"location":"hardware/hardware_issues/#working-usb-mass-storage","title":"Working usb mass storage","text":"<ul> <li>Sandisk 32GB</li> <li>pi zero in gadget mode</li> </ul>"},{"location":"hardware/hardware_issues/#non-working-usb-mass-storage-key","title":"Non working usb mass storage key","text":"<ul> <li>verbatim 'store and go' 8GB</li> </ul>"},{"location":"hardware/i_o/","title":"I/O","text":""},{"location":"hardware/i_o/#io","title":"I/O","text":"<p>The I/O ports can be see also when you type</p> <pre><code>/#ioports\n</code></pre>"},{"location":"hardware/i_o/#321-register-for-the-id-of-the-bank-to-switch","title":"$321 register for the id of the bank to switch","text":"<p>b0, b1, b2 which can select the id of the bank wanted.</p>"},{"location":"hardware/i_o/#314-register","title":"$314 register","text":"<p>This register is in firmware 2, and can mirror $314 calls to change to overlay memory</p>"},{"location":"hardware/i_o/#342-twilighte-board-register","title":"$342 : twilighte board register","text":"<ul> <li> <p>b0,b1,b2 version number is equal to 1 or 2, but can be overwritten (There is not read only protection</p> </li> <li> <p>b5 : if it's equal to 0 if we are on eeprom set, 1 if it's ram set</p> </li> </ul>"},{"location":"hardware/i_o/#343-twilighte-banking-register","title":"$343 : Twilighte banking register","text":"<p>This register can contains values from 0 to 7 included. It defines the \"set\" of 64KB which be present in slot 4,3,2 and 1 of register $321 which contains the bank.</p>"},{"location":"hardware/incompatibility_oric/","title":"Oric incompatibility","text":""},{"location":"hardware/incompatibility_oric/#board-incompatibility","title":"Board Incompatibility","text":"<p>Some oric crashes sometimes with the board. If you have an amplibus (as Silicebit one with 74HCT541), you can plug it in the oric, and insert the expansion board from twilighte board in it, and the twilighte board in this last board.</p> <p>It should solve all Oric compatibility with the board.</p>"},{"location":"hardware/joysticks/","title":"Joysticks","text":""},{"location":"hardware/joysticks/#joysticks","title":"Joysticks","text":""},{"location":"hardware/joysticks/#read-joysticks-states","title":"Read joysticks states","text":"<p>On the board, joysticks works likes Telestrat one's.</p> <p>Right port has 3 buttons</p> <p>Left port has 1 button</p> <p>There is 2 bits to read joysticks states. Bit 7 and 6</p>"},{"location":"hardware/memory/","title":"Memory","text":""},{"location":"hardware/memory/#memory","title":"Memory","text":"<p>Twilighte boards handles 512KB of RAM (SRAM) and 512KB of eeprom.</p> <p>Theses RAM and ROM are in banking mode : It replaces the top memory ($c000 to $FFFF) as Overlay ram works with microdisc systems.</p> <p>There is 32 banks of RAMs and 32 banks of ROMs</p> <p>bank command line command can displays the availables banks.</p>"},{"location":"hardware/microdisc_controler/","title":"How to connect a microdisc controler with the twilighte board","text":""},{"location":"hardware/microdisc_controler/#how-to-connect-a-microdisc-controler-with-the-twilighte-board","title":"How to connect a microdisc controler with the twilighte board","text":"<ul> <li>Solder A14 et A15 on the microdisc controler to ground</li> <li>remove eeprom</li> <li>connect silicebit amplibus on twilighte board expansion port</li> </ul>"},{"location":"hardware/microdisc_controler/#issues","title":"Issues","text":"<ul> <li>Reset from expansion board does not work, the one on the microdisc controler is working</li> <li>The usb controler in the twilighte board extension refuses to work properly during 20 minutes, you need to wait 20 minutes before trying to use commands on twilighte configuration.</li> </ul>"},{"location":"hardware/microdisc_controler/#steps","title":"Steps","text":""},{"location":"hardware/microdisc_controler/#step-1-check-drive","title":"Step 1 : Check Drive","text":"<p>Check if the switches are ok on the drive :</p> <p></p>"},{"location":"hardware/microdisc_controler/#step-3-solder-a14-and-a15-to-ground-on-microdisc-to-oric-connector","title":"Step 3 : solder A14 and A15 to ground on microdisc to oric connector","text":""},{"location":"hardware/microdisc_controler/#step-4-remove-eprom","title":"Step 4 : Remove Eprom","text":"<p>See the blue empty connector : the eprom is removed</p> <p></p>"},{"location":"hardware/microdisc_controler/#step-5-connect-and-switch-on","title":"Step 5 : Connect and switch on","text":"<ul> <li>Connect microdisc controler to the oric with the amplibus like this (Insert Silicebit amplibus into expansion board connector and the ribbon to microdisc controler in silicebit amplibus connector)</li> </ul> <ul> <li>Connect the drive to microdisc controler</li> <li>Switch on the oric with its own psu</li> <li>Switch on the microdisc controleur with its own psu too</li> </ul> <p>The internal usb controler in Twilighte board refuses to work correctly during 20 minutes, in this configuration. Wait a bit. It's a problem with the ribbon cable connected in the amplibus</p>"},{"location":"hardware/microdisc_controler/#step-6-uses-bootfd-to-start-bootsector","title":"Step 6 : Uses bootfd to start bootsector","text":"<p>/#bootfd</p>"},{"location":"hardware/microdisc_controler/#step-7-optionnal-use-a-pico-psu-for-the-microdisc-controler","title":"Step 7 (Optionnal) : Use a pico psu for the microdisc controler","text":"<p>If you have a micro psu, you can plug it for your usb controler. You can also buy an connector to plug the micro psu if you want to insert it in a case.</p> <p>The following photo shows the pico psu and the adaptor for pico psu.</p> <p></p> <ul> <li>Solder \"power on\" on the adaptator, in order to have the pico starting</li> </ul> <p></p> <ul> <li>plug a 12V PSU (1,5A used during test), in the jack connector of the pico psu</li> </ul>"},{"location":"hardware/nappe/","title":"Ribbon cable","text":""},{"location":"hardware/nappe/#ribbon-cable-management-on-twilighte-board","title":"Ribbon cable management on twilighte board","text":"<p>The twilighte board is built without ribbon cable but it can be done with amplibus and a ribbon cable. It works only if there is 2 lines of 74hct541 (see bellow).</p> <p>This trick is also useful for Oric which does not want to start with the board. The board has some incompatibility issue with some oric, but it's can be connected with 2 lines of 74HCT541. One from an amplibus for example, and another from the twilighte board expansion board.</p>"},{"location":"hardware/nappe/#first-step-build-the-ribbon-cable","title":"First step build the ribbon cable","text":"<p>Get a floppy disk ribbon cable. And put a female HE10 34 like this at approximately 13 cms (It could be more, but greater cable is not tested yet)from the previous connector :</p> <p>Put the notch (black connector) at the bottom and crimp the HE10 34 connector (Grey connector) like this :</p> <p></p> <p>On the picture the notch is not visible on the black connector, because it's on the other side. But the hole on the grey connector is visible. It's really important to keep theses positions.</p> <p>Ribbon cable tested :</p> <ul> <li>10 cms (OK)</li> <li>20 cms (OK)</li> <li>30 cms (OK)</li> </ul> <p>Now, we can use any amplibus or another expansion board from the twilighte board</p>"},{"location":"hardware/nappe/#with-a-simple-amplibus","title":"with a simple amplibus","text":"<p>If you have a amplibus as Silicebit one (see the picture), you can now connect the ribbon cable to these amplibus (Black connector on the previous picture) (notch must be at the bottom as the Silicebit amplibus permits).</p> <p></p> <p>And plug the grey connector to twilighte board expansion board. The grey connector must be with the hole at the top when connected to expansion board.</p> <p></p>"},{"location":"hardware/nappe/#you-have-an-extra-twilighte-expansion-board","title":"You have an extra twilighte expansion board","text":"<p>if you have this one, you can not connect without a connector modification. The angle connector to the twilighte board side must be to the top of the board. The previous ribbon cable can be connected with the notch at the bottom of the card like the next picture</p> <p></p> <p>Full overview :</p> <p></p>"},{"location":"hardware/synth_vocal_mea80900/","title":"Plug voice synthetizer","text":""},{"location":"hardware/synth_vocal_mea80900/#voice-synthesizer-compatibility","title":"Voice synthesizer compatibility","text":"<p>Voice synthetizer works with the board. It needs a silicebit amplibus to have the extension working.</p>"},{"location":"hardware/synth_vocal_mea80900/#how-to-plug-with-the-board","title":"How to plug with the board","text":""},{"location":"hardware/ch376/vars8/","title":"CH376 extra vars","text":""},{"location":"hardware/ch376/vars8/#ch376-extra-vars","title":"CH376 extra vars","text":""},{"location":"hardware/ch376/vars8/#vars-8","title":"Vars 8","text":"<pre><code>#define VAR_SYS_BASE_INFO 0x20 / * Informations de base du syst\u00e8me actuel * /\n/ * Le bit 6 est utilis\u00e9 pour indiquer la sous-classe du p\u00e9riph\u00e9rique de stockage USB SubClass-Code, le bit 6 est 0 pour indiquer que la sous-classe est 6 et le bit 6 est 1 pour indiquer que la sous-classe est diff\u00e9rente de 6 * /\n/ * Le bit 5 est utilis\u00e9 pour indiquer l'\u00e9tat de la configuration USB en mode p\u00e9riph\u00e9rique USB et l'\u00e9tat de la connexion du p\u00e9riph\u00e9rique USB en mode h\u00f4te USB * /\n/ * En mode p\u00e9riph\u00e9rique USB, si le bit 5 est 1, la configuration USB est termin\u00e9e et les bits 5 et 0 ne sont pas configur\u00e9s * /\n/ * En mode h\u00f4te USB, si le bit 5 est 1, il y a un p\u00e9riph\u00e9rique USB dans le port USB, et si le bit 5 est 0, il n'y a pas de p\u00e9riph\u00e9rique USB dans le port USB * /\n/ * Le bit 4 est utilis\u00e9 pour indiquer l'\u00e9tat de verrouillage du tampon en mode p\u00e9riph\u00e9rique USB. Le bit 4 est 1 signifie que le tampon USB est verrouill\u00e9 et le bit 6 est 1 signifie qu'il a \u00e9t\u00e9 lib\u00e9r\u00e9 * /\n/ * Autres bits, r\u00e9serv\u00e9s, veuillez ne pas modifier * /\n#define VAR_RETRY_TIMES 0x25 / * Nombre de tentatives d'op\u00e9ration de transaction USB * /\n/ * Si le bit 7 est 0, il ne r\u00e9essayera pas lorsque NAK est re\u00e7u, le bit 7 est 1 et le bit 6 est 0, et r\u00e9essayera \u00e0 l'infini lors de la r\u00e9ception de NAK (vous pouvez utiliser la commande CMD_ABORT_NAK pour abandonner la nouvelle tentative), le bit 7 est 1 et 6 est 1 R\u00e9essayez au plus 3 secondes lors de la r\u00e9ception de NAK * /\n/ * Bit 5 ~ Bit 0 repr\u00e9sente le nombre de tentatives apr\u00e8s l'expiration du d\u00e9lai * /\n#define VAR_FILE_BIT_FLAG 0x26 / * Indicateur de bit en mode fichier h\u00f4te * /\n/ * Bit 1 et Bit 0, l'indicateur du syst\u00e8me de fichiers FAT du disque logique, 00-FAT12, 01-FAT16, 10-FAT32, 11-ill\u00e9gal * /\n/ * Bit 2, indique si les donn\u00e9es de la table FAT dans le tampon courant ont \u00e9t\u00e9 modifi\u00e9es, 0-non modifi\u00e9, 1-modifi\u00e9 * /\n/ * Bit 3, la longueur du fichier doit \u00eatre modifi\u00e9e, le fichier actuel est ajout\u00e9 avec les donn\u00e9es, 0-Aucune modification n'est pas ajout\u00e9e, 1-Ajout\u00e9 et doit \u00eatre modifi\u00e9 * /\n/ * Autres bits, r\u00e9serv\u00e9s, veuillez ne pas modifier * /\n#define VAR_DISK_STATUS 0x2B / * \u00c9tat du disque et du fichier en mode fichier h\u00f4te * /\n#define VAR_SD_BIT_FLAG 0x30 / * Indicateur de bit de la carte SD en mode fichier h\u00f4te * /\n/ * Bit 0, version de la carte SD, 0- prend uniquement en charge la premi\u00e8re version SD, 1- prend en charge la deuxi\u00e8me version SD * /\n/ * Bit 1, reconnaissance automatique, carte 0-SD, carte 1-MMC * /\n/ * Bit 2, identification automatique, carte SD de capacit\u00e9 standard 0, carte SD 1 grande capacit\u00e9 (HC-SD) * /\n/ * Bit 4, d\u00e9lai d'expiration de la commande ACMD41 * /\n/ * Bit 5, d\u00e9lai d'expiration de la commande CMD1 * /\n/ * Bit 6, d\u00e9lai d'expiration de la commande CMD58 * /\n/ * Autres bits, r\u00e9serv\u00e9s, veuillez ne pas modifier * /\n#define VAR_UDISK_TOGGLE 0x31 / * L'indicateur de synchronisation du point de terminaison BULK-IN / BULK-OUT du p\u00e9riph\u00e9rique de stockage USB * /\n/ * Bit 7, indicateur de synchronisation de point de terminaison en bloc * /\n/ * Bit 6, indicateur de synchronisation de point de terminaison en bloc * /\n/ * Bit 5 ~ Bit 0, doit \u00eatre 0 * /\n#define VAR_UDISK_LUN 0x34 / * Le num\u00e9ro d'unit\u00e9 logique du p\u00e9riph\u00e9rique de stockage USB * /\n/ * Bit 7 ~ Bit 4, le num\u00e9ro d'unit\u00e9 logique actuel du p\u00e9riph\u00e9rique de stockage USB, apr\u00e8s que CH376 initialise le p\u00e9riph\u00e9rique de stockage USB, la valeur par d\u00e9faut est d'acc\u00e9der \u00e0 0 # unit\u00e9 logique * /\n/ * Bit 3 ~ Bit 0, le num\u00e9ro d'unit\u00e9 logique maximum du p\u00e9riph\u00e9rique de stockage USB, plus 1 est \u00e9gal au nombre d'unit\u00e9s logiques * /\n#define VAR_SEC_PER_CLUS 0x38 / * Le nombre de secteurs par cluster du disque logique * /\n#define VAR_FILE_DIR_INDEX 0x3B / * Le num\u00e9ro d'index des informations de r\u00e9pertoire de fichiers en cours dans le secteur * /\n#define VAR_CLUS_SEC_OFS 0x3C / * Le d\u00e9calage de secteur du pointeur de fichier actuel dans le cluster, 0xFF pointe vers la fin du fichier, la fin du cluster * /\n\n/ * Variable 32 bits / 4 octets * /\n#define VAR_DISK_ROOT 0x44 / * Pour les disques FAT16, c'est le nombre de secteurs occup\u00e9s par le r\u00e9pertoire racine, et pour les disques FAT32, c'est le num\u00e9ro de cluster de d\u00e9part du r\u00e9pertoire racine (longueur totale 32 bits, octet de poids faible en premier) * /\n#define VAR_DSK_TOTAL_CLUS 0x48 / * Le nombre total de clusters du disque logique (la longueur totale est de 32 bits, octet de poids faible en premier) * /\n#define VAR_DSK_START_LBA 0x4C / * Le num\u00e9ro de secteur absolu de d\u00e9part du disque logique LBA (longueur totale 32 bits, octet de poids faible en premier) * /\n#define VAR_DSK_DAT_START 0x50 / * LBA de d\u00e9part de la zone de donn\u00e9es du disque logique (la longueur totale est de 32 bits, octet de poids faible en premier) * /\n#define VAR_LBA_BUFFER 0x54 / * LBA correspondant aux donn\u00e9es du tampon de donn\u00e9es actuel du disque (longueur totale 32 bits, octet de poids faible en premier) * /\n#define VAR_LBA_CURRENT 0x58 / * L'adresse LBA de d\u00e9part du disque actuellement lu et \u00e9crit (la longueur totale est de 32 bits, octet de poids faible en premier) * /\n#define VAR_FAT_DIR_LBA 0x5C / * L'adresse LBA du secteur o\u00f9 se trouvent les informations du r\u00e9pertoire de fichiers en cours (longueur totale 32 bits, octet de poids faible en premier) * /\n#define VAR_START_CLUSTER 0x60 / * Le num\u00e9ro de cluster de d\u00e9part du fichier ou du r\u00e9pertoire (dossier) actuel (longueur totale 32 bits, octet de poids faible en premier) * /\n#define VAR_CURRENT_CLUST 0x64 / * Le num\u00e9ro de cluster actuel du fichier actuel (la longueur totale est de 32 bits, octet de poids faible en premier) * /\n#define VAR_FILE_SIZE 0x68 / * La longueur du fichier actuel (la longueur totale est de 32 bits, octet de poids faible en premier) * /\n#define VAR_CURRENT_OFFSET 0x6C / * Le pointeur de fichier actuel, le d\u00e9calage d'octet de la position actuelle de lecture et d'\u00e9criture (longueur totale 32 bits, octet de poids faible en premier) * / \n</code></pre>"},{"location":"kernel/memmap/","title":"Memmap","text":""},{"location":"kernel/memmap/#memmap","title":"Memmap","text":""},{"location":"kernel/memmap/#page-0","title":"Page 0","text":"Type Name Range Size RAM RES $00-$01 2 RAM RESB $02-$03 2 RAM RESC $04-$05 2 RAM RESD $06-$07 2 RAM RESE $08-$09 2 RAM RESF $0A-$0B 2 RAM RESG $59-$5A 2 RAM RESH $60-$61 2 RAM RESI $62-$63 2 RAM RESCONCAT $64-$65 2 RAM TR0 $0C-$0C 1 RAM TR1 $0D-$0D 1 RAM TR2 $0E-$0E 1 RAM TR3 $0F-$0F 1 RAM TR4 $10-$10 1 RAM TR5 $11-$11 1 RAM TR6 $12-$12 1 RAM TR7 $13-$13 1 RAM DEFAFF $14-$14 1 RAM FREE $15-$16 2 RAM ADDRESS_VECTOR_FOR_ADIOB $17-$18 2 RAM work_channel $19-$19 1 RAM i_o_counter $1A-$1B 2 RAM FREE $1C-$1C 1 RAM GS $1D-$1D 1 RAM FREE $1E-$1E 1 RAM TOFIX $1F-$1F 1 RAM TOFIX $20-$20 1 RAM IRQSVA $21-$21 1 RAM IRQSVX $22-$22 1 RAM IRQSVY $23-$23 1 RAM IRQSVP $24-$24 1 RAM FIXME_PAGE0_0 $25-$25 1 RAM ADSCR $26-$27 2 RAM SCRNB $28-$29 2 RAM ADKBD $2A-$2B 2 RAM PTR_READ_DEST $2C-$2D 2 RAM FREE $2E-$31 RAM ptr1 $32-$33 2 RAM tmp1 $34-$34 1 RAM FREE $35-$3F RAM ADCLK $40-$41 2 RAM TIMEUS $42-$43 2 RAM TIMEUD (used in cc65 clock function) $44-$45 2 RAM HRSX $46-$46 1 RAM HRSY $47-$47 1 RAM FREE $48-$48 1 RAM HRSX40 $49-$49 1 RAM HRSX6 $4A-$4A 1 RAM ADHRS $4B-$4C 2 RAM HRS1 $4D-$4E 2 RAM HRS2 $4F-$50 2 RAM HRS3 $51-$52 2 RAM HRS4 $53-$54 2 RAM HRS5 $55-$56 2 RAM HRSFB $57-$57 1 RAM VABPK1 $58-$58 1 RAM FREE $59-$5A 2 RAM INDRS $5B-$5B 1 RAM FREE $5C-$5F 2 RAM FREE $8C-$FF 115 ## Page 2 Type Name Range Size :------- :----------------------------- :----------- :----- RAM KERNEL_ERRNO $0200-$0200 1 RAM KERNEL_CH376_MOUNT $0201-$0201 1 RAM KERNEL_XFREE_TMP $0202-$0202 1 RAM KERNEL_XKERNEL_CREATE_PROCESS_TMP $0203-$0203 1 RAM KERNEL_TMP_XEXEC $0204-$0204 1 RAM KERNEL_KERNEL_XEXEC_BNKOLD $0205-$0205 1 RAM KERNEL_MALLOC_TYPE $0206-$0206 1 RAM KERNEL_SAVE_XEXEC_CURRENT_SET $0207-$0207 1 RAM KERNEL_SAVE_XEXEC_CURRENT_ROM_RAM $0208-$0209 1 RAM FREE $0209-$020F 6 RAM TIMED $0210-$0210 1 RAM TIMES $0211-$0211 1 RAM TIMEM $0212-$0212 1 RAM TIMEH $0213-$0213 1 RAM FLGCLK $0214-$0214 1 RAM FLGCLK_FLAG $0215-$0215 1 RAM FLGCUR $0216-$0216 1 RAM FLGCUR_STATE $0217-$0217 1 RAM ADSCRL $0218-$021B 4 RAM ADSCRH $021C-$021F 4 RAM SCRX $0220-$0220 1 RAM BUSY_BANK_TABLE_RAM $0221-$0224 3 RAM SCRY $0224-$0227 4 RAM SCRDX $0228-$0228 1 RAM SCRFX $022C-$022C 1 RAM SCRFY $0234-$0234 1 RAM SCRDY $0230-$0230 1 RAM SCRBAL $0238-$0238 1 RAM SCRBAH $023C-$023C 1 RAM SCRCT $0240-$0240 1 RAM SCRCF $0244-$0244 1 RAM FIXME $0248-$0220 80 RAM FLGSCR $0248-$024C 4 RAM CURSCR $024C-$024D 1 RAM FREE $024D-$0256 11 RAM SCRTXT $0256-$0260 4 RAM SCRHIR  (not used) $025C-$0260 4 RAM SCRTRA $0262-$0266 6 RAM KBDCOL $0268-$0270 8 RAM KBDFLG_KEY $0270-$0272 2 RAM KBDVRR $0272-$0273 1 RAM KBDVRL $0273-$0275 2 RAM FLGKBD $0275-$0276 1 RAM KBDFCT $0276-$0277 1 RAM KBDSHT $0278-$0279 1 RAM KBDKEY $0279-$027E 1 RAM KBDCTC $027E-$027F 2 RAM FREE $027F-$02A5 40 RAM KEYBOARD_COUNTER $02A6-$02A9 3 RAM HRSPAT $02AA-$02AA 1 RAM IOTAB $02AE-$02B1 X RAM KERNEL_ADIOB $02B2-$02B9 8 RAM kernel_malloc_free_chunk_size $02BA-$02C3 10 RAM kernel_xmalloc_call $02C4-$02EB 39 RAM FLGRST $02EE-$02EE 1 RAM CSRND $02EF-$02EF 1 RAM FREE $02EC-$02ED 2 RAM VNMI $02F4-$02F7 3 RAM ADIODB_VECTOR $02F7-$02FA 3 RAM IRQVECTOR $02FA-$02FD 3 RAM VAPLIC $02FD-$0300 3 ## Page 3 Type Name Range Size :------- :----------------------------- :----------- :----- IO VIA1 $0300-$030F ## Page 4 Type Name Range Size :------- :----------------------------- :----------- :----- RAM page4 overlay_access $0419-$0436 54 ## Page 5&amp;6 Type Name Range Size :------- :----------------------------- :----------- :----- RAM FREE $0517-$0525 14 RAM Malloc table $0525-$0579 84 RAM main kernel process struct $0579-$058F 22 RAM BUFEDT $0590-$05FE 110 RAM KERNEL_MEMORY_DRIVER $05FE-$06A1 163 ## Kernel bank 7 Type Name Range Size :-------- :---------------------------- :------- :----- ROM FREE $feea-$fff0 262 ##Bank 0 Type Name Range Size -------- ---------------------------- ------- ----- BANK0 BUFBUF $c080-$c0b6 54 BANK0 BUFROU $c500-$c54e BANK0 TELEMON_KEYBOARD_BUFFER_BEGIN $c5c4-$c680 BANK0 XMALLOC (copy from kernel) $fb9c-$fc48 BANK0 XFREE (copy from kernel) $fc48-$fecd"},{"location":"kernel/xvalues/","title":"XVARS","text":""},{"location":"kernel/xvalues/#xvars","title":"XVARS","text":"<p>Get vars from kernel</p>"},{"location":"kernel/xvalues/#get-os-string-orix","title":"Get Os string (Orix)","text":"<p>XVARS_KERNEL_OSNAME = 9</p> <p>ldx     #XVARS_KERNEL_OSNAME BRK_KERNEL XVARS ; A and X contains</p>"},{"location":"kernel/primitives/","title":"General list","text":""},{"location":"kernel/primitives/#summary","title":"Summary","text":"<p>Kernel calls are done with brk VALUE.</p> <p>Some parameter are set into A,X,Y and some others ones needs to be set in Kernel zp memory.</p> <p>Orix-sdk must be used in order to manage in the right way kernel calls</p>"},{"location":"kernel/primitives/xbindx/","title":"XBINDX","text":""},{"location":"kernel/primitives/xbindx/#xbindx-16-bit-number-to-decimal","title":"XBINDX (16 bit number to decimal)","text":""},{"location":"kernel/primitives/xbindx/#description","title":"Description","text":"<p>convert A &amp; Y number into decimal string</p>"},{"location":"kernel/primitives/xbindx/#input","title":"Input","text":"<p>A &amp; Y the 16 bits value</p> <p>TR5 the pointer of the address to put decimal number (String)</p> <p>DEFAFF : space before the number</p>"},{"location":"kernel/primitives/xbindx/#example-1-displays-value-ay-16-bits-number-in-bb80-text-mode","title":"Example 1 : Displays value AY (16 bits number) in $bb80 text mode","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda        #&lt;$bb80\nsta        TR5\nlda        #&gt;$bb80\nsta        TR5+1\n\nlda        #$20\nsta        DEFAFF\n\nldx        #$01\nldy        #$00\nlda        #$10\nBRK_KERNEL XBINDX\nrts\n</code></pre> <p>See itoa macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xclose/","title":"XCLOSE","text":""},{"location":"kernel/primitives/xclose/#xclose","title":"XCLOSE","text":""},{"location":"kernel/primitives/xclose/#description","title":"Description","text":"<p>Close file</p>"},{"location":"kernel/primitives/xclose/#input","title":"Input","text":"<p>A : fd</p>"},{"location":"kernel/primitives/xclose/#output","title":"Output","text":""},{"location":"kernel/primitives/xclose/#modify","title":"Modify","text":"<p>RESB</p>"},{"location":"kernel/primitives/xclose/#samples","title":"Samples","text":""},{"location":"kernel/primitives/xclose/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda     MYFD ; MYFD contains the value of the fd (returns of fopen)\nBRK_KERNEL XCLOSE\nrts\n</code></pre> <p>See fclose macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xclosedir/","title":"XCLOSEDIR","text":""},{"location":"kernel/primitives/xcoscr/","title":"XCOSCR","text":""},{"location":"kernel/primitives/xcoscr/#xcoscr","title":"XCOSCR","text":""},{"location":"kernel/primitives/xcoscr/#description","title":"Description","text":"<p>Displays cursor</p>"},{"location":"kernel/primitives/xcrlf/","title":"XCRLF","text":""},{"location":"kernel/primitives/xcrlf/#xcrlf","title":"XCRLF","text":"<p>Returns to next line.</p>"},{"location":"kernel/primitives/xcrlf/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nBRK_TELEMON XCRLF\nrts\n</code></pre> <p>See crlf macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xcsscr/","title":"XCSSCR","text":""},{"location":"kernel/primitives/xcsscr/#xcsscr","title":"XCSSCR","text":""},{"location":"kernel/primitives/xcsscr/#description","title":"Description","text":"<p>Switch off cursor</p>"},{"location":"kernel/primitives/xdecay/","title":"XDECAY","text":""},{"location":"kernel/primitives/xdecay/#xdecay","title":"XDECAY","text":""},{"location":"kernel/primitives/xdecay/#usage","title":"Usage","text":"<p>Convert a string into number</p> <p>A et Y contains the ptr of the string</p> <p>XDECAY returns the value (16 bits) in AY and X contains the length of the decimal number provided in the input</p>"},{"location":"kernel/primitives/xdecay/#example","title":"Example","text":"<pre><code>  .include \"telestrat.inc\"\n\nlda #&lt;mystring\nldy #&gt;mystring\nBRK_TELEMON XDECAY\n\n; A and Y contains the 16 bits value\n; X contains the length of chars in mystring\nrts\n\nmystring:\n.asciiz \"125\"\n</code></pre>"},{"location":"kernel/primitives/xdecim/","title":"XDECIM","text":""},{"location":"kernel/primitives/xdecim/#xdecim","title":"XDECIM","text":""},{"location":"kernel/primitives/xdecim/#usage","title":"Usage","text":"<p>Displays an integer into the the screen</p>"},{"location":"kernel/primitives/xdecim/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nldy     #$00\nldx     #$20 ;\nstx     DEFAFF\nldx     #$00\nBRK_TELEMON XDECIM\nrts\n</code></pre> <p>See print_int macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xexec/","title":"XEXEC","text":""},{"location":"kernel/primitives/xexec/#xexec","title":"XEXEC","text":""},{"location":"kernel/primitives/xexec/#description","title":"Description","text":"<p>Start a binary (located in a ROM or on the current device)</p>"},{"location":"kernel/primitives/xexec/#input","title":"Input","text":"<p>A &amp; Y the ptr of the string.</p>"},{"location":"kernel/primitives/xexec/#output","title":"Output","text":"<p>Returns an error if the binary is not found</p>"},{"location":"kernel/primitives/xexec/#modify","title":"Modify","text":"<ul> <li>RES, RESB (kernel_create_process), TR0, TR1, TR4 (kernel_create_process), TR5 (kernel_create_process)</li> <li>KERNEL_ERRNO (kernel_create_process), KERNEL_XKERNEL_CREATE_PROCESS_TMP (kernel_create_process),kernel_process_struct::kernel_pid_list  (kernel_create_process)</li> <li>DECDEB, DECFIN, DECCIB,DECTRV,ACC1M</li> <li>VEXBNK, BUFEDT, BNKOLD, KERNEL_TMP_XEXEC, BNK_TO_SWITCH, KERNEL_KERNEL_XEXEC_BNKOLD</li> </ul>"},{"location":"kernel/primitives/xexec/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda #&lt;str\nldy #&gt;str\nldx #$00 ; Fork\nBRK_TELEMON XEXEC\nrts\nstr:\n.asciiz \"mybin\"\n</code></pre> <p>If the command is executed Y contains 'EOK' code</p> <p>XEXEC does not manage './' or '../' before kernel v2023.2</p> <p>Bug : when XEXEC is finished (binary is terminated), XEXEC will close all FD of all process !</p> <p>./ calls and /mypath/mybinary calls are available since kernel v2023.2, but '../' is not available</p> <p>Since Kernel 2023.3 : if command is too long for the KERNEL, Y contains 'EINVAL' error</p>"},{"location":"kernel/primitives/xexplode/","title":"Xexplode","text":""},{"location":"kernel/primitives/xexplode/#xexplode","title":"Xexplode","text":"<p>Produce explode sound</p> <pre><code>    BRK_KERNEL XSHOOT\n</code></pre>"},{"location":"kernel/primitives/xfread/","title":"XFREAD","text":""},{"location":"kernel/primitives/xfread/#xfread","title":"XFREAD","text":""},{"location":"kernel/primitives/xfread/#description","title":"Description","text":"<p>Read byte from files</p>"},{"location":"kernel/primitives/xfread/#input","title":"Input","text":"<ul> <li>AY contains the length to read</li> <li>PTR_READ_DEST must be set because it's the ptr_dest</li> <li>X contains the fd id</li> </ul>"},{"location":"kernel/primitives/xfread/#output","title":"Output","text":"<p>A &amp; X contains the length read</p>"},{"location":"kernel/primitives/xfread/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda #&lt;$A000\nsta PTR_READ_DEST\nlda #&gt;$A000\nsta PTR_READ_DEST+1\n\nlda #&lt;12 ; Read 12 bytes\nldy #&gt;12 ; REad 12 bytes\nldx fp\nBRK_KERNEL XFREAD\n; A &amp; X contains the length (since Kernel 2023.2)\nrts\n</code></pre> <p>See fread macro from orix-sdk to use it</p> <p>XFREAD returns the size in A &amp; X since kernel 2023.2, previous versions the length must be compute from </p> <p>XFREAD does not manage two opened files before kernel 2022.4.</p>"},{"location":"kernel/primitives/xfree/","title":"XFREE","text":""},{"location":"kernel/primitives/xfree/#xfree","title":"XFREE","text":""},{"location":"kernel/primitives/xfree/#description","title":"Description","text":"<p>Free memory</p>"},{"location":"kernel/primitives/xfree/#input","title":"Input","text":"<ul> <li>A&amp;Y : ptr</li> </ul>"},{"location":"kernel/primitives/xfree/#output","title":"Output","text":""},{"location":"kernel/primitives/xfree/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda     ptr\nldy     ptr+1\nBRK_TELEMON XFREE\nrts\n</code></pre> <p>See mfree macro from orix-sdk to use it</p> <p>XFREE still have bugs for versions before kernel v2022.2</p>"},{"location":"kernel/primitives/xfseek/","title":"XFSEEK","text":""},{"location":"kernel/primitives/xfseek/#xfseek","title":"XFSEEK","text":"<p>Available in kernel 2022.2</p>"},{"location":"kernel/primitives/xfseek/#description","title":"Description","text":"<p>Seek into file</p>"},{"location":"kernel/primitives/xfseek/#input","title":"Input","text":"<ul> <li>X whence</li> <li>AY : position 0 to 15 bits (word)</li> <li>RESB : position 16 to 32 bits(word)</li> <li>RES : fd (but only I byte is managed)</li> </ul>"},{"location":"kernel/primitives/xfseek/#output","title":"Output","text":"<ul> <li>Return A=EINVAL if whence is not recognize</li> <li>Return A=EOK if seek has been performed</li> <li>Return A=$FF if something is wrong when seek has performed</li> </ul>"},{"location":"kernel/primitives/xfseek/#example","title":"Example","text":"<pre><code>; Move to $20 bytes in the file from the current position\n\n; [IN] X whence\n; [IN] AY position 0 to 15\n; [IN] RESB position 0 to 31\n; [IN] RES fd\n\n.include \"telestrat.inc\"\n\nldy   #$10\nlda   #$00\ntax\nsta   RESB\nsta   RESB+1\n\nlda   fp\nldx   #SEEK_CUR\nBRK_TELEMON XFSEEK\nrts\n</code></pre> <p>XFSEEK is available since kernel v2022.2</p> <p>XFSEEK have bugs for SEEK_CUR in 2022.4.1 (fixed in kernel 2023.1)</p> <p>XFSEEK does not manage SEEK_END</p>"},{"location":"kernel/primitives/xgetargv/","title":"XGETARGV","text":""},{"location":"kernel/primitives/xgetargv/#xgetargv","title":"XGETARGV","text":""},{"location":"kernel/primitives/xgetargv/#description","title":"Description","text":"<p>Get argv. X register contains the number of the arg search</p> <p>Kernel handle a struct with XMAINARGS. This struct is handled by Kernel, and no action are required in external code, but here is how struct works :</p> <pre><code>.struct XMAINARGS_STRUCT\nargv_ptr          .res     KERNEL_MAX_ARGS_COMMAND_LINE\nargv_value_ptr    .res     KERNEL_LENGTH_MAX_CMDLINE+KERNEL_MAX_ARGS_COMMAND_LINE ; add 0 to string\n.endstruct\n</code></pre> <p>argv_ptr contains an offset of each param. It means that we can't have a length of args greater than 256.</p> <p>XMAINARGS and XGETARGV does not handle \"\" yet and \" \"</p>"},{"location":"kernel/primitives/xgetargv/#input","title":"Input","text":"<p>A &amp; Y the ptr of struct from XMAINARGS</p> <p>X the number of arg to get, first param is 0 not 1 !</p>"},{"location":"kernel/primitives/xgetargv/#output","title":"Output","text":"<p>A &amp; Y contains argv ptr from xmainargs struct. It returns a copy of the command line with args parsed</p>"},{"location":"kernel/primitives/xgetargv/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nXMAINARGS = $2C\nXGETARGV  = $2E\nBRK_TELEMON XMAINARGS\nsta   debug_mainargs_ptr\nsty   debug_mainargs_ptr+1\n\nldx   #$02 ; get arg 2 ; Get the third param\nlda   debug_mainargs_ptr\nldy   debug_mainargs_ptr+1\n\nBRK_KERNEL XGETARGV\n\n; A &amp; Y contains ptr\nrts\n</code></pre>"},{"location":"kernel/primitives/xgetcwd/","title":"XGETCWD (getcwd)","text":""},{"location":"kernel/primitives/xgetcwd/#xgetcwd-getcwd","title":"XGETCWD (getcwd)","text":""},{"location":"kernel/primitives/xgetcwd/#description","title":"Description","text":"<p>Return current directory of the process</p>"},{"location":"kernel/primitives/xgetcwd/#input","title":"Input","text":""},{"location":"kernel/primitives/xgetcwd/#output","title":"Output","text":"<p>A and Y returns a ptr of the string</p>"},{"location":"kernel/primitives/xgetcwd/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nBRK_TELEMON XGETCWD\n\n; Displays\nBRK_TELEMON XWSTR0\nrts\n</code></pre>"},{"location":"kernel/primitives/xgetcwd/#memory-usage","title":"Memory usage","text":""},{"location":"kernel/primitives/xgetcwd/#zeropage","title":"zeropage","text":"<ul> <li>RESB</li> </ul> <p>See getcwd macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xhexa/","title":"XHEXA","text":""},{"location":"kernel/primitives/xhexa/#xhexa","title":"XHEXA","text":""},{"location":"kernel/primitives/xhexa/#usage","title":"Usage","text":"<p>Convert a number in A and returns hexadecimal to AY</p>"},{"location":"kernel/primitives/xhexa/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda #$FF\nBRK_KERNEL XHEXA\n; A = 'F'\n; Y = 'F'\nrts\n</code></pre>"},{"location":"kernel/primitives/xhires/","title":"XHIRES","text":""},{"location":"kernel/primitives/xhires/#xhires","title":"XHIRES","text":""},{"location":"kernel/primitives/xhires/#usage","title":"Usage","text":"<p>Switch to Hires</p>"},{"location":"kernel/primitives/xhires/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nldx #$00\nBRK_KERNEL XHIRES\nrts\n</code></pre> <p>See setscreen macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xmainargs/","title":"XMAINARGS","text":""},{"location":"kernel/primitives/xmainargs/#xmainargs-argmains","title":"XMAINARGS (argmains)","text":"<p>ID primitive : $2C</p>"},{"location":"kernel/primitives/xmainargs/#description","title":"Description","text":"<p>Return argc and argv or a ptr with a content of the command line</p>"},{"location":"kernel/primitives/xmainargs/#input","title":"Input","text":"<p>A =&gt; mode</p> <p>mode 0 : return a struct of args</p> <p>mode 1 : return the string of the command line (ptr)</p>"},{"location":"kernel/primitives/xmainargs/#output","title":"Output","text":"<p>Mode 0 :</p> <ul> <li>A &amp; Y :contains ptr to XMAINARGS Struct</li> <li>X: number of args</li> </ul> <p>Mode 1 :</p> <ul> <li>A &amp; Y : a ptr to a new malloc which contains commandline</li> </ul>"},{"location":"kernel/primitives/xmainargs/#example","title":"Example","text":"<p>Mode 0 : parse command line and build argc/argv</p> <pre><code>    .include \"telestrat.inc\"\n\nXMAINARGS = $2C\n\nlda #$00 ; Mode 0\nBRK_TELEMON XMAINARGS\n\nstx save_argc\nsta save_argv\nsty save_argv+1\nrts\n</code></pre> <p>Mode 1 : return command line</p> <pre><code>    .include \"telestrat.inc\"\nXMAINARGS = $2C\n\nlda   #$01 ; Mode 0\nBRK_TELEMON XMAINARGS\n\nsta ptr_cmd\nsty ptr_cmd+1 ; ptr_cmd contains the ptr to the command line. It allocates a string, it needs to be free when the program does not need it anymore\nrts\n</code></pre> <p>See initmainargs macro from orix-sdk to use it </p> <p>XMAINARGS allocates a chunk in memory, it must be free at the end of the use of the parameters</p> <p>Mode 0 is available since v2022.4</p> <p>XGETARGV does not handle \"\" yet and \" in parameters</p>"},{"location":"kernel/primitives/xmalloc/","title":"XMALLOC","text":""},{"location":"kernel/primitives/xmalloc/#xmalloc-malloc","title":"XMALLOC (malloc)","text":""},{"location":"kernel/primitives/xmalloc/#description","title":"Description","text":"<p>Allocate memory. Use orix-sdk with macro to handle XMALLOC</p>"},{"location":"kernel/primitives/xmalloc/#input","title":"Input","text":"<p>A and Y : number of bytes</p>"},{"location":"kernel/primitives/xmalloc/#output","title":"Output","text":"<p>A&amp;Y = $0000 : OOM or others errors else A&amp;Y : ptr</p>"},{"location":"kernel/primitives/xmalloc/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda #&lt;4000\nldy #&gt;4000\n\nBRK_TELEMON XMALLOC\n; A &amp; Y contains a ptr\nrts\n</code></pre> <p>See malloc macro from orix-sdk to use it easily </p> <p>Number of malloc are limited in kernel side for all programs running</p>"},{"location":"kernel/primitives/xmkdir/","title":"XMKDIR","text":""},{"location":"kernel/primitives/xmkdir/#xmkdir-mkdir","title":"XMKDIR (mkdir)","text":"<p>ID primitive : $4B</p>"},{"location":"kernel/primitives/xmkdir/#description","title":"Description","text":"<p>Create a folder. But it does not support absolute path for instance. It can only create path in the current path.</p>"},{"location":"kernel/primitives/xmkdir/#input","title":"Input","text":"<p>A and Y : ptr of the string</p>"},{"location":"kernel/primitives/xmkdir/#output","title":"Output","text":"<p>Return #ENODEV if the device can't be mount</p>"},{"location":"kernel/primitives/xmkdir/#usage","title":"Usage","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda #&lt;str\nldy #&gt;str\nldx #$00\nBRK_TELEMON XMKDIR\nrts\nstr:\n.asciiz \"myfolder\"\n</code></pre> <p>See mkdir macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xopen/","title":"XOPEN","text":""},{"location":"kernel/primitives/xopen/#xopen","title":"XOPEN","text":""},{"location":"kernel/primitives/xopen/#description","title":"Description","text":"<p>open a file</p>"},{"location":"kernel/primitives/xopen/#input","title":"Input","text":"<ul> <li>Y : flag open mode</li> <li>A&amp;X : path filename</li> </ul>"},{"location":"kernel/primitives/xopen/#output","title":"Output","text":"<ul> <li>AX contains $FF if it does not exists</li> <li>A : FD id if file is found</li> </ul>"},{"location":"kernel/primitives/xopen/#modify","title":"Modify","text":"<ul> <li>RES, A X Y, XOPEN_SAVE XOPEN_FLAGS, XOPEN_RES_SAVE, XOPEN_SAVEA</li> <li>with XMALLOC call TR7</li> </ul>"},{"location":"kernel/primitives/xopen/#internal-kernel-calls","title":"Internal kernel calls","text":"<ul> <li>XMALLOC</li> <li>create_file_pointer</li> </ul>"},{"location":"kernel/primitives/xopen/#changelog","title":"Changelog","text":""},{"location":"kernel/primitives/xopen/#since-kernel-20222","title":"Since kernel 2022.2","text":"<p>Flag     | File exists | behaviour O_WRONLY |    No       | return Null O_WRONLY |    Yes      | open and return FD O_RDONLY |    Yes      | open and return FD O_WRONLY |    No       | return Null O_CREAT  |    No       | Create file and open and return FD O_CREAT  |    Yes      | open and return FD</p>"},{"location":"kernel/primitives/xopen/#usage","title":"Usage","text":"<pre><code>    lda #&lt;str\nldx #&gt;str\nldy #O_CREAT\n\nBRK_TELEMON XOPEN\nrts\nstr:\n.asciiz \"myfile\"\n</code></pre> <p>See fopen macro from orix-sdk to use it</p> <p>XOPEN does not manage './' or '../' calls</p> <p>Multiples opened files are working since kernel 2022.2</p> <p>Max 2 opened files are working since kernel 2022.2, it's a constant defined in kernel build</p> Flags behaviors since kernel 2023.1 Flag File exists Behaviour O_WRONLY &amp; O_CREAT No Create file, open and return FD O_WRONLY No return Null (Changed since kernel 2023.1) O_WRONLY Yes open and return FD O_RDONLY Yes open and return FD O_WRONLY No return Null O_CREAT No Create file and open and return FD O_CREAT Yes open and return FD Flags behaviors before kernel 2023.1 Flag File exists Behaviour O_WRONLY &amp; O_CREAT No Create file, open and return FD O_WRONLY No open and return FD O_WRONLY Yes open and return FD O_RDONLY Yes open and return FD O_WRONLY No return Null O_CREAT No Create file and open and return FD O_CREAT Yes open and return FD"},{"location":"kernel/primitives/xopendir/","title":"XOPENDIR","text":""},{"location":"kernel/primitives/xopendir/#xopendir","title":"XOPENDIR","text":""},{"location":"kernel/primitives/xopendir/#description","title":"Description","text":"<p>Open a folder</p>"},{"location":"kernel/primitives/xopendir/#input","title":"Input","text":"<p>A &amp; X : string</p>"},{"location":"kernel/primitives/xopendir/#output","title":"Output","text":"<p>A : fd</p>"},{"location":"kernel/primitives/xopendir/#example-1-openfolder-bin","title":"Example 1 : Openfolder /bin","text":"<pre><code>    .include \"telestrat.inc\"\n\nldx     #$00 ; XOPENDIR  Mode\nlda     #&lt;opendir\nldy     #&gt;opendir\nBRK_TELEMON $2F\ncmp     #$FF\nbne     @ok\ncpx     #$FF\nbne     @ok\n\nprint str_error\n\nrts\n@ok:\n; Save ptr\nrts\nopendir:\nasciiz \"/bin\"\n</code></pre> <p>XOPENDIR is in beta mode and close current open file : it brokes any fopen files.</p>"},{"location":"kernel/primitives/xping/","title":"xping","text":""},{"location":"kernel/primitives/xping/#xping","title":"xping","text":"<p>Produce a ping</p> <pre><code>    BRK_KERNEL XPING\n</code></pre>"},{"location":"kernel/primitives/xputcwd/","title":"XPUTCWD (chdir)","text":""},{"location":"kernel/primitives/xputcwd/#xputcwd-chdir","title":"XPUTCWD (chdir)","text":""},{"location":"kernel/primitives/xputcwd/#description","title":"Description","text":"<p>Change current process directory</p>"},{"location":"kernel/primitives/xputcwd/#input","title":"Input","text":"<p>A &amp; Y the 16 bits values (string with \\0)</p>"},{"location":"kernel/primitives/xputcwd/#output","title":"Output","text":"<p>N/A</p>"},{"location":"kernel/primitives/xputcwd/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda        #&lt;str\nldy        #&gt;str\nBRK_TELEMON XPUTCWD\nrts\nstr:\n.asciiz \"/etc\"\n</code></pre> <p>See chdir macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xrd0/","title":"XRD0","text":""},{"location":"kernel/primitives/xrd0/#xrd0","title":"XRD0","text":""},{"location":"kernel/primitives/xrd0/#usage","title":"Usage","text":"<p>Check if a key is pressed</p>"},{"location":"kernel/primitives/xrd0/#example","title":"Example","text":"<pre><code>  .include \"telestrat.inc\"\n\nBRK_TELEMON XRD0 ; primitive exits even if no key had been pressed\nbcs   @no_key_pressed\n; When a key is pressed, A contains the ascii of the value\n@here_a_key_is_pressed:\nrts\n@no_key_pressed:\nrts\n</code></pre>"},{"location":"kernel/primitives/xrdw0/","title":"XRDW0","text":""},{"location":"kernel/primitives/xrdw0/#xrdw0","title":"XRDW0","text":""},{"location":"kernel/primitives/xrdw0/#usage","title":"Usage","text":"<p>Wait a key from the keyboard</p>"},{"location":"kernel/primitives/xrdw0/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nBRK_KERNEL XRDW0\n; When a key is pressed, A contains the ascii of the value\nrts\n</code></pre> <p>See cgetc macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xreaddir/","title":"XREADDIR","text":""},{"location":"kernel/primitives/xreaddir/#xreaddir","title":"XREADDIR","text":""},{"location":"kernel/primitives/xreaddir/#usage","title":"Usage","text":"<p>Read current folder and returns all entry in AY.</p> <p>It returns max : 100 entry (READDIR_MAX_LINE = 100 values in kernel)</p>"},{"location":"kernel/primitives/xreaddir/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nldx     #$01               ; XREADDIR MODE  Mode\nBRK_TELEMON $2F\nrts\n@ok:\n; Save ptr\nrts\n</code></pre> <p>XREADDIR returns a ptr</p>"},{"location":"kernel/primitives/xrm/","title":"XRM","text":""},{"location":"kernel/primitives/xrm/#xrm","title":"XRM","text":""},{"location":"kernel/primitives/xrm/#description","title":"Description","text":"<p>Remove file in arg</p> <ul> <li>Input : AX the ptr</li> <li>Returns ENOENT in A if the file does not exist</li> <li>Returns $00 in A if the rm is done</li> </ul>"},{"location":"kernel/primitives/xrm/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nlda     #&lt;myfile_to_remove\nldx     #&gt;myfile_to_remove\nBRK_TELEMON XRM\nrts\nmyfile_to_remove:\n.asciiz \"toto\"\n</code></pre> <p>See unlink macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xscrob/","title":"XSCROB","text":""},{"location":"kernel/primitives/xscrob/#xscrob-scroll-down","title":"XSCROB (Scroll down)","text":""},{"location":"kernel/primitives/xscrob/#description","title":"Description","text":"<p>Scroll all lines from the top to the bottom</p>"},{"location":"kernel/primitives/xscrob/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nldx     #$01 ; First line to scroll\nldy     #25  ; Last line to scroll\nBRK_KERNEL XSCROB\nrts\n</code></pre> <p>See scroll macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xscroh/","title":"XSCROH","text":""},{"location":"kernel/primitives/xscroh/#xscroh-scrollup-text-mode","title":"XSCROH (Scrollup text mode)","text":""},{"location":"kernel/primitives/xscroh/#descroption","title":"Descroption","text":"<p>Scroll all lines from bottom to the top</p>"},{"location":"kernel/primitives/xscroh/#examples","title":"Examples","text":"<pre><code>    .include \"telestrat.inc\"\nldx     #$01 ; First line to scroll\nldy     #26  ; Last line to scroll\nBRK_TELEMON XSCROH\nrts\n</code></pre> <p>See scroll macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xshoot/","title":"XSHOOT","text":""},{"location":"kernel/primitives/xshoot/#xshoot","title":"XSHOOT","text":"<p>Prodice a shoot sound</p>"},{"location":"kernel/primitives/xtext/","title":"XTEXT","text":""},{"location":"kernel/primitives/xtext/#xtext","title":"XTEXT","text":""},{"location":"kernel/primitives/xtext/#description","title":"Description","text":"<p>Switch to text mode</p>"},{"location":"kernel/primitives/xtext/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\nldx #$00\nBRK_TELEMON XTEXT\nrts\n</code></pre> <p>See setscreen macro from orix-sdk to use it</p>"},{"location":"kernel/primitives/xvalues/","title":"XVALUES","text":""},{"location":"kernel/primitives/xvalues/#xvalues-routine","title":"XVALUES ROUTINE","text":"<p>Get vars from kernel</p>"},{"location":"kernel/primitives/xvalues/#get-free-malloc-table","title":"Get Free malloc table","text":"<p>X = KERNEL_XVALUES_FREE_MALLOC_TABLE KERNEL_XVALUES_FREE_MALLOC_TABLE = $02</p> <p>Returns in A and Y a copy of free malloc table. This ptr must be free when the buffer is useless</p>"},{"location":"kernel/primitives/xvalues/#example","title":"Example","text":"<pre><code>    .include \"telestrat.inc\"\n\nKERNEL_XVALUES_FREE_MALLOC_TABLE = $02\n\nldx     #KERNEL_XVALUES_FREE_MALLOC_TABLE\n\nBRK_TELEMON  $2D ; XVALUES\n\nrts\n</code></pre>"},{"location":"kernel/primitives/xvalues/#get-busy-malloc-table","title":"Get Busy malloc table","text":"<p>X = KERNEL_XVALUES_BUSY_MALLOC_TABLE KERNEL_XVALUES_FREE_MALLOC_TABLE = $07</p> <p>Returns in A and Y a copy of busy malloc table. This ptr must be free when the buffer is useless</p> <pre><code>    .include \"telestrat.inc\"\n\nKERNEL_XVALUES_FREE_MALLOC_TABLE = $07\n\nldx     #KERNEL_XVALUES_BUSY_MALLOC_TABLE\n\nBRK_TELEMON  $2D ; XVALUES\n\nrts\n</code></pre>"},{"location":"kernel/primitives/xvalues/#get-processname-of-the-current-chunk","title":"Get processName of the current chunk","text":"<p>Y contains the id of the malloc busy table</p> <p>Y = the pid X = 08</p> <p>It returns in A &amp; Y the ptr of the process name.</p> <p>KERNEL_XVALUES_GET_CURRENT_PROCESSNAME_FROM_PID = $08</p> <pre><code>    .include \"telestrat.inc\"\n\nKERNEL_XVALUES_GET_CURRENT_PROCESSNAME_FROM_PID = $07\n\nldx     #KERNEL_XVALUES_GET_CURRENT_PROCESSNAME_FROM_PID\nldy     #03 ; Get the name of pid = 3\n\nBRK_TELEMON  $2D ; XVALUES\n\nrts\n</code></pre>"},{"location":"kernel/primitives/xvalues/#get-the-path-of-an-opened-file","title":"Get the path of an opened file","text":"<p>KERNEL_XVALUES_PATH_FROM_FD = $09 Y must contains the fd.</p> <pre><code>    .include \"telestrat.inc\"\n\nKERNEL_XVALUES_PATH_FROM_FD = $09\n\nldx     #KERNEL_XVALUES_PATH_FROM_FD\nldy     #03 ; Get the name of pid = 3\n\nBRK_TELEMON  $2D ; XVALUES\n; A and Y contains the ptr of path\n\nrts\n</code></pre>"},{"location":"kernel/primitives/xvalues/#get-the-position-in-the-opened-file","title":"Get the position in the opened file","text":"<p>KERNEL_XVALUES_GET_FTELL_FROM_FD = $0A</p> <p>X=KERNEL_XVALUES_GET_FTELL_FROM_FD</p> <p>It returns in A, X, Y and RES, the position in the file</p>"},{"location":"kernel/primitives/xvalues/#get-the-ptr-of-the-pid-list","title":"Get the ptr of the pid list","text":"<p>KERNEL_XVALUES_GET_PROCESS_ID_LIST=$0C</p> <p>; A and Y contains the ptr</p>"},{"location":"kernel/primitives/xvalues/#get-the-processname-with-the-pid","title":"Get the processname with the PID","text":"<p>A = contains the POD</p> <p>X = KERNEL_XVALUES_GET_PROCESS_NAME_WITH_PID</p> <p>A &amp; Y = contains the ptr of processname</p>"},{"location":"kernel/primitives/xvalues/#get-the-number-of-malloc-available-in-the-kernel","title":"Get the number of malloc available in the kernel","text":"<p>X = 5</p> <p>Returns in A the number of the malloc</p>"},{"location":"kernel/primitives/xvalues/#get-the-magic-number-of-the-kernel","title":"Get the magic number of the kernel","text":"<p>X = 6</p> <p>Returns in A the magic number</p>"},{"location":"kernel/primitives/xvalues/#get-the-max-process-configured-in-the-kernel","title":"Get the max process configured in the kernel","text":"<p>X = 8</p> <p>Output :</p> <p>A contains the max process</p>"},{"location":"kernel/primitives/xvalues/#get-os-string-orix","title":"Get Os string (Orix)","text":"<pre><code>    .include \"telestrat.inc\"\n\nXVARS_KERNEL_OSNAME = 9\n\nldx     #XVARS_KERNEL_OSNAME\nBRK_TELEMON XVARS\n; A and X contains the ptr to osname\nrts\n</code></pre> <p>It will be available in Kernel v2023.2</p>"},{"location":"kernel/primitives/xvalues/#get-an-empty-bank","title":"Get an empty bank","text":"<pre><code>    .include \"telestrat.inc\"\n\nKERNEL_XVALUES_GET_FREE_BANK = $10\n\nldx     #KERNEL_XVALUES_GET_FREE_BANK\nldy     #$00 ; RAM type\nBRK_TELEMON  $2D ; XVALUES\n; Y contains the id of the bank\n; X contains set ($343 register)\n; A the bank ($321 register)\n; If there is no available bank, Y=0\nrts\n</code></pre> <p>It will be available in Kernel v2023.2</p> <p>It can only allocate the first 8 banks</p> <p>It does not verify the content of any bank</p> <p>The content is reset every reboot</p>"},{"location":"kernel/primitives/xvars/","title":"XVARS","text":""},{"location":"kernel/primitives/xvars/#xvars","title":"XVARS","text":""},{"location":"kernel/primitives/xvars/#get-the-number-max-of-process","title":"Get the number max of process","text":"<pre><code>  ldx #KERNEL_XVARS_KERNEL_MAX_PROCESS ; Value = 8\nBRK_KERNEL XVARS\n; A and Y contains the number max of the process available\n</code></pre>"},{"location":"kernel/primitives/xvars/#get-the-list-of-the-process","title":"Get the list of the process","text":"<pre><code>  .include \"telestrat.inc\"\nldx #KERNEL_XVARS_PID_LIST_PTR ; Value = $0A\nBRK_KERNEL XVARS\n; A and Y contains the ptr of the list of current pid.\n; If 0 is set, the slot is available and there is no process\n; The end of the list is defined with #KERNEL_XVARS_KERNEL_MAX_PROCESS\nrts\n</code></pre>"},{"location":"kernel/primitives/xwr0/","title":"XWR0","text":""},{"location":"kernel/primitives/xwr0/#xwr0","title":"XWR0","text":"<p>Print a char to the screen</p> <pre><code>    .include \"telestrat.inc\"\nlda #'A'\nBRK_TELEMON XWR0\nrts\n</code></pre> <p>See print macro from orix-sdk to use it easily (with print #VALUE) or cputc macro from orix-sdk to use it easily</p>"},{"location":"kernel/primitives/xwrite/","title":"XWRITE","text":""},{"location":"kernel/primitives/xwrite/#xfwrite","title":"XFWRITE","text":""},{"location":"kernel/primitives/xwrite/#description","title":"Description","text":"<p>Write bytes to file</p>"},{"location":"kernel/primitives/xwrite/#input","title":"Input","text":"<ul> <li>AY contains the length to write</li> <li>PTR_READ_DEST must be set (ptr where data are read)</li> <li>X contains the fd id</li> </ul>"},{"location":"kernel/primitives/xwrite/#output","title":"Output","text":"<p>A &amp; X contains the written length</p>"},{"location":"kernel/primitives/xwrite/#modification","title":"Modification","text":""},{"location":"kernel/primitives/xwrite/#example","title":"Example","text":"<pre><code>    lda #&lt;$A000\nsta PTR_READ_DEST\nlda #&gt;$A000\nsta PTR_READ_DEST+1\n\nlda #&lt;12 ; Write 12 bytes\nldy #&gt;12\nldx fp\nBRK_KERNEL XFWRITE\nrts\n</code></pre> <p>See fwrite macro from orix-sdk to use it easily</p> <p>XFWRITE does not manage multiples opened files : except since kernel 2022.2</p>"},{"location":"kernel/primitives/xwstr0/","title":"XWSTR0","text":""},{"location":"kernel/primitives/xwstr0/#xwstr0","title":"XWSTR0","text":"<p>Displays a string</p> <pre><code>    .include \"telestrat.inc\"\nlda     #&lt;str\nldy     #&gt;str\nBRK_KERNEL XWSTR0\nrts\nstr:\n.asciiz \"Hello world\"\n</code></pre> <p>See print macro from orix-sdk to use it easily</p>"},{"location":"kernel/primitives/xzap/","title":"XZAP","text":""},{"location":"kernel/primitives/xzap/#xzap","title":"XZAP","text":"<p>Send zap sound</p>"},{"location":"libs/pbar-lib/","title":"Pbar lib","text":"<p>{\"payload\":{\"allShortcutsEnabled\":false,\"fileTree\":{\"docs/api\":{\"items\":[{\"name\":\"pbar-lib.md\",\"path\":\"docs/api/pbar-lib.md\",\"contentType\":\"file\"}],\"totalCount\":1},\"docs\":{\"items\":[{\"name\":\"api\",\"path\":\"docs/api\",\"contentType\":\"directory\"},{\"name\":\"man\",\"path\":\"docs/man\",\"contentType\":\"directory\"}],\"totalCount\":2},\"\":{\"items\":[{\"name\":\".github\",\"path\":\".github\",\"contentType\":\"directory\"},{\"name\":\".vscode\",\"path\":\".vscode\",\"contentType\":\"directory\"},{\"name\":\"build\",\"path\":\"build\",\"contentType\":\"directory\"},{\"name\":\"dependencies\",\"path\":\"dependencies\",\"contentType\":\"directory\"},{\"name\":\"docs\",\"path\":\"docs\",\"contentType\":\"directory\"},{\"name\":\"example\",\"path\":\"example\",\"contentType\":\"directory\"},{\"name\":\"img\",\"path\":\"img\",\"contentType\":\"directory\"},{\"name\":\"src\",\"path\":\"src\",\"contentType\":\"directory\"},{\"name\":\".gitignore\",\"path\":\".gitignore\",\"contentType\":\"file\"},{\"name\":\".gitmodules\",\"path\":\".gitmodules\",\"contentType\":\"file\"},{\"name\":\"Makefile\",\"path\":\"Makefile\",\"contentType\":\"file\"},{\"name\":\"README.md\",\"path\":\"README.md\",\"contentType\":\"file\"},{\"name\":\"VERSION\",\"path\":\"VERSION\",\"contentType\":\"file\"},{\"name\":\"pbar\",\"path\":\"pbar\",\"contentType\":\"file\"},{\"name\":\"run.sh\",\"path\":\"run.sh\",\"contentType\":\"file\"}],\"totalCount\":15}},\"fileTreeProcessingTime\":4.452434,\"foldersToFetch\":[],\"reducedMotionEnabled\":null,\"repo\":{\"id\":608100012,\"defaultBranch\":\"main\",\"name\":\"pbar-lib\",\"ownerLogin\":\"orix-software\",\"currentUserCanPush\":false,\"isFork\":false,\"isEmpty\":false,\"createdAt\":\"2023-03-01T10:17:03.000Z\",\"ownerAvatar\":\"https://avatars.githubusercontent.com/u/43378168?v=4\",\"public\":true,\"private\":false,\"isOrgOwned\":true},\"symbolsExpanded\":false,\"treeExpanded\":true,\"refInfo\":{\"name\":\"main\",\"listCacheKey\":\"v0:1678487459.912991\",\"canEdit\":false,\"refType\":\"branch\",\"currentOid\":\"5aca46a059328a54246f3324ed36b478665ba91c\"},\"path\":\"docs/api/pbar-lib.md\",\"currentUser\":null,\"blob\":{\"rawLines\":null,\"stylingDirectives\":null,\"csv\":null,\"csvError\":null,\"dependabotInfo\":{\"showConfigurationBanner\":false,\"configFilePath\":null,\"networkDependabotPath\":\"/orix-software/pbar-lib/network/updates\",\"dismissConfigurationNoticePath\":\"/settings/dismiss-notice/dependabot_configuration_notice\",\"configurationNoticeDismissed\":null,\"repoAlertsPath\":\"/orix-software/pbar-lib/security/dependabot\",\"repoSecurityAndAnalysisPath\":\"/orix-software/pbar-lib/settings/security_analysis\",\"repoOwnerIsOrg\":true,\"currentUserCanAdminRepo\":false},\"displayName\":\"pbar-lib.md\",\"displayUrl\":\"https://github.com/orix-software/pbar-lib/blob/main/docs/api/pbar-lib.md?raw=true\",\"headerInfo\":{\"blobSize\":\"1.73 KB\",\"deleteInfo\":{\"deleteTooltip\":\"You must be signed in to make or propose changes\"},\"editInfo\":{\"editTooltip\":\"You must be signed in to make or propose changes\"},\"ghDesktopPath\":\"https://desktop.github.com\",\"gitLfsPath\":null,\"onBranch\":true,\"shortPath\":\"f0f8b9f\",\"siteNavLoginPath\":\"/login?return_to=https%3A%2F%2Fgithub.com%2Forix-software%2Fpbar-lib%2Fblob%2Fmain%2Fdocs%2Fapi%2Fpbar-lib.md\",\"isCSV\":false,\"isRichtext\":true,\"toc\":[{\"level\":1,\"text\":\"pbar lib\",\"anchor\":\"pbar-lib\",\"htmlText\":\"pbar lib\"},{\"level\":2,\"text\":\"Getting started\",\"anchor\":\"getting-started\",\"htmlText\":\"Getting started\"},{\"level\":2,\"text\":\"Functions\",\"anchor\":\"functions\",\"htmlText\":\"Functions\"},{\"level\":3,\"text\":\"pbarInit\",\"anchor\":\"pbarinit\",\"htmlText\":\"pbarInit\"},{\"level\":3,\"text\":\"pbarRun\",\"anchor\":\"pbarrun\",\"htmlText\":\"pbarRun\"},{\"level\":3,\"text\":\"pbarEnd\",\"anchor\":\"pbarend\",\"htmlText\":\"pbarEnd\"},{\"level\":2,\"text\":\"information in ASM\",\"anchor\":\"information-in-asm\",\"htmlText\":\"information in ASM\"}],\"lineInfo\":{\"truncatedLoc\":\"64\",\"truncatedSloc\":\"40\"},\"mode\":\"file\"},\"image\":false,\"isCodeownersFile\":null,\"isPlain\":false,\"isValidLegacyIssueTemplate\":false,\"issueTemplateHelpUrl\":\"https://docs.github.com/articles/about-issue-and-pull-request-templates\",\"issueTemplate\":null,\"discussionTemplate\":null,\"language\":\"Markdown\",\"languageID\":222,\"large\":false,\"loggedIn\":false,\"newDiscussionPath\":\"/orix-software/pbar-lib/discussions/new\",\"newIssuePath\":\"/orix-software/pbar-lib/issues/new\",\"planSupportInfo\":{\"repoIsFork\":null,\"repoOwnedByCurrentUser\":null,\"requestFullPath\":\"/orix-software/pbar-lib/blob/main/docs/api/pbar-lib.md\",\"showFreeOrgGatedFeatureMessage\":null,\"showPlanSupportBanner\":null,\"upgradeDataAttributes\":null,\"upgradePath\":null},\"publishBannersInfo\":{\"dismissActionNoticePath\":\"/settings/dismiss-notice/publish_action_from_dockerfile\",\"dismissStackNoticePath\":\"/settings/dismiss-notice/publish_stack_from_file\",\"releasePath\":\"/orix-software/pbar-lib/releases/new?marketplace=true\",\"showPublishActionBanner\":false,\"showPublishStackBanner\":false},\"rawBlobUrl\":\"https://github.com/orix-software/pbar-lib/raw/main/docs/api/pbar-lib.md\",\"renderImageOrRaw\":false,\"richText\":\"\",\"renderedFileInfo\":null,\"shortPath\":null,\"tabSize\":8,\"topBannersInfo\":{\"overridingGlobalFundingFile\":false,\"globalPreferredFundingPath\":null,\"repoOwner\":\"orix-software\",\"repoName\":\"pbar-lib\",\"showInvalidCitationWarning\":false,\"citationHelpUrl\":\"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files\",\"showDependabotConfigurationBanner\":false,\"actionsOnboardingTip\":null},\"truncated\":false,\"viewable\":true,\"workflowRedirectUrl\":null,\"symbols\":{\"timedOut\":false,\"notAnalyzed\":false,\"symbols\":[{\"name\":\" pbar lib\",\"kind\":\"section_1\",\"identStart\":1,\"identEnd\":10,\"extentStart\":0,\"extentEnd\":1768,\"fullyQualifiedName\":\" pbar lib\",\"identUtf16\":{\"start\":{\"lineNumber\":0,\"utf16Col\":1},\"end\":{\"lineNumber\":0,\"utf16Col\":10}},\"extentUtf16\":{\"start\":{\"lineNumber\":0,\"utf16Col\":0},\"end\":{\"lineNumber\":64,\"utf16Col\":0}}},{\"name\":\" Getting started\",\"kind\":\"section_2\",\"identStart\":14,\"identEnd\":30,\"extentStart\":12,\"extentEnd\":367,\"fullyQualifiedName\":\" Getting started\",\"identUtf16\":{\"start\":{\"lineNumber\":2,\"utf16Col\":2},\"end\":{\"lineNumber\":2,\"utf16Col\":18}},\"extentUtf16\":{\"start\":{\"lineNumber\":2,\"utf16Col\":0},\"end\":{\"lineNumber\":14,\"utf16Col\":0}}},{\"name\":\" Functions\",\"kind\":\"section_2\",\"identStart\":369,\"identEnd\":379,\"extentStart\":367,\"extentEnd\":1018,\"fullyQualifiedName\":\" Functions\",\"identUtf16\":{\"start\":{\"lineNumber\":14,\"utf16Col\":2},\"end\":{\"lineNumber\":14,\"utf16Col\":12}},\"extentUtf16\":{\"start\":{\"lineNumber\":14,\"utf16Col\":0},\"end\":{\"lineNumber\":31,\"utf16Col\":0}}},{\"name\":\" pbarInit\",\"kind\":\"section_3\",\"identStart\":384,\"identEnd\":393,\"extentStart\":381,\"extentEnd\":570,\"fullyQualifiedName\":\" pbarInit\",\"identUtf16\":{\"start\":{\"lineNumber\":16,\"utf16Col\":3},\"end\":{\"lineNumber\":16,\"utf16Col\":12}},\"extentUtf16\":{\"start\":{\"lineNumber\":16,\"utf16Col\":0},\"end\":{\"lineNumber\":20,\"utf16Col\":0}}},{\"name\":\" pbarRun\",\"kind\":\"section_3\",\"identStart\":573,\"identEnd\":581,\"extentStart\":570,\"extentEnd\":930,\"fullyQualifiedName\":\" pbarRun\",\"identUtf16\":{\"start\":{\"lineNumber\":20,\"utf16Col\":3},\"end\":{\"lineNumber\":20,\"utf16Col\":11}},\"extentUtf16\":{\"start\":{\"lineNumber\":20,\"utf16Col\":0},\"end\":{\"lineNumber\":26,\"utf16Col\":0}}},{\"name\":\" pbarEnd\",\"kind\":\"section_3\",\"identStart\":933,\"identEnd\":941,\"extentStart\":930,\"extentEnd\":1018,\"fullyQualifiedName\":\" pbarEnd\",\"identUtf16\":{\"start\":{\"lineNumber\":26,\"utf16Col\":3},\"end\":{\"lineNumber\":26,\"utf16Col\":11}},\"extentUtf16\":{\"start\":{\"lineNumber\":26,\"utf16Col\":0},\"end\":{\"lineNumber\":31,\"utf16Col\":0}}},{\"name\":\" information in ASM\",\"kind\":\"section_2\",\"identStart\":1020,\"identEnd\":1039,\"extentStart\":1018,\"extentEnd\":1768,\"fullyQualifiedName\":\" information in ASM\",\"identUtf16\":{\"start\":{\"lineNumber\":31,\"utf16Col\":2},\"end\":{\"lineNumber\":31,\"utf16Col\":21}},\"extentUtf16\":{\"start\":{\"lineNumber\":31,\"utf16Col\":0},\"end\":{\"lineNumber\":64,\"utf16Col\":0}}}]}},\"copilotInfo\":null,\"copilotAccessAllowed\":false,\"csrf_tokens\":{\"/orix-software/pbar-lib/branches\":{\"post\":\"pi7u2sQ1YkK--_WvSvMzBM2W8CHixK4r4KjTNd-fMrOVyDK33ixMLsvClmKmTlvBUZSklWoTZaDn5Gp1u3KJZw\"},\"/repos/preferences\":{\"post\":\"kRAQ53ccCwoqlXSdXvST2GZ6WgD2Br9anmq8uDlvXNdG9bjCFwfKkPw8GZhyzv5lFbz-_6r8PlAJowBQXq-r5w\"}}},\"title\":\"pbar-lib/docs/api/pbar-lib.md at main \u00b7 orix-software/pbar-lib\"}</p>"},{"location":"libs/pbar-lib/#\\\"user-content-pbar-lib\\\"","title":"pbar lib","text":"\\n"},{"location":"libs/pbar-lib/#\\\"user-content-getting-started\\\"","title":"Getting started","text":"\\n<p>You can download .tgz into \\\"libs\\\" folder for example</p>\\n<p>oricproject/$ mkdir libs\\noricproject/$ cd libs &amp;&amp; curl http://repo.orix.oric.org/dists/2023.1/tgz/6502/pbar-lib.tgz\\noricproject/$tar xvfz http://repo.orix.oric.org/dists/2023.1/tgz/6502/pbar-lib.tgz</p>\\n<p>And build your program</p>\\n<p>cl65 -ttelestrat myprogram.c libs/lib8/pbar.lib -o pbar</p>\\n"},{"location":"libs/pbar-lib/#\\\"user-content-functions\\\"","title":"Functions","text":"\\n"},{"location":"libs/pbar-lib/#\\\"user-content-pbarinit\\\"","title":"pbarInit","text":"\\n<p>\\\"struct pbar pbarInit(unsigned char pbartype)\\\" returns a pbar ptr struct (a malloc to the Orix kernel), arg is the type of the pbar, for instance one pbar type is available</p>\\n"},{"location":"libs/pbar-lib/#\\\"user-content-pbarrun\\\"","title":"pbarRun","text":"\\n<p>\\\"void pbarRun(unsigned char step, struct pbar ptr)\\\" displays the next percentage and the next char for the progressbar. Each type the pbarRun is \\\"called, the bar add \\\"3%\\\" to the current percentage.</p>\\n<p>Step arg is not used yet. pbarRun must be called 34 times to have almost the complete bar. pbarEnd will displays 100%  and will free pbar struct.</p>\\n"},{"location":"libs/pbar-lib/#\\\"user-content-pbarend\\\"","title":"pbarEnd","text":"\\n<p>\\\"void pbarEnd(struct pbar *ptr);\\\" finishes the bar and free the pbar ptr</p>\\n"},{"location":"libs/pbar-lib/#\\\"user-content-information-in-asm\\\"","title":"information in ASM","text":"\\n<p>A contains the type of the progressbar (not used yet), must be initialized with PBAR_TYPE_SLIDE_EQUAL\\nX = 3 (step but not used)\\nY = 0 (not used, but Y must be set to 0)</p>\\n<pre><code>lda         #PBAR_TYPE_SLIDE_EQUAL\\nldx         #3\\nldy         #0\\njsr         pbarInit\\n</code></pre>\\n<p>; A and X contains the ptr of the pbar struct</p>\\n<p>start progressBar</p>\\n<pre><code>ldy         #3 ; Step not used yet, but for future, let's keep 3\\nlda         #&lt;ptr_struct_progressbar ; (from pbarInit )\\nldx         #&gt;ptr_struct_progressbar ; (from pbarInit )\\n\\njsr         pbarRun\\n</code></pre>\\n<p>Displays 100% and free progressbar</p>\\n<pre><code>lda         #&lt;ptr_struct_progressbar ; (from pbarInit )\\nldx         #&gt;ptr_struct_progressbar ; (from pbarInit )\\n\\njsr         pbarEnd\\n</code></pre>\\n"},{"location":"libs/twillib/","title":"Twilighte library","text":""},{"location":"libs/twillib/#twil-libs","title":"Twil libs","text":"<p>Manage rom/ram banks</p> <pre><code>unsigned char twil_program_rambank(unsigned char bank, char *file, unsigned char set);\nunsigned char twil_clear_rambank(unsigned char bank, unsigned char set);\nunsigned char twil_lib_version(void);\n</code></pre>"},{"location":"libs/ch376lib/ch376lib/","title":"ch376 lib (version v2021.2)","text":""},{"location":"libs/ch376lib/ch376lib/#ch376-lib-version-v20212","title":"ch376 lib (version v2021.2)","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_check_exist","title":"_ch376_check_exist","text":"<p>Modify A Returns : A = $AA if ch376 is found</p> <p>Send #$55 to ch376 and read the answer</p> <pre><code>    jsr _ch376_check_exist\ncmp   #$55\nbeq   ch376_is_here\n; Not found\n\nch376_is_here:\n; Found\nrts\n</code></pre>"},{"location":"libs/ch376lib/ch376lib/#_ch376_dir_create","title":"_ch376_dir_create","text":"<p>Modify A, X, Y Returns: A=1 if the wait from ch376 has failed or A = status of the CH376</p> <p>Send the order to create the folder (setfilename must be set before)</p> <pre><code>    rts\n</code></pre>"},{"location":"libs/ch376lib/ch376lib/#_ch376_disk_capacity","title":"_ch376_disk_capacity","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_disk_mount","title":"_ch376_disk_mount","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_disk_query","title":"_ch376_disk_query","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_file_close","title":"_ch376_file_close","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_file_create","title":"_ch376_file_create","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_file_erase","title":"_ch376_file_erase","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_file_open","title":"_ch376_file_open","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_get_descr","title":"_ch376_get_descr","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_get_file_size","title":"_ch376_get_file_size","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_ic_get_ver","title":"_ch376_ic_get_ver","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_lib_version","title":"_ch376_lib_version","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_reset_all","title":"_ch376_reset_all","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_set_bytes_read","title":"_ch376_set_bytes_read","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_set_file_name","title":"_ch376_set_file_name","text":""},{"location":"libs/ch376lib/ch376lib/#_ch376_set_usb_mode","title":"_ch376_set_usb_mode","text":"<p>Broken</p>"},{"location":"libs/ch376lib/ch376lib/#_ch376_wait_response","title":"_ch376_wait_response","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/","title":"ch376 lib (version v2021.2)","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#ch376-lib-version-v20212","title":"ch376 lib (version v2021.2)","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_check_exist","title":"_ch376_check_exist","text":"<p>Modify A Returns : A = $AA if ch376 is found</p> <p>Send #$55 to ch376 and read the answer</p> <pre><code>    jsr _ch376_check_exist\ncmp   #$55\nbeq   ch376_is_here\n; Not found\n\nch376_is_here:\n; Found\nrts\n</code></pre>"},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_dir_create","title":"_ch376_dir_create","text":"<p>Modify A, X, Y Returns: A=1 if the wait from ch376 has failed or A = status of the CH376</p> <p>Send the order to create the folder (setfilename must be set before)</p> <pre><code>    rts\n</code></pre>"},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_disk_capacity","title":"_ch376_disk_capacity","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_disk_mount","title":"_ch376_disk_mount","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_disk_query","title":"_ch376_disk_query","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_file_close","title":"_ch376_file_close","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_file_create","title":"_ch376_file_create","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_file_erase","title":"_ch376_file_erase","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_file_open","title":"_ch376_file_open","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_get_descr","title":"_ch376_get_descr","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_get_file_size","title":"_ch376_get_file_size","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_ic_get_ver","title":"_ch376_ic_get_ver","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_lib_version","title":"_ch376_lib_version","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_reset_all","title":"_ch376_reset_all","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_set_bytes_read","title":"_ch376_set_bytes_read","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_set_file_name","title":"_ch376_set_file_name","text":""},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_set_usb_mode","title":"_ch376_set_usb_mode","text":"<p>Broken</p>"},{"location":"libs/ch376lib/2021.2/ch376lib/#_ch376_wait_response","title":"_ch376_wait_response","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/","title":"ch376 lib (version v2023.4)","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#ch376-lib-version-v20234","title":"ch376 lib (version v2023.4)","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_check_exist","title":"_ch376_check_exist","text":"<p>Modify A Returns : A = $AA if ch376 is found</p> <p>Send #$55 to ch376 and read the answer</p> <pre><code>    jsr _ch376_check_exist\ncmp   #$55\nbeq   ch376_is_here\n; Not found\n\nch376_is_here:\n; Found\nrts\n</code></pre>"},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_dir_create","title":"_ch376_dir_create","text":"<p>Modify A, X, Y Returns: A=1 if the wait from ch376 has failed or A = status of the CH376</p> <p>Send the order to create the folder (setfilename must be set before)</p> <pre><code>    rts\n</code></pre>"},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_disk_capacity","title":"_ch376_disk_capacity","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_disk_mount","title":"_ch376_disk_mount","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_disk_query","title":"_ch376_disk_query","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_file_close","title":"_ch376_file_close","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_file_create","title":"_ch376_file_create","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_file_erase","title":"_ch376_file_erase","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_file_open","title":"_ch376_file_open","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_get_descr","title":"_ch376_get_descr","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_get_file_size","title":"_ch376_get_file_size","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_ic_get_ver","title":"_ch376_ic_get_ver","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_lib_version","title":"_ch376_lib_version","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_reset_all","title":"_ch376_reset_all","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_set_bytes_read","title":"_ch376_set_bytes_read","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_set_file_name","title":"_ch376_set_file_name","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_set_usb_mode","title":"_ch376_set_usb_mode","text":"<p>Enter :  A = the id of the usb mode</p> <p>Modify X</p>"},{"location":"libs/ch376lib/2023.4/ch376lib/#_ch376_wait_response","title":"_ch376_wait_response","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#ch376_set_config-since-20234","title":"ch376_set_config (since 2023.4)","text":""},{"location":"libs/ch376lib/2023.4/ch376lib/#ch376_set_usb_address-since-20234","title":"ch376_set_usb_address (since 2023.4)","text":""},{"location":"samples/asm_samples/","title":"Samples in Assembly","text":""},{"location":"samples/asm_samples/#samples-in-assembly","title":"Samples in Assembly","text":""},{"location":"samples/asm_samples/#malloc","title":"Malloc","text":"<p>Allocate 4000 bytes and displays a message if the 4000 bytes can't be allocated, else store ptr to myptr3</p> <p>malloc is done with Orix-sdk</p> <pre><code>.include \"telestrat.inc\"\n.include \"macros/SDK.mac\"\n\nmyptr3 := userzp\n\nmalloc 4000,myptr3,str_enomem ; Index ptr\nrts\nstr_enoemem:\n.asciiz \"Out of memory\"\n</code></pre>"},{"location":"samples/c_samples/","title":"Open and read files with cc65","text":""},{"location":"samples/c_samples/#open-and-read-files-with-cc65","title":"Open and read files with cc65","text":"<pre><code>#include &lt;stdio.h&gt;\n\nunsigned char chars[255];\n\nmain (){\nfp=fopen(\"/myfile\",\"r\");\nif (fp==NULL)\n{\nprintf(\"Can't open %s\\n\",argv[1]);\nreturn (1);\n}   nb=fread(chars,255,1,fp);\nfclose(fp);\n}\n</code></pre>"},{"location":"samples/c_samples/getcwd/","title":"Get CWD in cc65","text":""},{"location":"samples/c_samples/getcwd/#get-cwd-in-cc65","title":"Get CWD in cc65","text":"<p>For instance chdir, is not manage in cc65, then here is a workaround.</p> <p>Create a file _ogetcwd.s. It must contains :</p> <pre><code>.include \"telestrat.inc\"\n\nXGETCWD=$48\n\n.export _ogetcwd\n\n.importzp tmp1\n\n.proc _ogetcwd\nBRK_TELEMON XGETCWD\nsty tmp1\nldx tmp1\nrts\n.endproc\n</code></pre> <p>And now, you C code, you can do (don't forget to add _ogetcwd.s to your command line to build _ogetcwd.s when you launch cl65):</p> <pre><code>extern unsigned char ogetcwd();\n\n\nint main() {\nprintf(\"Cwd : %s\",ogetcwd());\nreturn 0;\n}\n</code></pre>"},{"location":"samples/c_samples/mkdir/","title":"Create a folder with cc65","text":""},{"location":"samples/c_samples/mkdir/#create-a-folder-with-cc65","title":"Create a folder with cc65","text":"<p>For instance mkdir in cc65 telestrat target is bugged, here is a work around. Create a file _omkdir.s. It must contains : </p> <p>mkdir kernel primitive does not support absolute path, and it can only create folder in CWD.</p> <pre><code>.include \"telestrat.inc\"\n\n.export _omkdir\n\n.importzp tmp1\n\n.proc _omkdir\nstx tmp1\nldy tmp1\n\nBRK_TELEMON XMKDIR\nrts\n.endproc\n</code></pre> <p>And now, you C code, you can do (don't forget to add _omkdir.s to your command line to build _omkdir.s when you launch cl65):</p> <pre><code>extern void omkdir(unsigned char *path);\n\n\nint main() {\nmkdir (\"myfolder\");\nreturn 0;\n}\n</code></pre>"},{"location":"samples/c_samples/putcwd/","title":"chdir in cc65","text":""},{"location":"samples/c_samples/putcwd/#chdir-in-cc65","title":"chdir in cc65","text":"<p>For instance chdir, is not manage in cc65, then here is a workaround.</p> <p>Create a file _oputcwd.s. It must contains :</p> <pre><code>.include \"telestrat.inc\"\n\nXPUTCWD=$49\n\n.export _oputcwd\n\n.importzp tmp1\n\n.proc _oputcwd\nstx tmp1\nldy tmp1\n\nBRK_TELEMON XPUTCWD\nrts\n.endproc\n</code></pre> <p>And now, you C code, you can do (don't forget to add _oputcwd.s to your command line to build _oputcwd.s when you launch cl65):</p> <pre><code>extern unsigned char oputcwd();\n\n\nint main() {\noputcwd(\"/etc\");\nreturn 0;\n}\n</code></pre>"},{"location":"samples/c_samples/writefile/","title":"Write a file","text":""},{"location":"samples/c_samples/writefile/#write-a-file","title":"Write a file","text":"<pre><code>#include &lt;stdio.h&gt;\n\nstatic unsigned char buffer[4000];\n\nint main() {\nFILE* fp;\n\nunsigned int nb_write;\nstatic unsigned char destfilename[9]=\"myfile.txt\";    fp = fopen(destfilename, \"wb\");\nif (!fp) {\nprintf(\"Can't create output file\\n\");\nreturn 1;\n}\nnb_write=fwrite(buffer, 1, 4000, fp);\nfclose(fp);\n}        </code></pre>"},{"location":"tools/mount/","title":"Mount (not developed yet)","text":""},{"location":"tools/mount/#mount-not-developed-yet","title":"Mount (not developed yet)","text":""},{"location":"tools/mount/#fp","title":"FP","text":"<p>Each FP has a struct with with string, flag and others 3 bytes :</p> <p>extbank (1 byte) vectorbank (2 bytes)</p> <p>When a fopen is done, if the file is not found on current device (ch376), before it returns null, it tries to find EXTFP string in bank</p> <p>If it's found, EXTFP is executed (not forked) and it returns a A Y vector to manage this FP (if it manage this path). If it does not manage this path, it return null.</p>"},{"location":"tools/mount/#when-a-freadfwrite-is-done-if-extbank-is-different-to-0-then-kernel-will-launch-external-vector-with-a-and-y-contains-the-string-of-the-path-and-x-contains-the-action","title":"When a FREAD/FWRITE is done, if extbank is different to 0, then, Kernel will launch external vector with A and Y contains the string of the path, and X contains the action","text":"<p>X=1 : FREAD X=2 : FWRITE X=3 : XCLOSE</p>"},{"location":"tools/mount/#ls-case","title":"ls case","text":"<p>ls should do a FOPEN call. It should return a fp. When we need to displays the external path, we need to know which command we need to launch to kernel</p>"},{"location":"tools/mount/#cpmv-case","title":"cp/mv case","text":"<p>don't know</p>"},{"location":"tools_docs/vi/Structs/","title":"Classes","text":""},{"location":"tools_docs/vi/Structs/#classes","title":"Classes","text":"<ul> <li>struct vi_struct_data </li> </ul> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/index_classes/","title":"Classes","text":""},{"location":"tools_docs/vi/index_classes/#classes","title":"Classes","text":"<ul> <li>struct vi_struct_data </li> </ul> <p>Updated on 2022-12-15 at 12:21:07 +0100</p>"},{"location":"tools_docs/vi/index_examples/","title":"Examples","text":""},{"location":"tools_docs/vi/index_examples/#examples","title":"Examples","text":"<ul> <li>example This strlen of a line </li> </ul> <p>Updated on 2022-12-15 at 14:20:18 +0100</p>"},{"location":"tools_docs/vi/index_files/","title":"Files","text":""},{"location":"tools_docs/vi/index_files/#files","title":"Files","text":"<ul> <li>dir /mnt/c/Users/plifp/OneDrive/oric/projets/orix-software/vi <ul> <li>dir  <ul> <li>dir /commands <ul> <li>file s </li> </ul> </li> <li>dir /data <ul> <li>dir /data/vi <ul> <li>file s </li> </ul> </li> </ul> </li> <li>dir /Routines <ul> <li>dir /Routines/subfunc <ul> <li>dir /Routines/subfunc/vi <ul> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> </ul> </li> </ul> </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> <li>file s </li> </ul> </li> <li>file s </li> </ul> </li> </ul> </li> </ul> <p>Updated on 2022-12-15 at 14:20:18 +0100</p>"},{"location":"tools_docs/vi/index_groups/","title":"Modules","text":""},{"location":"tools_docs/vi/index_groups/#modules","title":"Modules","text":"<p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/index_namespaces/","title":"Namespaces","text":""},{"location":"tools_docs/vi/index_namespaces/#namespaces","title":"Namespaces","text":"<p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/index_pages/","title":"Pages","text":""},{"location":"tools_docs/vi/index_pages/#pages","title":"Pages","text":"<ul> <li>page strlen </li> </ul> <p>Updated on 2022-12-15 at 14:20:18 +0100</p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/","title":"vi_struct_data","text":""},{"location":"tools_docs/vi/Classes/structvi__struct__data/#vi_struct_data","title":"vi_struct_data","text":""},{"location":"tools_docs/vi/Classes/structvi__struct__data/#public-attributes","title":"Public Attributes","text":"Name char xpos_screen char ypos_screen char[2] pos_file_addr char[4] pos_file char posx_command_line char[VI_MAX_LENGTH_FILENAME] name_file_open int ptr_file_begin char[4] length_file char[2] pos_ptr_video_address char[4] file_number_of_line char[1] xpos_command_line char[39] command_line_buffer char[2] ptr_last_char_file char[2] line_id char[1] xpos_text char[1] ypos_text"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-xpos_screen","title":"variable xpos_screen","text":"<pre><code>char xpos_screen;\n</code></pre> <p>position x of the cursor on the screen </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-ypos_screen","title":"variable ypos_screen","text":"<pre><code>char ypos_screen;\n</code></pre> <p>position y of the cursor on the screen </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-pos_file_addr","title":"variable pos_file_addr","text":"<pre><code>char[2] pos_file_addr;\n</code></pre> <p>position on the file (address) </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-pos_file","title":"variable pos_file","text":"<pre><code>char[4] pos_file;\n</code></pre> <p>position in the file </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-posx_command_line","title":"variable posx_command_line","text":"<pre><code>char posx_command_line;\n</code></pre> <p>position on command line </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-name_file_open","title":"variable name_file_open","text":"<pre><code>char[VI_MAX_LENGTH_FILENAME] name_file_open;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-int","title":"variable int","text":"<pre><code>int;\n</code></pre> <p>adress of the beginning of the file </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-ptr_file_begin","title":"variable ptr_file_begin","text":"<pre><code>ptr_file_begin;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-length_file","title":"variable length_file","text":"<pre><code>char[4] length_file;\n</code></pre> <p>Length of the file </p>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-pos_ptr_video_address","title":"variable pos_ptr_video_address","text":"<pre><code>char[2] pos_ptr_video_address;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-file_number_of_line","title":"variable file_number_of_line","text":"<pre><code>char[4] file_number_of_line;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-xpos_command_line","title":"variable xpos_command_line","text":"<pre><code>char[1] xpos_command_line;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-command_line_buffer","title":"variable command_line_buffer","text":"<pre><code>char[39] command_line_buffer;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-ptr_last_char_file","title":"variable ptr_last_char_file","text":"<pre><code>char[2] ptr_last_char_file;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-line_id","title":"variable line_id","text":"<pre><code>char[2] line_id;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-xpos_text","title":"variable xpos_text","text":"<pre><code>char[1] xpos_text;\n</code></pre>"},{"location":"tools_docs/vi/Classes/structvi__struct__data/#variable-ypos_text","title":"variable ypos_text","text":"<pre><code>char[1] ypos_text;\n</code></pre> <p>Updated on 2022-12-15 at 12:29:28 +0100</p>"},{"location":"tools_docs/vi/Examples/This-example/","title":"This","text":""},{"location":"tools_docs/vi/Examples/This-example/#this","title":"This","text":"<p>strlen of a line routine compute ... ```</p> <p>Filename: This</p> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/__clrscr__vi_8s/","title":"/Routines/_clrscr_vi.s","text":""},{"location":"tools_docs/vi/Files/__clrscr__vi_8s/#routines_clrscr_vis","title":"/Routines/_clrscr_vi.s","text":""},{"location":"tools_docs/vi/Files/__clrscr__vi_8s/#routine","title":"Routine","text":"Name _clrscr_vi"},{"location":"tools_docs/vi/Files/__clrscr__vi_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/__clrscr__vi_8s/#routine-_clrscr_vi","title":"Routine _clrscr_vi","text":"<pre><code>_clrscr_vi\n</code></pre>"},{"location":"tools_docs/vi/Files/__clrscr__vi_8s/#source-code","title":"Source code","text":"<pre><code>.proc _clrscr_vi\n; Switch to text mode\nBRK_TELEMON(XTEXT)\n\nlda     #&lt;SCREEN                                ; Get position screen\nldy     #&gt;SCREEN\nsta     RES\nsty     RES+1\n\nldy     #&lt;(SCREEN+SCREEN_XSIZE*SCREEN_YSIZE)\nldx     #&gt;(SCREEN+SCREEN_XSIZE*SCREEN_YSIZE)\nlda     #' '\nBRK_TELEMON XFILLM                              ; Calls XFILLM : it fills A value from RES address and size of X and Y value\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_2288eccfea1af74b995388678c757cc0/","title":"/Routines","text":""},{"location":"tools_docs/vi/Files/dir_2288eccfea1af74b995388678c757cc0/#routines","title":"/Routines","text":""},{"location":"tools_docs/vi/Files/dir_2288eccfea1af74b995388678c757cc0/#directories","title":"Directories","text":"Name /Routines/subfunc"},{"location":"tools_docs/vi/Files/dir_2288eccfea1af74b995388678c757cc0/#files","title":"Files","text":"Name /Routines/_clrscr_vi.s /Routines/tables.s /Routines/vi_command_edition.s /Routines/vi_displays_info.s /Routines/vi_edition_keyboard.s /Routines/vi_editor_switch_off_cursor.s /Routines/vi_editor_switch_on_cursor.s /Routines/vi_fill_screen_with_empty_line.s /Routines/vi_put_char.s /Routines/vi_set_length_file.s /Routines/vi_struct.s /Routines/vi_switch_to_edition_mode.s <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_6c260d28152e78a3ffcc2e06b7438967/","title":"None","text":""},{"location":"tools_docs/vi/Files/dir_6c260d28152e78a3ffcc2e06b7438967/#_1","title":"None","text":""},{"location":"tools_docs/vi/Files/dir_6c260d28152e78a3ffcc2e06b7438967/#directories","title":"Directories","text":"Name /commands /data /Routines"},{"location":"tools_docs/vi/Files/dir_6c260d28152e78a3ffcc2e06b7438967/#files","title":"Files","text":"Name /rom.s <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_834496eb029ed14441e8790c53896f5f/","title":"/data/vi","text":""},{"location":"tools_docs/vi/Files/dir_834496eb029ed14441e8790c53896f5f/#datavi","title":"/data/vi","text":""},{"location":"tools_docs/vi/Files/dir_834496eb029ed14441e8790c53896f5f/#files","title":"Files","text":"Name /data/vi/strings.s <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_8a0a2fbb0e248d2b08adec17bb698d4e/","title":"/Routines/subfunc","text":""},{"location":"tools_docs/vi/Files/dir_8a0a2fbb0e248d2b08adec17bb698d4e/#routinessubfunc","title":"/Routines/subfunc","text":""},{"location":"tools_docs/vi/Files/dir_8a0a2fbb0e248d2b08adec17bb698d4e/#directories","title":"Directories","text":"Name /Routines/subfunc/vi <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_a5544c2bf0b70f8d417c4d3bfea04409/","title":"/Routines/subfunc/vi","text":""},{"location":"tools_docs/vi/Files/dir_a5544c2bf0b70f8d417c4d3bfea04409/#routinessubfuncvi","title":"/Routines/subfunc/vi","text":""},{"location":"tools_docs/vi/Files/dir_a5544c2bf0b70f8d417c4d3bfea04409/#files","title":"Files","text":"Name vi_add_char_to_text.s vi_check_0A.s vi_check_beginning_of_file.s vi_check_eof.s vi_check_if_previous_line_was_truncated.s vi_check_inserted_char_overflow_the_max_column.s vi_clear_command_line.s vi_compute_last_text_line.s vi_compute_video_adress.s vi_copy_arg1_to_name_file_open.s vi_decal_text.s vi_display_char.s vi_display_file_opened.s vi_fill_last_line.s vi_init_vi_struct.s vi_key_del.s vi_key_down.s vi_key_enter.s vi_key_left.s vi_key_right.s vi_key_up.s vi_length_file_plus_plus.s vi_length_file_sub_sub.s vi_ptr_file_used_plus_plus.s vi_ptr_file_used_plus_plus_and_check_eof.s vi_ptr_file_used_sub_sub.s vi_ptr_last_char_add.s vi_ptr_last_char_plus_plus.s vi_ptr_last_char_sub_sub.s vi_scroll_from_left_to_right_full_line.s vi_scroll_to_left.s vi_search_next_line.s vi_search_previous_cr.s vi_search_previous_line_beginning.s vi_set_ptr_last_char.s vi_set_xpos_0.s vi_set_xpos_from_A.s vi_shift_file_from_memory_one_char.s vi_shift_line_left_to_right_editor.s vi_strlen_current_line.s vi_vi_ptr_file_used_plus_plus.s vi_xpos_screen_plus_plus.s vi_xpos_screen_sub_sub.s vi_ypos_screen_plus_plus.s vi_ypos_screen_sub_sub.s <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_e1568de7a9ec0caf269f7729a27efb24/","title":"/commands","text":""},{"location":"tools_docs/vi/Files/dir_e1568de7a9ec0caf269f7729a27efb24/#commands","title":"/commands","text":""},{"location":"tools_docs/vi/Files/dir_e1568de7a9ec0caf269f7729a27efb24/#files","title":"Files","text":"Name /commands/vi.s <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_e433504a3e785b34aabb2c6185efc4a1/","title":"/mnt/c/Users/plifp/OneDrive/oric/projets/orix-software/vi","text":""},{"location":"tools_docs/vi/Files/dir_e433504a3e785b34aabb2c6185efc4a1/#mntcusersplifponedriveoricprojetsorix-softwarevi","title":"/mnt/c/Users/plifp/OneDrive/oric/projets/orix-software/vi","text":""},{"location":"tools_docs/vi/Files/dir_e433504a3e785b34aabb2c6185efc4a1/#directories","title":"Directories","text":"Name <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/dir_eb94e028ad508402029845f2921e79f7/","title":"/data","text":""},{"location":"tools_docs/vi/Files/dir_eb94e028ad508402029845f2921e79f7/#data","title":"/data","text":""},{"location":"tools_docs/vi/Files/dir_eb94e028ad508402029845f2921e79f7/#directories","title":"Directories","text":"Name /data/vi <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/rom_8s/","title":"/rom.s","text":""},{"location":"tools_docs/vi/Files/rom_8s/#roms","title":"/rom.s","text":""},{"location":"tools_docs/vi/Files/rom_8s/#attributes","title":"Attributes","text":"Name const char userzp const char NULL const char[3] list_of_commands_bank int addr_commands const char[10] signature char[$FFF0- *] end_rom char[2] parse_vector unsigned int signature_adress_commands unsigned int list_commands char number_of_commands int copyright int NMI int RESET int BRK_IRQ"},{"location":"tools_docs/vi/Files/rom_8s/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"tools_docs/vi/Files/rom_8s/#variable-userzp","title":"variable userzp","text":"<pre><code>const char userzp = $80;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-null","title":"variable NULL","text":"<pre><code>const char NULL = 0;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-list_of_commands_bank","title":"variable list_of_commands_bank","text":"<pre><code>const char[3] list_of_commands_bank = \"vi\";\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-addr_commands","title":"variable addr_commands","text":"<pre><code>int addr_commands;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-signature","title":"variable signature","text":"<pre><code>const char[10] signature = \"vi 2022.4\";\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-end_rom","title":"variable end_rom","text":"<pre><code>char[$FFF0- *] end_rom;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-parse_vector","title":"variable parse_vector","text":"<pre><code>char[2] parse_vector;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-signature_adress_commands","title":"variable signature_adress_commands","text":"<pre><code>unsigned int signature_adress_commands;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-list_commands","title":"variable list_commands","text":"<pre><code>unsigned int list_commands;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-number_of_commands","title":"variable number_of_commands","text":"<pre><code>char number_of_commands;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-copyright","title":"variable copyright","text":"<pre><code>int copyright;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-nmi","title":"variable NMI","text":"<pre><code>int NMI;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-reset","title":"variable RESET","text":"<pre><code>int RESET;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#variable-brk_irq","title":"variable BRK_IRQ","text":"<pre><code>int BRK_IRQ;\n</code></pre>"},{"location":"tools_docs/vi/Files/rom_8s/#source-code","title":"Source code","text":"<pre><code>;----------------------------------------------------------------------\n;                       cc65 includes\n;----------------------------------------------------------------------\n.include   \"telestrat.inc\"          ; from cc65\n.include   \"fcntl.inc\"              ; from cc65\n.include   \"errno.inc\"              ; from cc65\n.include   \"cpu.mac\"                ; from cc65\n\n\n;----------------------------------------------------------------------\n;                       Orix SDK includes\n;----------------------------------------------------------------------\n.include   \"../dependencies/orix-sdk/macros/SDK.mac\"\n.include   \"../dependencies/orix-sdk/include/SDK.inc\"\n.include   \"../dependencies/orix-sdk/include/keyboard.inc\"\n\n\n\n\n;----------------------------------------------------------------------\n;                           Zero Page\n;----------------------------------------------------------------------\nuserzp                       := $80\nNULL = 0\n\n;----------------------------------------------------------------------\n;                               Shell\n;----------------------------------------------------------------------\n.org        $C000\n\n.code\nstart:\nrts\n\n\n\n\n.include \"commands/vi.s\"\n\n\n\nlist_of_commands_bank:\n.asciiz \"vi\"\n\naddr_commands:\n.word _vi\n\nsignature:\n.asciiz \"vi 2022.4\"\n\n\nend_rom:\n\n\n;----------------------------------------------------------------------\n;\n;----------------------------------------------------------------------\n.out   .sprintf(\"Size of ROM : %d bytes\", end_rom-$c000)\n\n\n.res $FFF0-*\n.org $FFF0\n.byt 1 ; Command ROM\n; $fff1\nparse_vector:\n.byt $00,$00\n; fff3\nsignature_adress_commands:\n.addr addr_commands\n; fff5-fff6\nlist_commands:\n.addr list_of_commands_bank\n; fff7\nnumber_of_commands:\n.byt 1\n\n; fff8-fff9\ncopyright:\n.word   signature\n; fffa-fffb\nNMI:\n.word   start\n\n; fffc-fffd\nRESET:\n.word   start\n; fffe-ffff\nBRK_IRQ:\n.word   IRQVECTOR\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/strings_8s/","title":"/data/vi/strings.s","text":""},{"location":"tools_docs/vi/Files/strings_8s/#datavistringss","title":"/data/vi/strings.s","text":""},{"location":"tools_docs/vi/Files/strings_8s/#attributes","title":"Attributes","text":"Name const char[13] msg_insert const char[11] msg_nofile char[2] msg_nofilename char[2] msg_impossibletowrite const char[8] msg_written"},{"location":"tools_docs/vi/Files/strings_8s/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"tools_docs/vi/Files/strings_8s/#variable-msg_insert","title":"variable msg_insert","text":"<pre><code>const char[13] msg_insert = \"-- INSERT --\";\n</code></pre>"},{"location":"tools_docs/vi/Files/strings_8s/#variable-msg_nofile","title":"variable msg_nofile","text":"<pre><code>const char[11] msg_nofile = \"[New File]\";\n</code></pre>"},{"location":"tools_docs/vi/Files/strings_8s/#variable-msg_nofilename","title":"variable msg_nofilename","text":"<pre><code>char[2] msg_nofilename;\n</code></pre>"},{"location":"tools_docs/vi/Files/strings_8s/#variable-msg_impossibletowrite","title":"variable msg_impossibletowrite","text":"<pre><code>char[2] msg_impossibletowrite;\n</code></pre>"},{"location":"tools_docs/vi/Files/strings_8s/#variable-msg_written","title":"variable msg_written","text":"<pre><code>const char[8] msg_written = \"written\";\n</code></pre>"},{"location":"tools_docs/vi/Files/strings_8s/#source-code","title":"Source code","text":"<pre><code>msg_insert:\n.asciiz \"-- INSERT --\"\n\nmsg_nofile:\n.asciiz \"[New File]\"\n\nmsg_nofilename:\n.byte 17,\"E32: No file name\",16,0\n\nmsg_impossibletowrite:\n.byte 17,\"E99: Impossible to write\",16,0\n\nmsg_written:\n.asciiz \"written\"\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/tables_8s/","title":"/Routines/tables.s","text":""},{"location":"tools_docs/vi/Files/tables_8s/#routinestabless","title":"/Routines/tables.s","text":""},{"location":"tools_docs/vi/Files/tables_8s/#attributes","title":"Attributes","text":"Name char TABLE_LOW_TEXT char TABLE_HIGH_TEXT"},{"location":"tools_docs/vi/Files/tables_8s/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"tools_docs/vi/Files/tables_8s/#variable-table_low_text","title":"variable TABLE_LOW_TEXT","text":"<pre><code>char TABLE_LOW_TEXT;\n</code></pre>"},{"location":"tools_docs/vi/Files/tables_8s/#variable-table_high_text","title":"variable TABLE_HIGH_TEXT","text":"<pre><code>char TABLE_HIGH_TEXT;\n</code></pre>"},{"location":"tools_docs/vi/Files/tables_8s/#source-code","title":"Source code","text":"<pre><code>TABLE_LOW_TEXT:\n;0\n.byt &lt;($bb80)\n.byt &lt;($bb80+40)\n.byt &lt;($bb80+80)\n.byt &lt;($bb80+120)\n.byt &lt;($bb80+160)\n.byt &lt;($bb80+200)\n.byt &lt;($bb80+240)\n.byt &lt;($bb80+280)\n.byt &lt;($bb80+320)\n.byt &lt;($bb80+360)\n.byt &lt;($bb80+400)\n.byt &lt;($bb80+440)\n.byt &lt;($bb80+480)\n.byt &lt;($bb80+520)\n.byt &lt;($bb80+560)\n.byt &lt;($bb80+600)\n.byt &lt;($bb80+640)\n.byt &lt;($bb80+680)\n.byt &lt;($bb80+720)\n.byt &lt;($bb80+760)\n.byt &lt;($bb80+800)\n.byt &lt;($bb80+840)\n.byt &lt;($bb80+880)\n.byt &lt;($bb80+920)\n.byt &lt;($bb80+960)\n.byt &lt;($bb80+1000)\n.byt &lt;($bb80+1040)\n.byt &lt;($bb80+1080)\n\n\nTABLE_HIGH_TEXT:\n.byt &gt;($bb80)\n.byt &gt;($bb80+40)\n.byt &gt;($bb80+80)\n.byt &gt;($bb80+120)\n.byt &gt;($bb80+160)\n;5\n.byt &gt;($bb80+200)\n.byt &gt;($bb80+240)\n.byt &gt;($bb80+280)\n.byt &gt;($bb80+320)\n.byt &gt;($bb80+360)\n;10\n.byt &gt;($bb80+400)\n.byt &gt;($bb80+440)\n.byt &gt;($bb80+480)\n.byt &gt;($bb80+520)\n.byt &gt;($bb80+560)\n;15\n.byt &gt;($bb80+600)\n.byt &gt;($bb80+640)\n.byt &gt;($bb80+680)\n.byt &gt;($bb80+720)\n.byt &gt;($bb80+760)\n;20\n.byt &gt;($bb80+800)\n.byt &gt;($bb80+840)\n.byt &gt;($bb80+880)\n.byt &gt;($bb80+920)\n.byt &gt;($bb80+960)\n;25\n.byt &gt;($bb80+1000)\n; 26\n.byt &gt;($bb80+1040)\n; 27\n.byt &gt;($bb80+1080)\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi_8s/","title":"/commands/vi.s","text":""},{"location":"tools_docs/vi/Files/vi_8s/#commandsvis","title":"/commands/vi.s","text":""},{"location":"tools_docs/vi/Files/vi_8s/#routine","title":"Routine","text":"Name _vi"},{"location":"tools_docs/vi/Files/vi_8s/#attributes","title":"Attributes","text":"Name const char CR const char LF const char IS_EOF const char IS_BEGINNING_OF_THE_FILE const char IS_LAST_LINE_OF_SCREEN_TEXT const char IS_BEGINNING_OF_THE_LINE const char VI_LAST_LINE_EDITOR Last line used by the editor. const char VI_FILL_SCREEN_MODE_STOP_AT_THE_END_OF_LAST_LINE const char VI_COMMANDLINE_MAX_CHAR const char VI_MAX_LENGTH_FILE const char VI_EDITOR_CHAR_LIMITS_EMPTY const char VI_COMMANDLINE_VIDEO_ADRESS const char VI_EDITION_LAST_VIDEO_ADRESS const char VI_EDITION_VIDEO_ADRESS const char VI_EDITOR_MAX_LENGTH_OF_A_LINE const char VI_EDITOR_MAX_COLUMN const char vi_struct 2 bytes const char vi_ptr1 2 bytes const char vi_argv 2 bytes const char vi_argc 1 bytes const char vi_arg1 2 bytes const char vi_fp 2 bytes const char vi_ptr_file 2 bytes const char vi_tmp2 const char vi_ptr_screen 2 bytes const char vi_length_file 2 bytes const char vi_length_file_compute 2 bytes const char vi_tmp1 const char vi_fileopened const char vi_ptr_file_used 2 bytes const char tmp0_16 const char vi_no_opened_file const char vi_pos_debug const char vi_ptr2 2 bytes const char vi_savex 2 bytes const char vi_ptr3 2 bytes const char vi_tmp3 2 bytes"},{"location":"tools_docs/vi/Files/vi_8s/#defines","title":"Defines","text":"Name vi_dec16_zp(addr)"},{"location":"tools_docs/vi/Files/vi_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi_8s/#routine-_vi","title":"Routine _vi","text":"<pre><code>_vi\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#attributes-documentation","title":"Attributes Documentation","text":""},{"location":"tools_docs/vi/Files/vi_8s/#variable-cr","title":"variable CR","text":"<pre><code>const char CR = $0D;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-lf","title":"variable LF","text":"<pre><code>const char LF = $0A;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-is_eof","title":"variable IS_EOF","text":"<pre><code>const char IS_EOF = $00;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-is_beginning_of_the_file","title":"variable IS_BEGINNING_OF_THE_FILE","text":"<pre><code>const char IS_BEGINNING_OF_THE_FILE = $00;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-is_last_line_of_screen_text","title":"variable IS_LAST_LINE_OF_SCREEN_TEXT","text":"<pre><code>const char IS_LAST_LINE_OF_SCREEN_TEXT = $01;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-is_beginning_of_the_line","title":"variable IS_BEGINNING_OF_THE_LINE","text":"<pre><code>const char IS_BEGINNING_OF_THE_LINE = $00;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_last_line_editor","title":"variable VI_LAST_LINE_EDITOR","text":"<pre><code>const char VI_LAST_LINE_EDITOR = 26;\n</code></pre> <p>Last line used by the editor. </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_fill_screen_mode_stop_at_the_end_of_last_line","title":"variable VI_FILL_SCREEN_MODE_STOP_AT_THE_END_OF_LAST_LINE","text":"<pre><code>const char VI_FILL_SCREEN_MODE_STOP_AT_THE_END_OF_LAST_LINE = 0;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_commandline_max_char","title":"variable VI_COMMANDLINE_MAX_CHAR","text":"<pre><code>const char VI_COMMANDLINE_MAX_CHAR = 8;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_max_length_file","title":"variable VI_MAX_LENGTH_FILE","text":"<pre><code>const char VI_MAX_LENGTH_FILE = 2000;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_editor_char_limits_empty","title":"variable VI_EDITOR_CHAR_LIMITS_EMPTY","text":"<pre><code>const char VI_EDITOR_CHAR_LIMITS_EMPTY = '~';\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_commandline_video_adress","title":"variable VI_COMMANDLINE_VIDEO_ADRESS","text":"<pre><code>const char VI_COMMANDLINE_VIDEO_ADRESS = $bb80+40*27;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_edition_last_video_adress","title":"variable VI_EDITION_LAST_VIDEO_ADRESS","text":"<pre><code>const char VI_EDITION_LAST_VIDEO_ADRESS = $bb80+40*26;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_edition_video_adress","title":"variable VI_EDITION_VIDEO_ADRESS","text":"<pre><code>const char VI_EDITION_VIDEO_ADRESS = $bb80;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_editor_max_length_of_a_line","title":"variable VI_EDITOR_MAX_LENGTH_OF_A_LINE","text":"<pre><code>const char VI_EDITOR_MAX_LENGTH_OF_A_LINE = 255;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_editor_max_column","title":"variable VI_EDITOR_MAX_COLUMN","text":"<pre><code>const char VI_EDITOR_MAX_COLUMN = 39;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_struct","title":"variable vi_struct","text":"<pre><code>const char vi_struct = userzp;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_ptr1","title":"variable vi_ptr1","text":"<pre><code>const char vi_ptr1 = userzp+2;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_argv","title":"variable vi_argv","text":"<pre><code>const char vi_argv = userzp+4;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_argc","title":"variable vi_argc","text":"<pre><code>const char vi_argc = userzp+6;\n</code></pre> <p>1 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_arg1","title":"variable vi_arg1","text":"<pre><code>const char vi_arg1 = userzp+7;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_fp","title":"variable vi_fp","text":"<pre><code>const char vi_fp = userzp+9;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_ptr_file","title":"variable vi_ptr_file","text":"<pre><code>const char vi_ptr_file = userzp+11;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_tmp2","title":"variable vi_tmp2","text":"<pre><code>const char vi_tmp2 = userzp+13;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_ptr_screen","title":"variable vi_ptr_screen","text":"<pre><code>const char vi_ptr_screen = userzp+14;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_length_file","title":"variable vi_length_file","text":"<pre><code>const char vi_length_file = userzp+16;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_length_file_compute","title":"variable vi_length_file_compute","text":"<pre><code>const char vi_length_file_compute = userzp+18;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_tmp1","title":"variable vi_tmp1","text":"<pre><code>const char vi_tmp1 = userzp+20;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_fileopened","title":"variable vi_fileopened","text":"<pre><code>const char vi_fileopened = userzp+22;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_ptr_file_used","title":"variable vi_ptr_file_used","text":"<pre><code>const char vi_ptr_file_used = userzp+24;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-tmp0_16","title":"variable tmp0_16","text":"<pre><code>const char tmp0_16 = userzp+26;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_no_opened_file","title":"variable vi_no_opened_file","text":"<pre><code>const char vi_no_opened_file = userzp+28;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_pos_debug","title":"variable vi_pos_debug","text":"<pre><code>const char vi_pos_debug = userzp+30;\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_ptr2","title":"variable vi_ptr2","text":"<pre><code>const char vi_ptr2 = userzp+32;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_savex","title":"variable vi_savex","text":"<pre><code>const char vi_savex = userzp+34;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_ptr3","title":"variable vi_ptr3","text":"<pre><code>const char vi_ptr3 = userzp+36;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#variable-vi_tmp3","title":"variable vi_tmp3","text":"<pre><code>const char vi_tmp3 = userzp+38;\n</code></pre> <p>2 bytes </p>"},{"location":"tools_docs/vi/Files/vi_8s/#macros-documentation","title":"Macros Documentation","text":""},{"location":"tools_docs/vi/Files/vi_8s/#define-vi_dec16_zp","title":"define vi_dec16_zp","text":"<pre><code>#define vi_dec16_zp(\naddr\n)\n</code></pre>"},{"location":"tools_docs/vi/Files/vi_8s/#source-code","title":"Source code","text":"<pre><code>; Limits max line : 256 bytes\n; Max file : VI_MAX_LENGTH_FILE (2000 bytes)\n; max edit char per line : 39\n\n; Max 2KB pour un fichier (arbitraire)\n; Pas de possibilit\u00e9 d'\u00e9diter une ligne de plus de 39 chars (donc pas de gestion de retour \u00e0 la ligne quand une ligne fait plus de 40 chars\n; Quand on remonte ou quand on descend le curseur, il revient toujours \u00e0 la position X=0 m\u00eame si on \u00e9tait en milieu de ligne\n; Pas de gestion du mode \u00e9crasement\n; Pas de possibilit\u00e9 d'avoir une touche pour aller en fin de ligne\n; g\u00e8re le mode windows pour les retours \u00e0 la ligne, et ne marchera pas en retour chariot unix\n\n\n.macro  vi_dec16_zp   addr\n\nlda     addr ; 98\nbne     *+2 ; go to label\ndec     addr+1\n;label:\ndec     addr\n.endmacro\n\nCR = $0D\nLF = $0A\n\nIS_EOF                      = $00\nIS_BEGINNING_OF_THE_FILE    = $00\nIS_LAST_LINE_OF_SCREEN_TEXT = $01\nIS_BEGINNING_OF_THE_LINE    = $00\n\n\nVI_LAST_LINE_EDITOR            = 26 ; Last line used by the editor\nVI_FILL_SCREEN_MODE_STOP_AT_THE_END_OF_LAST_LINE = 0\nVI_COMMANDLINE_MAX_CHAR        = 8\nVI_MAX_LENGTH_FILE             = 2000\nVI_EDITOR_CHAR_LIMITS_EMPTY    = '~'\nVI_COMMANDLINE_VIDEO_ADRESS    := $bb80+40*27\nVI_EDITION_LAST_VIDEO_ADRESS   := $bb80+40*26\nVI_EDITION_VIDEO_ADRESS        := $bb80\nVI_EDITOR_MAX_LENGTH_OF_A_LINE = 255\nVI_EDITOR_MAX_COLUMN           = 39\n\n\n\n;* labels prefixed with _ are populated from C*/\nvi_struct                                   := userzp ; 2 bytes\nvi_ptr1                                     := userzp+2 ; 2 bytes\nvi_argv                                     := userzp+4 ; 2 bytes\nvi_argc                                     := userzp+6 ; 1 bytes\nvi_arg1                                     := userzp+7 ; 2 bytes\nvi_fp                                       := userzp+9 ; 2 bytes\nvi_ptr_file                                 := userzp+11 ; 2 bytes\nvi_tmp2                                     := userzp+13\nvi_ptr_screen                               := userzp+14 ; 2 bytes\nvi_length_file                              := userzp+16 ; 2 bytes\nvi_length_file_compute                      := userzp+18 ; 2 bytes\nvi_tmp1                                     := userzp+20\nvi_fileopened                               := userzp+22\nvi_ptr_file_used                            := userzp+24 ; 2 bytes\ntmp0_16                                     := userzp+26\nvi_no_opened_file                           := userzp+28\nvi_pos_debug                                := userzp+30\nvi_ptr2                                     := userzp+32 ; 2 bytes\nvi_savex                                    := userzp+34 ; 2 bytes\nvi_ptr3                                     := userzp+36 ; 2 bytes\nvi_tmp3                                     := userzp+38 ; 2 bytes\n\n\n\n\n.include \"data/vi/strings.s\"\n.include \"Routines/vi_fill_screen_with_empty_line.s\"\n\n.include \"Routines/vi_struct.s\"\n.include \"Routines/vi_displays_info.s\"\n\n.include \"Routines/subfunc/vi/vi_init_vi_struct.s\"\n\n.include \"Routines/subfunc/vi/vi_ptr_last_char_plus_plus.s\"\n.include \"Routines/subfunc/vi/vi_ptr_last_char_sub_sub.s\"\n.include \"Routines/subfunc/vi/vi_set_ptr_last_char.s\"\n.include \"Routines/subfunc/vi/vi_ptr_last_char_add.s\"\n.include \"Routines/subfunc/vi/vi_vi_ptr_file_used_plus_plus.s\"\n\n.include \"Routines/subfunc/vi/vi_xpos_screen_plus_plus.s\"\n.include \"Routines/subfunc/vi/vi_xpos_screen_sub_sub.s\"\n\n.include \"Routines/subfunc/vi/vi_ypos_screen_sub_sub.s\"\n.include \"Routines/subfunc/vi/vi_ypos_screen_plus_plus.s\"\n\n.include \"Routines/subfunc/vi/vi_ptr_file_used_plus_plus.s\"\n.include \"Routines/subfunc/vi/vi_length_file_sub_sub.s\"\n.include \"Routines/subfunc/vi/vi_display_char.s\"\n.include \"Routines/subfunc/vi/vi_check_beginning_of_file.s\"\n.include \"Routines/subfunc/vi/vi_fill_last_line.s\"\n.include \"Routines/subfunc/vi/vi_copy_arg1_to_name_file_open.s\"\n.include \"Routines/subfunc/vi/vi_length_file_plus_plus.s\"\n.include \"Routines/subfunc/vi/vi_compute_video_adress.s\"\n.include \"Routines/subfunc/vi/vi_ptr_file_used_sub_sub.s\"\n.include \"Routines/subfunc/vi/vi_display_file_opened.s\"\n.include \"Routines/subfunc/vi/vi_check_0A.s\"\n.include \"Routines/subfunc/vi/vi_set_xpos_0.s\"\n.include \"Routines/subfunc/vi/vi_ptr_file_used_plus_plus_and_check_eof.s\"\n.include \"Routines/subfunc/vi/vi_search_next_line.s\"\n.include \"Routines/subfunc/vi/vi_shift_file_from_memory_one_char.s\"\n.include \"Routines/subfunc/vi/vi_check_inserted_char_overflow_the_max_column.s\"\n.include \"Routines/subfunc/vi/vi_scroll_from_left_to_right_full_line.s\"\n.include \"Routines/subfunc/vi/vi_shift_line_left_to_right_editor.s\"\n.include \"Routines/subfunc/vi/vi_search_previous_line_beginning.s\"\n.include \"Routines/subfunc/vi/vi_set_xpos_from_A.s\"\n.include \"Routines/subfunc/vi/vi_scroll_to_left.s\"\n.include \"Routines/subfunc/vi/vi_check_if_previous_line_was_truncated.s\"\n.include \"Routines/subfunc/vi/vi_search_previous_cr.s\"\n.include \"Routines/subfunc/vi/vi_add_char_to_text.s\"\n.include \"Routines/subfunc/vi/vi_strlen_current_line.s\"\n.include \"Routines/subfunc/vi/vi_compute_last_text_line.s\"\n\n.include \"Routines/subfunc/vi/vi_clear_command_line.s\"\n\n.include \"Routines/subfunc/vi/vi_key_down.s\"\n.include \"Routines/subfunc/vi/vi_key_enter.s\"\n.include \"Routines/subfunc/vi/vi_key_del.s\"\n.include \"Routines/subfunc/vi/vi_key_up.s\"\n.include \"Routines/subfunc/vi/vi_key_right.s\"\n.include \"Routines/subfunc/vi/vi_key_left.s\"\n.include \"Routines/subfunc/vi/vi_check_eof.s\"\n\n.include \"Routines/vi_put_char.s\"\n.include \"Routines/vi_command_edition.s\"\n.include \"Routines/vi_editor_switch_on_cursor.s\"\n.include \"Routines/vi_editor_switch_off_cursor.s\"\n.include \"Routines/vi_edition_keyboard.s\"\n.include \"Routines/vi_switch_to_edition_mode.s\"\n\n.include \"Routines/tables.s\"\n.include \"Routines/_clrscr_vi.s\"\n\n\n.proc _vi\n\n\nXMAINARGS       = $2C\nXGETARGV        = $2E\nargv            := userzp   ; 2 bytes\nargc            := userzp+2 ; 1 byte\n\nlda     #$00\nsta     vi_no_opened_file\n\n\nlda     #&lt;$bb80\nsta     vi_ptr_screen\n\nlda     #&gt;$bb80\nsta     vi_ptr_screen+1\n\n\nlda     #$00\nsta     vi_fileopened\n\n\nmalloc .sizeof(vi_struct_data)\n\ncmp     #NULL\nbne     @not_oom2\ncpy     #NULL\nbne     @not_oom2\nprint   str_OOM\n; oom\nrts\n@not_oom2:\n\nsta     vi_struct\nsty     vi_struct+1\n\njsr     vi_init_vi_struct\n\ninitmainargs vi_argv, vi_argc, 0\n\nlda     vi_argc  ; Do we have a file on the command line\ncmp     #$01\nbeq     not_opened_file\n\ngetmainarg #1, (vi_argv) ,vi_arg1\n\n; Checking if vi_arg1 is not empty\n\n; when we type \"vi [space]\" on command line, initmainargs returns argv=2 but the arg is empty\n; This is a fix to avoid this\nldy     #$00\n@check_arg:\nlda     (vi_arg1),y\nbeq     not_opened_file\n\n@check_filename:\n\nfopen (vi_arg1), O_RDONLY,,vi_fp\n\ncpx     #$FF\nbne     opened_file\ncmp     #$FF\nbne     opened_file\nbeq     not_opened_file\n\n\n\nopened_file:\nlda     #$01\nsta     vi_fileopened\n\n; copy into name_file_open of the struct\njsr     vi_copy_arg1_to_name_file_open\n\nnot_opened_file:\n\ncursor OFF\njsr     _clrscr_vi\n\nmalloc #VI_MAX_LENGTH_FILE,vi_ptr_file ; $376B\n\nlda     vi_ptr_file ; $3769\nbne     @ptr_file_continue\nlda     vi_ptr_file+1\nbne     @ptr_file_continue\nprint   str_OOM\nrts\n\n@ptr_file_continue:\n; Set last char of the file ptr\n\nlda     vi_ptr_file\nldx     vi_ptr_file+1\njsr     vi_set_ptr_last_char\n\nlda     vi_ptr_file         ; Contains the ptr $376B\nsta     vi_ptr_file_used\n\nlda     vi_ptr_file+1\nsta     vi_ptr_file_used+1\n\nlda     vi_fileopened\nbeq     @skip_loading\n\n; Now load the file\nfread (vi_ptr_file_used), #VI_MAX_LENGTH_FILE, 1, vi_fp ; myptr is from a malloc for example\n\nsta     vi_length_file\nsta     vi_length_file_compute\nstx     vi_length_file+1\nstx     vi_length_file_compute+1\nfclose(vi_fp)\n\n\nlda     vi_ptr_file\nsta     vi_ptr1\nsta     vi_ptr_file_used\n\n\nlda     vi_ptr_file+1\nsta     vi_ptr1+1\nsta     vi_ptr_file_used+1\n\n; now set vi_ptr_last_char with the length of the file\n\nlda     vi_length_file\nldx     vi_length_file+1\njsr     vi_ptr_last_char_add\n\n; Check eof\n; Dans le cas o\u00f9 on a charg\u00e9 avant un fichier, comme on ne s'arrete pas \u00e0 l'eof du fichier courant, cela va continuer a s'afficher alors m\u00eame qu'on est \u00e0 la fin du fichier\n; Cela va afficher l'ancien fichier charg\u00e9. On compare donc pour s'arreter.\n\njsr     vi_display_file_opened\n\n@skip_fill_last_line:\n\nldx     #$01\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\nbeq     @no_compute ; First line ? Then X=1 in order to display ~ on the second line\ncmp     #VI_LAST_LINE_EDITOR\nbeq     @no_empty_line_begin\n\ntax\ninx\n\n@no_compute:\nldy     #$01\njmp     @display_empty_line_begin\n\n@skip_loading:\nldy     #$01 ; For a new_file\nldx     #$01\n@display_empty_line_begin:\njsr     vi_fill_screen_with_empty_line\n\n@no_empty_line_begin:\n; Set cursor position to 0,0\nldy     #vi_struct_data::ypos_screen\nlda     #$00\nsta     (vi_struct),y\n\nldy     #vi_struct_data::xpos_screen\nsta     (vi_struct),y\n\nlda     vi_ptr_file         ; Contains the ptr\nsta     vi_ptr_file_used\n\nlda     vi_ptr_file+1\nsta     vi_ptr_file_used+1\n\n\n@loop_until_esc_is_pressed:\n\njsr     vi_edition_keyboard\n\ncmp     #$01\n\nbeq     @final_exit\njmp     @loop_until_esc_is_pressed\n\n@final_exit:\nrts\n\n; **********************************\n\n\n\n\nstr_OOM:\n.asciiz \"OOM\"       ; FIXME import from general lib\nstr_not_found:\n.asciiz \"File not found\"\n\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__add__char__to__text_8s/","title":"vi_add_char_to_text.s","text":""},{"location":"tools_docs/vi/Files/vi__add__char__to__text_8s/#vi_add_char_to_texts","title":"vi_add_char_to_text.s","text":""},{"location":"tools_docs/vi/Files/vi__add__char__to__text_8s/#routine","title":"Routine","text":"Name vi_add_char_to_text"},{"location":"tools_docs/vi/Files/vi__add__char__to__text_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__add__char__to__text_8s/#routine-vi_add_char_to_text","title":"Routine vi_add_char_to_text","text":"<pre><code>vi_add_char_to_text\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__add__char__to__text_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_add_char_to_text\n; Ajoute un caract\u00e8re dans le texte\npha\njsr     vi_ptr_last_char_plus_plus\njsr     vi_shift_file_from_memory_one_char ; shift one char the text file in the memory\nldy     #$00\npla\nsta     (vi_ptr_file_used),y ; store \\n\njsr     vi_ptr_file_used_plus_plus\njsr     vi_length_file_plus_plus\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__check__0A_8s/","title":"vi_check_0A.s","text":""},{"location":"tools_docs/vi/Files/vi__check__0A_8s/#vi_check_0as","title":"vi_check_0A.s","text":""},{"location":"tools_docs/vi/Files/vi__check__0A_8s/#routine","title":"Routine","text":"Name vi_check_0A"},{"location":"tools_docs/vi/Files/vi__check__0A_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__check__0A_8s/#routine-vi_check_0a","title":"Routine vi_check_0A","text":"<pre><code>vi_check_0A\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__check__0A_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_check_0A\n; jmp vi_check_0A\n; $c398\nlda     (vi_ptr_file_used),y\ncmp     #$0A\nbeq     @exit_advance_after_LF\nrts\n@exit_advance_after_LF:\njsr     vi_vi_ptr_file_used_plus_plus\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__check__beginning__of__file_8s/","title":"vi_check_beginning_of_file.s","text":""},{"location":"tools_docs/vi/Files/vi__check__beginning__of__file_8s/#vi_check_beginning_of_files","title":"vi_check_beginning_of_file.s","text":""},{"location":"tools_docs/vi/Files/vi__check__beginning__of__file_8s/#routine","title":"Routine","text":"Name vi_check_beginning_of_file"},{"location":"tools_docs/vi/Files/vi__check__beginning__of__file_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__check__beginning__of__file_8s/#routine-vi_check_beginning_of_file","title":"Routine vi_check_beginning_of_file","text":"<pre><code>vi_check_beginning_of_file\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__check__beginning__of__file_8s/#source-code","title":"Source code","text":"<pre><code>; A returns 00 if beginning of the file, 01 if not\n\n.proc vi_check_beginning_of_file\nlda     vi_ptr_file_used\ncmp     vi_ptr_file\nbne     @not_beginning\n\nlda     vi_ptr_file_used+1\ncmp     vi_ptr_file+1\nbne     @not_beginning\n\nlda     #IS_BEGINNING_OF_THE_FILE ; Beginninng of the file\nrts\n\n@not_beginning:\nlda     #$01 ; Not the Beginninng of the file\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__check__eof_8s/","title":"vi_check_eof.s","text":""},{"location":"tools_docs/vi/Files/vi__check__eof_8s/#vi_check_eofs","title":"vi_check_eof.s","text":""},{"location":"tools_docs/vi/Files/vi__check__eof_8s/#routine","title":"Routine","text":"Name vi_check_eof"},{"location":"tools_docs/vi/Files/vi__check__eof_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__check__eof_8s/#routine-vi_check_eof","title":"Routine vi_check_eof","text":"<pre><code>vi_check_eof\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__check__eof_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_check_eof\n; return in A 00 if eof\n; returns in A 01 if not eof\n\n; Do we reached eof ?\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr_file_used\ncmp     vi_tmp1\nbne     @not_eof\n\nldy     #vi_struct_data::ptr_last_char_file+1\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr_file_used+1\ncmp     vi_tmp1\nbne     @not_eof\n@is_eof:\nlda     #IS_EOF ; EOF\nrts\n\n@is_eof_before:\njsr     vi_ptr_file_used_plus_plus\njmp     @is_eof\n\n@not_eof:\n\n@not_last_line:\nlda     #$01 ; Not eof\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__check__if__previous__line__was__truncated_8s/","title":"vi_check_if_previous_line_was_truncated.s","text":""},{"location":"tools_docs/vi/Files/vi__check__if__previous__line__was__truncated_8s/#vi_check_if_previous_line_was_truncateds","title":"vi_check_if_previous_line_was_truncated.s","text":""},{"location":"tools_docs/vi/Files/vi__check__if__previous__line__was__truncated_8s/#routine","title":"Routine","text":"Name vi_check_if_previous_line_was_truncated"},{"location":"tools_docs/vi/Files/vi__check__if__previous__line__was__truncated_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__check__if__previous__line__was__truncated_8s/#routine-vi_check_if_previous_line_was_truncated","title":"Routine vi_check_if_previous_line_was_truncated","text":"<pre><code>vi_check_if_previous_line_was_truncated\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__check__if__previous__line__was__truncated_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_check_if_previous_line_was_truncated\n\n\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\n;vi_dec16_zp vi_ptr1\n\nlda     vi_ptr1\nbne     @S1\ndec     vi_ptr1+1\n@S1:\ndec     vi_ptr1\n\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #$0A\nbeq     @exit\njsr     vi_ptr_file_used_plus_plus\n@exit:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__check__inserted__char__overflow__the__max__column_8s/","title":"vi_check_inserted_char_overflow_the_max_column.s","text":""},{"location":"tools_docs/vi/Files/vi__check__inserted__char__overflow__the__max__column_8s/#vi_check_inserted_char_overflow_the_max_columns","title":"vi_check_inserted_char_overflow_the_max_column.s","text":""},{"location":"tools_docs/vi/Files/vi__check__inserted__char__overflow__the__max__column_8s/#routine","title":"Routine","text":"Name vi_check_inserted_char_overflow_the_max_column"},{"location":"tools_docs/vi/Files/vi__check__inserted__char__overflow__the__max__column_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__check__inserted__char__overflow__the__max__column_8s/#routine-vi_check_inserted_char_overflow_the_max_column","title":"Routine vi_check_inserted_char_overflow_the_max_column","text":"<pre><code>vi_check_inserted_char_overflow_the_max_column\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__check__inserted__char__overflow__the__max__column_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_check_inserted_char_overflow_the_max_column\n; Pas d'arg en entr\u00e9e\n; Cette routine renvoie dans\n; A=0 si on a un texte qui ne d\u00e9passe pas 40 colonnes\n; A=1 si on a une ligne texte qui d\u00e9passe la ligne de 40 colonnes et X contient le nb de lignes sur l'\u00e9diteur de cette ligne texte\n; A=2 si on a une ligne de plus de 256 chars : overflow\n; A=3 si cela la ligne fait exactement 1 ligne, il faudra donc scroller\n\nlda     #$00\nsta     vi_tmp1\n\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntax\ndex\nstx     vi_tmp3\n\nldy     #$00\n@L1:\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @exit\ninx\ncpx     #VI_EDITOR_MAX_COLUMN+1\nbne     @continue\n\ninc     vi_tmp1\nldx     #$00\n\n@continue:\ninc     vi_tmp3\niny\nbne     @L1\nlda     #$02 ; Overflow\nrts\n\n@exit:\nlda     vi_tmp3\ncmp     #VI_EDITOR_MAX_COLUMN+1\nbeq     @exactly_a_new_line\n\nldx     vi_tmp1\nbeq     @no_line_editor_overflow\nlda     #$01\nrts\n\n@no_line_editor_overflow:\nlda     #$00\nrts\n\n@exactly_a_new_line:\nlda     #$03\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__clear__command__line_8s/","title":"vi_clear_command_line.s","text":""},{"location":"tools_docs/vi/Files/vi__clear__command__line_8s/#vi_clear_command_lines","title":"vi_clear_command_line.s","text":""},{"location":"tools_docs/vi/Files/vi__clear__command__line_8s/#routine","title":"Routine","text":"Name vi_clear_command_line"},{"location":"tools_docs/vi/Files/vi__clear__command__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__clear__command__line_8s/#routine-vi_clear_command_line","title":"Routine vi_clear_command_line","text":"<pre><code>vi_clear_command_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__clear__command__line_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_clear_command_line\nldx     #40\nlda     #$00 ; Set command line with 0\n@loop:\nsta     VI_COMMANDLINE_VIDEO_ADRESS,x\ndex\nbpl     @loop\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__command__edition_8s/","title":"/Routines/vi_command_edition.s","text":""},{"location":"tools_docs/vi/Files/vi__command__edition_8s/#routinesvi_command_editions","title":"/Routines/vi_command_edition.s","text":""},{"location":"tools_docs/vi/Files/vi__command__edition_8s/#routine","title":"Routine","text":"Name vi_command_edition"},{"location":"tools_docs/vi/Files/vi__command__edition_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__command__edition_8s/#routine-vi_command_edition","title":"Routine vi_command_edition","text":"<pre><code>vi_command_edition\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__command__edition_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_command_edition\n\njsr     vi_clear_command_line\nldy     #vi_struct_data::xpos_command_line\nlda     #$01\nsta     (vi_struct),y\n\nlda     #':'\nsta     VI_COMMANDLINE_VIDEO_ADRESS\n\nldy     #vi_struct_data::command_line_buffer\nsta     (vi_struct),y ; Insert :\n\n@read_keyboard:\ncgetc\ncmp     #KEY_RIGHT\nbeq     @read_keyboard\ncmp     #KEY_LEFT\nbeq     @read_keyboard\ncmp     #KEY_UP\nbeq     @read_keyboard\ncmp     #KEY_DOWN\nbeq     @read_keyboard\ncmp     #KEY_ESC\nbeq     @exit\ncmp     #KEY_DEL\nbeq     @del\ncmp     #KEY_RETURN\nbeq     @execute_command_line\nsta     vi_tmp1\nldy     #vi_struct_data::xpos_command_line\nlda     (vi_struct),y\ncmp     #39 ; End of line ?\nbeq     @read_keyboard\ntay\nlda     vi_tmp1\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\n\n\n\niny\ntya\nldy     #vi_struct_data::xpos_command_line\nsta     (vi_struct),y\n\njmp     @read_keyboard\n\n@exit:\njsr     vi_clear_command_line\nlda     #$00\nrts\n@del:\nldy     #vi_struct_data::xpos_command_line\nlda     (vi_struct),y\ncmp     #$01\nbeq     @erase_char_and_exit\n; Erase char on screen\npha\ntay\nlda     #' '\ndey\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\npla\n\n; Erase char into command_line_buffer\npha\nclc\nadc     #vi_struct_data::command_line_buffer\ntay\nlda     #$00 ; EOS\nsta     (vi_struct),y ; Insert :\npla\n\n; dec pos\ntay\ndey\ntya\nldy     #vi_struct_data::xpos_command_line\nsta     (vi_struct),y\n\njmp     @read_keyboard\n\n@erase_char_and_exit:\nlda     #' '\nsta     VI_COMMANDLINE_VIDEO_ADRESS\nlda     #$00\nrts\n\n\n@execute_command_line:\nldy     #$01\n@read_commandline:\nsty     vi_tmp2\nlda     VI_COMMANDLINE_VIDEO_ADRESS,y\ncmp     #'q'\nbeq     @exit_vi\ncmp     #'w'\nbeq     @write_file\ncmp     #KEY_ESC\nbeq     @key_esc\nlda     #$00\nrts\n@key_esc:\njsr     vi_clear_command_line\nlda     #$00\nrts\n@exit_vi:\nlda     #$01\nrts\n@write_file:\nsty     vi_tmp2\n\n; Check if we have an arg (filename)\n\niny\n\nlda     VI_COMMANDLINE_VIDEO_ADRESS,y\ncmp     #' '            ; If it's a space after w, then there is an arg\nbeq     @filename_in_argument\n\n@file_inserted:\ndey\n\nlda     vi_fileopened\nbeq     @display_missing_filename\n\n\n;     lda     vi_struct+1\n;     sta     vi_arg1+1\n\n;     lda     #vi_struct_data::name_file_open\n;     clc\n;     adc     vi_struct\n;     bcc     @no_inc_arg1\n;     inc     vi_arg1+1\n; @no_inc_arg1:\n;     sta     vi_arg1\n\njsr     @vi_open_and_write_file\n\n\n; Clear\n\njsr     vi_clear_command_line\n\nldy     #$00\n@loop_written:\nlda     msg_written,y\nbeq     @out\n\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\njmp     @loop_written\n\n@out:\nldy     vi_tmp2\niny\njmp     @read_commandline\n\n@filename_in_argument:\niny     ; skip space\ntya\ntax\n\nlda     #$01\nsta     vi_fileopened\n\nldy     #vi_struct_data::name_file_open\n@loop_copy_filename:\nlda     VI_COMMANDLINE_VIDEO_ADRESS,x\nbeq     @exit_copy_filename\ncmp     #' '\nbeq     @exit_copy_filename\nsta     (vi_struct),y\ninx\niny\ncpy     #VI_MAX_LENGTH_FILENAME+vi_struct_data::name_file_open\nbne     @loop_copy_filename\n\n\n@exit_copy_filename:\nlda     #$00  ; EOS if overflow\nsta     (vi_struct),y\n\ntxa\ntay\n\njmp     @file_inserted\n\n\n\n@display_missing_filename:\n\n\nldy     #$00\n@loop_written2:\nlda     msg_nofilename,y\nbeq     @out2\n\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\njmp     @loop_written2\n\n@out2:\nrts\n\n\n@vi_open_and_write_file:\n\n\n\nlda     vi_struct+1\nsta     vi_ptr1+1\n\nlda     #vi_struct_data::name_file_open\nclc\nadc     vi_struct\nbcc     @no_inc_vi_ptr1\ninc     vi_ptr1+1\n@no_inc_vi_ptr1:\nsta     vi_ptr1\n\n\n\nfopen (vi_ptr1), O_CREAT|O_WRONLY,,vi_fp\ncpx     #$FF\nbne     @opened_file\ncmp     #$FF\nbne     @opened_file\nbeq     @error_writing_file\n\n@opened_file:\n; get length file\n; ldy     #vi_struct_data::length_file\n;    lda     (vi_struct),y\n;sta     vi_length_file\n;iny\n;lda     (vi_struct),y\n;sta     vi_length_file+1\n;dec     vi_length_file\n; @me:\n;     jmp     @me\nfwrite (vi_ptr_file), (vi_length_file), 1, vi_fp ; myptr is from a malloc for example\n\nfclose(vi_fp)\nrts\n\n@error_writing_file:\n\nprint str_error\njmp     @error_writing_file\nrts\n\nstr_error:\n.asciiz \"Error\"\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__compute__last__text__line_8s/","title":"vi_compute_last_text_line.s","text":""},{"location":"tools_docs/vi/Files/vi__compute__last__text__line_8s/#vi_compute_last_text_lines","title":"vi_compute_last_text_line.s","text":""},{"location":"tools_docs/vi/Files/vi__compute__last__text__line_8s/#routine","title":"Routine","text":"Name vi_compute_last_text_line"},{"location":"tools_docs/vi/Files/vi__compute__last__text__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__compute__last__text__line_8s/#routine-vi_compute_last_text_line","title":"Routine vi_compute_last_text_line","text":"<pre><code>vi_compute_last_text_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__compute__last__text__line_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_compute_last_text_line\n; A &amp; Y the current ptr\n; X the id of the text line ?\nsta     vi_ptr2\nsty     vi_ptr2+1\n\nstx     vi_tmp2\n\nlda     #VI_LAST_LINE_EDITOR\nsec\nsbc     vi_tmp2\nsta     vi_tmp2\n\n\n@L1:\n\n\njsr     check_eof_vi_ptr2\ncmp     #IS_EOF\nbeq     @exit\nldy     #$00\nlda     (vi_ptr2),y\ncmp     #CR\nbeq     @found\n\n@continue:\ninc     vi_ptr2\nbne     @out_compare\ninc     vi_ptr2+1\n@out_compare:\njmp     @L1\n\n@found:\n\ninc     vi_ptr2\nbne     @out_compare2\ninc     vi_ptr2+1\n@out_compare2:\n\njsr     check_eof_vi_ptr2\ncmp     #IS_EOF\nbeq     @exit\n\nlda     (vi_ptr2),y\ncmp     #LF\nbne     @S1\n\ninc     vi_ptr2\nbne     @out_compare3\ninc     vi_ptr2+1\n@out_compare3:\n\njsr     check_eof_vi_ptr2\ncmp     #IS_EOF\nbeq     @exit\n\n\n@S1:\ndec     vi_tmp2\nbne     @continue\n@exit:\nlda     vi_ptr2\nldy     vi_ptr2+1\n\nrts\n\n\ncheck_eof_vi_ptr2:\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr2\ncmp     vi_tmp1\nbne     @not_eof\n\nldy     #vi_struct_data::ptr_last_char_file+1\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr2+1\ncmp     vi_tmp1\nbne     @not_eof\n\nlda     #IS_EOF\nrts\n\n@not_eof:\nlda     #$01\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__compute__video__adress_8s/","title":"vi_compute_video_adress.s","text":""},{"location":"tools_docs/vi/Files/vi__compute__video__adress_8s/#vi_compute_video_adresss","title":"vi_compute_video_adress.s","text":""},{"location":"tools_docs/vi/Files/vi__compute__video__adress_8s/#routine","title":"Routine","text":"Name vi_compute_video_adress"},{"location":"tools_docs/vi/Files/vi__compute__video__adress_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__compute__video__adress_8s/#routine-vi_compute_video_adress","title":"Routine vi_compute_video_adress","text":"<pre><code>vi_compute_video_adress\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__compute__video__adress_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_compute_video_adress\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ntay\nlda     TABLE_LOW_TEXT,y\nsta     vi_ptr_screen\nlda     TABLE_HIGH_TEXT,y\nsta     vi_ptr_screen+1\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__copy__arg1__to__name__file__open_8s/","title":"vi_copy_arg1_to_name_file_open.s","text":""},{"location":"tools_docs/vi/Files/vi__copy__arg1__to__name__file__open_8s/#vi_copy_arg1_to_name_file_opens","title":"vi_copy_arg1_to_name_file_open.s","text":""},{"location":"tools_docs/vi/Files/vi__copy__arg1__to__name__file__open_8s/#routine","title":"Routine","text":"Name vi_copy_arg1_to_name_file_open"},{"location":"tools_docs/vi/Files/vi__copy__arg1__to__name__file__open_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__copy__arg1__to__name__file__open_8s/#routine-vi_copy_arg1_to_name_file_open","title":"Routine vi_copy_arg1_to_name_file_open","text":"<pre><code>vi_copy_arg1_to_name_file_open\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__copy__arg1__to__name__file__open_8s/#source-code","title":"Source code","text":"<pre><code>.proc   vi_copy_arg1_to_name_file_open\nldy     #$00\nsty     vi_tmp1\n\nldy     #vi_struct_data::name_file_open\nsty     vi_tmp2\n\n@loop_copy_filename:\nldy     vi_tmp1\nlda     (vi_arg1),y\nbeq     @exit_copy_filename\niny\nsty     vi_tmp1\nldy     vi_tmp2\nsta     (vi_struct),y\niny\nsty     vi_tmp2\ncpy     #VI_MAX_LENGTH_FILENAME+vi_struct_data::name_file_open\nbne     @loop_copy_filename\n\nlda     #$00  ; EOS if overflow\n@exit_copy_filename:\n\nldy     vi_tmp2\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__decal__text_8s/","title":"vi_decal_text.s","text":""},{"location":"tools_docs/vi/Files/vi__decal__text_8s/#vi_decal_texts","title":"vi_decal_text.s","text":""},{"location":"tools_docs/vi/Files/vi__decal__text_8s/#routine","title":"Routine","text":"Name vi_decal_text"},{"location":"tools_docs/vi/Files/vi__decal__text_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__decal__text_8s/#routine-vi_decal_text","title":"Routine vi_decal_text","text":"<pre><code>vi_decal_text\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__decal__text_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_decal_text\n; A &amp; X address dest to copy\n\nsta     DECCIB\nstx     DECCIB+1\n\nlda     vi_ptr_file_used ; address first char\nldy     vi_ptr_file_used+1\nsta     DECDEB\nsty     DECDEB+1\n\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     DECFIN\niny\nlda     (vi_struct),y\nsta     DECFIN+1\n\nBRK_TELEMON XDECAL\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__display__char_8s/","title":"vi_display_char.s","text":""},{"location":"tools_docs/vi/Files/vi__display__char_8s/#vi_display_chars","title":"vi_display_char.s","text":""},{"location":"tools_docs/vi/Files/vi__display__char_8s/#routine","title":"Routine","text":"Name vi_display_char"},{"location":"tools_docs/vi/Files/vi__display__char_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__display__char_8s/#routine-vi_display_char","title":"Routine vi_display_char","text":"<pre><code>vi_display_char\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__display__char_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_display_char\nsta     vi_tmp2\n\n; Avoid to display a line greater than 80 chars ?\n\nlda     vi_ptr_file_used\nldy     vi_ptr_file_used+1\njsr     vi_strlen_current_line\n\ncpx     #80-1\nbcc     @add_char\nrts\n@add_char:\n@not_eol:\njsr     vi_editor_switch_off_cursor\n\njsr     vi_check_eof\n\ncmp     #IS_EOF ; Is eof ?\nbeq     @not_eof\n\n\njsr     vi_shift_file_from_memory_one_char\n; Scroll now\n; if posx==VI_EDITOR_MAX_COLUMN then skip scroll\n\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ncmp     #VI_EDITOR_MAX_COLUMN\nbne     @scroll\n\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntay\nlda     vi_tmp2 ; get char\nsta     (vi_ptr_screen),y\n\nldy     #$00\nsta     (vi_ptr_file_used),y ; Insert into file\njsr     vi_vi_ptr_file_used_plus_plus\n\njsr     vi_set_xpos_0\n\njsr     vi_ypos_screen_plus_plus\n\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ncmp     #VI_LAST_LINE_EDITOR\nbeq     @scroll_last_line\ntax\nscroll down,,26 ; Because the second empty arg is provided\n\n@scroll_last_line:\n; FIXME\n\nrts\n\n@scroll:\njsr     vi_scroll_from_left_to_right_full_line\n\n\n\n\n@not_eof:\n; Check if we need to scroll\n\njsr     vi_check_inserted_char_overflow_the_max_column\n\ncmp     #$03\nbeq     @scroll_screen\ncmp     #$01\nbeq     @L100\nbne     @line_not_full\n\n@scroll_screen:\n\n; jsr     vi_ypos_screen_plus_plus\n; cmp     #$01 ; We are on the last line\n; bne     @not_last_line\n; ; Code for lastline\n\n@not_last_line:\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ntax\ninx\n\nscroll down, , 26            ; Yes scroll\n\n@L100:\n\n; scroll the next line\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\nclc\nadc     #$01\npha\njsr     vi_shift_line_left_to_right_editor\npla\ntay\nlda     TABLE_LOW_TEXT,y\nsta     vi_ptr1\nlda     TABLE_HIGH_TEXT,y\nsta     vi_ptr1+1\n\n\nldy     #vi_struct_data::xpos_screen\nlda     #VI_EDITOR_MAX_COLUMN+1\nsec\nsbc     (vi_struct),y\n\n\ntay\nlda     (vi_ptr_file_used),y\nldy     #$00\nsta     (vi_ptr1),y\n\n\n\n\n\n@line_not_full:\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntay\nlda     vi_tmp2 ; get char\nsta     (vi_ptr_screen),y\n\nsty     vi_tmp1\n\nldy     #$00\nsta     (vi_ptr_file_used),y ; Insert into file\n\njsr     vi_vi_ptr_file_used_plus_plus\njsr     vi_ptr_last_char_plus_plus\njsr     vi_length_file_plus_plus\n\n\n;     ; end_insert char on screen\n\n\njsr     vi_xpos_screen_plus_plus\ncmp     #$01    ; Are we on the end of line ?\nbne     @exit\n\njsr     vi_ypos_screen_plus_plus\n\n; x=0\nlda     #$00\nldy     #vi_struct_data::xpos_screen\nsta     (vi_struct),y\n@exit:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__display__file__opened_8s/","title":"vi_display_file_opened.s","text":""},{"location":"tools_docs/vi/Files/vi__display__file__opened_8s/#vi_display_file_openeds","title":"vi_display_file_opened.s","text":""},{"location":"tools_docs/vi/Files/vi__display__file__opened_8s/#routine","title":"Routine","text":"Name vi_display_file_opened"},{"location":"tools_docs/vi/Files/vi__display__file__opened_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__display__file__opened_8s/#routine-vi_display_file_opened","title":"Routine vi_display_file_opened","text":"<pre><code>vi_display_file_opened\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__display__file__opened_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_display_file_opened\n\n@loop:\n\n; Do we reached eof ?\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1\ncmp     vi_tmp1\nbne     @not_eof\n\nldy     #vi_struct_data::ptr_last_char_file+1\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1+1\ncmp     vi_tmp1\nbne     @not_eof\n\nrts\n\n@not_eof:\nldy     #$00\nlda     (vi_ptr1),y\n\nldx     #VI_FILL_SCREEN_MODE_STOP_AT_THE_END_OF_LAST_LINE\njsr     vi_put_char\n\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ncmp     #VI_LAST_LINE_EDITOR\nbeq     @compute_empty_line\n\ninc     vi_ptr1\nbne     @S30\ninc     vi_ptr1+1\n@S30:\n\njmp     @loop\n\n@do_not_add_high_to_ptr:\n\nlda     vi_length_file_compute\nbne     @dec_low\ndec     vi_length_file_compute+1\n\n@dec_low:\ndec     vi_length_file_compute\nbne     @loop\nlda     vi_length_file_compute+1\nbne     @loop\n\n\n@compute_empty_line:\n; display last line\nlda     vi_ptr1\nldy     vi_ptr1+1\njsr     vi_fill_last_line\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__displays__info_8s/","title":"/Routines/vi_displays_info.s","text":""},{"location":"tools_docs/vi/Files/vi__displays__info_8s/#routinesvi_displays_infos","title":"/Routines/vi_displays_info.s","text":""},{"location":"tools_docs/vi/Files/vi__displays__info_8s/#routine","title":"Routine","text":"Name vi_displays_info displays_debug"},{"location":"tools_docs/vi/Files/vi__displays__info_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__displays__info_8s/#routine-vi_displays_info","title":"Routine vi_displays_info","text":"<pre><code>vi_displays_info\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__displays__info_8s/#routine-displays_debug","title":"Routine displays_debug","text":"<pre><code>displays_debug\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__displays__info_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_displays_info\n\nlda     vi_fileopened\n\nbeq     @is_new_file\n\n\n; Displays filename at the bottom\nlda     #$22 ; \" char\nsta     VI_COMMANDLINE_VIDEO_ADRESS\n\nldy     #$00\nldx     #$01\n@L1:\nlda     (vi_arg1),y\nbeq     @end_display_filename\nsta     VI_COMMANDLINE_VIDEO_ADRESS,x\ninx\niny\nbne     @L1\n@end_display_filename:\nlda     #$22 ; \" char\nsta     VI_COMMANDLINE_VIDEO_ADRESS,x\nrts\n\n@is_new_file:\nldy     #$00\n\n@L10:\nlda     msg_nofile,y\nbeq     @end_display_msg_nofile\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\nbne     @L10\n\n@end_display_msg_nofile:\nsty     vi_pos_debug\njsr     displays_debug\n\nrts\n.endproc\n\n\n.proc displays_debug\nlda     #$02\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\n; y\niny\n; Display ptr_last_char_file offset\nsty     RES\nldy     #vi_struct_data::ptr_last_char_file+1 ; last char file\nlda     (vi_struct),y\nBRK_TELEMON XHEXA\n; A and Y\nsty     vi_tmp1\nldy     RES\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\nlda     vi_tmp1\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\n\nsty     RES\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nBRK_TELEMON XHEXA\n; A and Y\nsty     vi_tmp1\nldy     RES\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\nlda     vi_tmp1\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\n\nlda     #$02\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\n\niny\nsty     RES\n;  pos_file_addr\n\n\n\nlda     vi_ptr_file_used+1\nBRK_TELEMON XHEXA\n; A and Y\nsty     vi_tmp1\nldy     RES\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\nlda     vi_tmp1\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\n\niny\nsty     RES\n;  pos_file_addr\n\nlda     vi_ptr_file_used\nBRK_TELEMON XHEXA\n; A and Y\nsty     vi_tmp1\nldy     RES\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\niny\nlda     vi_tmp1\nsta     VI_COMMANDLINE_VIDEO_ADRESS,y\n\n\n; Display length\nlda     #$06\nsta     VI_COMMANDLINE_VIDEO_ADRESS+22\n\nlda     #&lt;($bb80+40*27+23)\nsta     TR5\nlda     #&gt;($bb80+40*27+23)\nsta     TR5+1\n\nlda     #$20\nsta     DEFAFF\n\nldx     #$01\nldy     vi_length_file+1\nlda     vi_length_file\nBRK_TELEMON XBINDX\n\nlda     #$05\nsta     VI_COMMANDLINE_VIDEO_ADRESS+28\n\n; Display char under the cursor\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #$0D\nbne     @notcrlf\nlda     #'$'\n@notcrlf:\nsta     $bb80+40*27+29\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__edition__keyboard_8s/","title":"/Routines/vi_edition_keyboard.s","text":""},{"location":"tools_docs/vi/Files/vi__edition__keyboard_8s/#routinesvi_edition_keyboards","title":"/Routines/vi_edition_keyboard.s","text":""},{"location":"tools_docs/vi/Files/vi__edition__keyboard_8s/#routine","title":"Routine","text":"Name vi_edition_keyboard"},{"location":"tools_docs/vi/Files/vi__edition__keyboard_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__edition__keyboard_8s/#routine-vi_edition_keyboard","title":"Routine vi_edition_keyboard","text":"<pre><code>vi_edition_keyboard\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__edition__keyboard_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_edition_keyboard\njsr     vi_clear_command_line\njsr     vi_displays_info\n\n\n@loop:\ncgetc ; read keyboard\n\ncmp     #'i'\nbeq     switch_to_edition_mode\ncmp     #':'\nbne     @loop\n\njsr     vi_command_edition\ncmp     #$00 ; A is equal to 0 ? Yes restart keyboard\nbeq     @loop\njsr     _clrscr_vi\nlda     #$01    ; Exit vi\nrts\n\nswitch_to_edition_mode:\n\njsr     vi_clear_command_line\nldx     #$00\n@loop:\nlda     msg_insert,x\nbeq     @out\nsta     VI_COMMANDLINE_VIDEO_ADRESS,x\ninx\n.IFPC02\n.pc02\nbra     @loop\n.p02\n.else\njmp     @loop\n.endif\n@out:\ntxa\ntay\nsty    vi_pos_debug\njsr    displays_debug\n\njsr    vi_switch_to_edition_mode\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__editor__switch__off__cursor_8s/","title":"/Routines/vi_editor_switch_off_cursor.s","text":""},{"location":"tools_docs/vi/Files/vi__editor__switch__off__cursor_8s/#routinesvi_editor_switch_off_cursors","title":"/Routines/vi_editor_switch_off_cursor.s","text":""},{"location":"tools_docs/vi/Files/vi__editor__switch__off__cursor_8s/#routine","title":"Routine","text":"Name vi_editor_switch_off_cursor"},{"location":"tools_docs/vi/Files/vi__editor__switch__off__cursor_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__editor__switch__off__cursor_8s/#routine-vi_editor_switch_off_cursor","title":"Routine vi_editor_switch_off_cursor","text":"<pre><code>vi_editor_switch_off_cursor\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__editor__switch__off__cursor_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_editor_switch_off_cursor\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntay\nlda     (vi_ptr_screen),y ; display cursor\nand     #%01111111\nsta     (vi_ptr_screen),y ; display cursor\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__editor__switch__on__cursor_8s/","title":"/Routines/vi_editor_switch_on_cursor.s","text":""},{"location":"tools_docs/vi/Files/vi__editor__switch__on__cursor_8s/#routinesvi_editor_switch_on_cursors","title":"/Routines/vi_editor_switch_on_cursor.s","text":""},{"location":"tools_docs/vi/Files/vi__editor__switch__on__cursor_8s/#routine","title":"Routine","text":"Name vi_editor_switch_on_cursor"},{"location":"tools_docs/vi/Files/vi__editor__switch__on__cursor_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__editor__switch__on__cursor_8s/#routine-vi_editor_switch_on_cursor","title":"Routine vi_editor_switch_on_cursor","text":"<pre><code>vi_editor_switch_on_cursor\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__editor__switch__on__cursor_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_editor_switch_on_cursor\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntay\n\nlda     (vi_ptr_screen),y\nora     #$80\nsta     (vi_ptr_screen),y\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__fill__last__line_8s/","title":"vi_fill_last_line.s","text":""},{"location":"tools_docs/vi/Files/vi__fill__last__line_8s/#vi_fill_last_lines","title":"vi_fill_last_line.s","text":""},{"location":"tools_docs/vi/Files/vi__fill__last__line_8s/#routine","title":"Routine","text":"Name vi_fill_last_line"},{"location":"tools_docs/vi/Files/vi__fill__last__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__fill__last__line_8s/#routine-vi_fill_last_line","title":"Routine vi_fill_last_line","text":"<pre><code>vi_fill_last_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__fill__last__line_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_fill_last_line\n\n; A and Y contains the ptr on the file to display on the last line\nsta     vi_ptr1\nsty     vi_ptr1+1\n\nldx     #$00\n@compute_empty_line_loop:\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1\ncmp     vi_tmp1\nbne     @not_eof\n\n\nldy     #vi_struct_data::ptr_last_char_file+1\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1+1\ncmp     vi_tmp1\nbne     @not_eof\n; reached the end of the file\nrts\n\n@not_eof:\ninc     vi_ptr1\nbne     @S40\ninc     vi_ptr1+1\n\n@S40:\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @exit\ncmp     #LF\nbeq     @compute_empty_line_loop\nsta     VI_EDITION_LAST_VIDEO_ADRESS,x\ninx\ncpx     #VI_EDITOR_MAX_COLUMN+1\nbeq     @exit\njmp     @compute_empty_line_loop\n\n@exit:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__fill__screen__with__empty__line_8s/","title":"/Routines/vi_fill_screen_with_empty_line.s","text":""},{"location":"tools_docs/vi/Files/vi__fill__screen__with__empty__line_8s/#routinesvi_fill_screen_with_empty_lines","title":"/Routines/vi_fill_screen_with_empty_line.s","text":""},{"location":"tools_docs/vi/Files/vi__fill__screen__with__empty__line_8s/#routine","title":"Routine","text":"Name vi_fill_screen_with_empty_line"},{"location":"tools_docs/vi/Files/vi__fill__screen__with__empty__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__fill__screen__with__empty__line_8s/#routine-vi_fill_screen_with_empty_line","title":"Routine vi_fill_screen_with_empty_line","text":"<pre><code>vi_fill_screen_with_empty_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__fill__screen__with__empty__line_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_fill_screen_with_empty_line\n; X the first line\n\ncpy     #$00\nbeq     @out\n\nstx     vi_tmp1\nldx     #VI_LAST_LINE_EDITOR\n\nldy     #$00\n\n@loop:\nlda     TABLE_LOW_TEXT,x\nsta     vi_ptr1\nlda     TABLE_HIGH_TEXT,x\nsta     vi_ptr1+1\n\n@skip:\nlda     #VI_EDITOR_CHAR_LIMITS_EMPTY\n\nsta     (vi_ptr1),y\n\ndex\ncpx     vi_tmp1\nbpl     @loop\n@out:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__init__vi__struct_8s/","title":"vi_init_vi_struct.s","text":""},{"location":"tools_docs/vi/Files/vi__init__vi__struct_8s/#vi_init_vi_structs","title":"vi_init_vi_struct.s","text":""},{"location":"tools_docs/vi/Files/vi__init__vi__struct_8s/#routine","title":"Routine","text":"Name vi_init_vi_struct"},{"location":"tools_docs/vi/Files/vi__init__vi__struct_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__init__vi__struct_8s/#routine-vi_init_vi_struct","title":"Routine vi_init_vi_struct","text":"<pre><code>vi_init_vi_struct\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__init__vi__struct_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_init_vi_struct\n\n; init struct to 0\njsr     vi_set_xpos_0\n\nldy     #vi_struct_data::ypos_screen\nsta     (vi_struct),y\n\nldy     #vi_struct_data::xpos_text\nsta     (vi_struct),y\n\nldy     #vi_struct_data::ypos_text\nsta     (vi_struct),y\n\nldy     #vi_struct_data::xpos_command_line\nsta     (vi_struct),y\n\nldy     #vi_struct_data::pos_file_addr\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\n\nldy     #vi_struct_data::pos_file\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\n\nldy     #vi_struct_data::posx_command_line\nsta     (vi_struct),y\n\nldy     #vi_struct_data::name_file_open\nsta     (vi_struct),y\n\nldy     #vi_struct_data::length_file\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\n\nldy     #vi_struct_data::ptr_last_char_file\nlda     #$00\nsta     (vi_struct),y\niny\nsta     (vi_struct),y\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__key__del_8s/","title":"vi_key_del.s","text":""},{"location":"tools_docs/vi/Files/vi__key__del_8s/#vi_key_dels","title":"vi_key_del.s","text":""},{"location":"tools_docs/vi/Files/vi__key__del_8s/#routine","title":"Routine","text":"Name vi_manage_del vi_remove_char_in_text_file vi_decal_text_left_to_right"},{"location":"tools_docs/vi/Files/vi__key__del_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__key__del_8s/#routine-vi_manage_del","title":"Routine vi_manage_del","text":"<pre><code>vi_manage_del\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__del_8s/#routine-vi_remove_char_in_text_file","title":"Routine vi_remove_char_in_text_file","text":"<pre><code>vi_remove_char_in_text_file\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__del_8s/#routine-vi_decal_text_left_to_right","title":"Routine vi_decal_text_left_to_right","text":"<pre><code>vi_decal_text_left_to_right\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__del_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_manage_del\n; Check if we are at the beginning of the file\n\njsr     vi_check_beginning_of_file\ncmp     #IS_BEGINNING_OF_THE_FILE\nbne     @delete_char\nrts\n\n@delete_char:\njsr     vi_editor_switch_off_cursor\n\n; if xpos==0 then goto @first_colomn else goto @not_first_column\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ncmp     #$00                ; First column ?\nbne     @not_first_column\n; First column\n@first_colomn:\n; Does a $0D under the cursor (X=0 and current_char==0x0D ?) yes, scroll and remove the char\n; if    file[posfile]=='\\n' then goto\n\n\nldy     #$01\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbne     @remove_char_from_the_first_column\n; remove 0A\n\njsr     vi_remove_char_in_text_file\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbne     @do_not_move_twice\n\n; for $0A\njsr     vi_remove_char_in_text_file\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbne     @check_0A\njsr     vi_ptr_file_used_plus_plus\n\n@check_0A:\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbne     @not_0A\njsr     vi_ptr_file_used_plus_plus\n\n@not_0A:\n\n\n@do_not_move_twice:\n\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ntax\n;inx\nscroll up,,26 ; Because the second  arg is provided\n;jsr     vi_ypos_screen_sub_sub\n\n\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ntax\ninx\nlda     vi_ptr_file_used\nldy     vi_ptr_file_used+1\n\n\njsr     vi_compute_last_text_line\njsr     vi_fill_last_line\nrts\n\n@not_first_column:\ntay\njsr     vi_scroll_to_left\n\njsr     vi_xpos_screen_sub_sub\n\n@dec_ptr_and_move_file:\njsr     vi_remove_char_in_text_file\n\n@out:\nrts\n\n\n@remove_char_from_the_first_column:\n; For 0A\n\n\n; Editor management part\n\n; search the last char of the previous line to concat\n\nlda     vi_ptr_file_used\nldy     vi_ptr_file_used+1\n\njsr     vi_search_previous_cr ; Search the previous \\n\n\n; Don't put anything here, a and Y are kept for next vi_search_previous_cr\n\n\njsr     vi_search_previous_cr ; Search the first previous line \\n\n\nstx     vi_tmp3 ; Save the number of char found\n\njsr     vi_remove_char_in_text_file\n\n; For 0D\njsr     vi_remove_char_in_text_file\n\njsr     vi_ypos_screen_sub_sub\n\njsr     vi_compute_video_adress\n\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\n@L1:\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @exit\nldy     vi_tmp3\n\nsta     (vi_ptr_screen),y\n\ninc     vi_ptr_screen\nbne     @out_compare\ninc     vi_ptr_screen+1\n@out_compare:\n\n\ninc     vi_ptr1 ; 98\nbne     @out_compare2\ninc     vi_ptr1+1\n@out_compare2:\n\njmp     @L1\n\n\n@exit:\nlda     vi_tmp3\njsr     vi_set_xpos_from_A\n\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ntax\ninx\nscroll up,,26 ; Because the second empty arg is provided\n\nrts\n\n\n\n; And of previous empty line management\n\n@not_an_empty_line:\njsr     vi_ypos_screen_sub_sub\n\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ntax\n\nscroll up,,26 ; Because the second empty arg is provided\n\nrts\n\n\n.endproc\n\n.proc vi_remove_char_in_text_file\n; Remove a char in the text file in the current position\njsr     vi_ptr_file_used_sub_sub\njsr     vi_ptr_last_char_sub_sub\njsr     vi_decal_text_left_to_right\njsr     vi_length_file_sub_sub\nrts\n.endproc\n\n.proc   vi_decal_text_left_to_right\nlda     vi_ptr_file_used\nsta     vi_ptr1\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\n@restart:\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1\ncmp     vi_tmp1\nbne     @not_eof\n\nldy     #vi_struct_data::ptr_last_char_file+1\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1+1\ncmp     vi_tmp1\nbne     @not_eof\n\nldy     #$01\nlda     (vi_ptr1),y\ndey\nsta     (vi_ptr1),y\n\ninc     vi_ptr1\nbne     @out2\ninc     vi_ptr1+1\n@out2:\n\nrts\n\n\n@not_eof:\nldy     #$01\nlda     (vi_ptr1),y\ndey\nsta     (vi_ptr1),y\n\ninc     vi_ptr1\nbne     @out\ninc     vi_ptr1+1\n@out:\njmp     @restart\n\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__key__down_8s/","title":"vi_key_down.s","text":""},{"location":"tools_docs/vi/Files/vi__key__down_8s/#vi_key_downs","title":"vi_key_down.s","text":""},{"location":"tools_docs/vi/Files/vi__key__down_8s/#routine","title":"Routine","text":"Name vi_key_downKey down management."},{"location":"tools_docs/vi/Files/vi__key__down_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__key__down_8s/#routine-vi_key_down","title":"Routine vi_key_down","text":"<pre><code>vi_key_down\n</code></pre> <p>Key down management. </p> <p>[vi_strlen_current_line]</p>"},{"location":"tools_docs/vi/Files/vi__key__down_8s/#source-code","title":"Source code","text":"<pre><code>;; Key down management\n;\n;@link\n;vi_strlen_current_line\n;@endlink\n;;\n\n.proc vi_key_down\njsr     vi_editor_switch_off_cursor\n; Checking if we can go below\n\n; if eof then goto eof\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\n; x=0\njsr     vi_set_xpos_0\n\n; y++\njsr     vi_ypos_screen_plus_plus\n; Last line ?\ncmp     #IS_LAST_LINE_OF_SCREEN_TEXT\nbne     @continue_down\n\nscroll up, 0, 26            ; Yes scroll\n\n\n\n@search_eof:\nldx     #$00\n@L100:\n; ptr_file++\n\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @display_line\n\njsr     vi_vi_ptr_file_used_plus_plus\ninx\ncpx     #VI_EDITOR_MAX_COLUMN\nbeq     @display_line\njmp     @L100\n\n@eof:\n\nrts\n\n@display_line:\n\n@start_display_line:\niny\njsr     vi_check_0A\n\nlda     vi_ptr_file_used\nldy     vi_ptr_file_used+1\n\njsr     vi_fill_last_line   ; And displays the line\n\njsr     vi_check_0A\n\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\njsr     vi_check_if_previous_line_was_truncated\n\nrts\n@exit_display_line:\n\n@exit_near:\nrts\n\n@continue_down:\nldx     #$00\n@L1:\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @found_0D\n\n@not_eof2:\ninx\ncpx     #VI_EDITOR_MAX_COLUMN+1\nbne     @not_eol\njsr     vi_set_xpos_0\n\n; y++\njsr     vi_ypos_screen_plus_plus\nldx     #$00\n\n@not_eol:\njsr     vi_vi_ptr_file_used_plus_plus\njmp     @L1\n\n; Checking if eof\n\n@found_0D:\njsr     vi_vi_ptr_file_used_plus_plus\n\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbne     @S20\njsr     vi_vi_ptr_file_used_plus_plus\n\n@S20:\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbne     @not_eof\n\njsr     vi_vi_ptr_file_used_plus_plus\n\njmp     @S20\n\n@not_eof:\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ncmp     #$00\nbeq     @no_compute\ntax\n@add:\njsr     vi_vi_ptr_file_used_plus_plus\ndex\nbne     @add\n\n@no_compute:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__key__enter_8s/","title":"vi_key_enter.s","text":""},{"location":"tools_docs/vi/Files/vi__key__enter_8s/#vi_key_enters","title":"vi_key_enter.s","text":""},{"location":"tools_docs/vi/Files/vi__key__enter_8s/#routine","title":"Routine","text":"Name vi_key_enter"},{"location":"tools_docs/vi/Files/vi__key__enter_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__key__enter_8s/#routine-vi_key_enter","title":"Routine vi_key_enter","text":"<pre><code>vi_key_enter\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__enter_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_key_enter\n\njsr     vi_editor_switch_off_cursor\n\nlda     #CR\njsr     vi_add_char_to_text\n\nlda     #LF\njsr     vi_add_char_to_text\n\n; Are we on the last\n; if xpos==0 then goto @check_others_cases\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\nbne     @check_others_cases\n\n; if ypos==VI_LAST_LINE_EDITOR then goto @scroll_last_line\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ncmp     #VI_LAST_LINE_EDITOR\nbeq     @scroll_last_line\ntax\nscroll down,,26 ; Because the second empty arg is provided\njsr     vi_ypos_screen_plus_plus\nrts\n@scroll_last_line:\nscroll up,0,25 ; Because the second empty arg is provided\nrts\n\n@check_others_cases:\n; if ypos &lt; VI_LAST_LINE_EDITOR then goto @scroll_for_insert\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ncmp     #VI_LAST_LINE_EDITOR\nbne     @scroll_for_insert\n\n; else scrollup(0,26);\nscroll up,0,26\n\njmp     @continue\n\n@scroll_for_insert:\n\nsta     vi_tmp1\n; if posx=0 then goto @we_are_at_pos_0 (scroll)\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\nbne     @we_are_at_pos_0\n\n; first_line_to_scroll++;\ninc     vi_tmp1\n\n; if (ypos&gt;26) then goto @last_line_case_scroll\njsr     vi_ypos_screen_plus_plus\ncmp     #$00\nbne     @last_line_case_scroll\njsr     vi_set_xpos_0\nrts\n@we_are_at_pos_0:\n; scrolldown(first_line_to_scroll,26)\nldx     vi_tmp1\ninx\nscroll down,,26 ; Because the second empty arg is provided\n; Now copy the current line\njsr     vi_ypos_screen_plus_plus\njsr     vi_compute_video_adress\n\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\n@L1:\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @exit\nsta     (vi_ptr_screen),y\n\nsty     vi_tmp2\n\ninc     vi_ptr_screen ; 98\nbne     @out_compare\ninc     vi_ptr_screen+1\n@out_compare:\n\n\ninc     vi_ptr1 ; 98\nbne     @out_compare2\ninc     vi_ptr1+1\n@out_compare2:\n\n\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1\ncmp     vi_tmp1\nbne     @not_eof\n\nldy     #vi_struct_data::ptr_last_char_file+1\nlda     (vi_struct),y\nsta     vi_tmp1\n\nlda     vi_ptr1+1\ncmp     vi_tmp1\nbne     @not_eof\nbeq     @eof\n\n@not_eof:\n\njmp     @L1\n\n@eof:\n@exit:\n;       Now we erase the char on the previous line\n\njsr     vi_ypos_screen_sub_sub\n\njsr     vi_compute_video_adress\n\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntay\n\nlda     #$00\n@L2:\nsta     (vi_ptr_screen),y\niny\ncpy     #VI_EDITOR_MAX_COLUMN\nbne     @L2\n\njsr     vi_ypos_screen_plus_plus\n\njsr     vi_set_xpos_0\nrts\n\n@continue:\njsr     vi_set_xpos_0\njsr     vi_ypos_screen_plus_plus\nrts\n@last_line_case_scroll:\n;FIXME\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__key__left_8s/","title":"vi_key_left.s","text":""},{"location":"tools_docs/vi/Files/vi__key__left_8s/#vi_key_lefts","title":"vi_key_left.s","text":""},{"location":"tools_docs/vi/Files/vi__key__left_8s/#routine","title":"Routine","text":"Name vi_key_left"},{"location":"tools_docs/vi/Files/vi__key__left_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__key__left_8s/#routine-vi_key_left","title":"Routine vi_key_left","text":"<pre><code>vi_key_left\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__left_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_key_left\njsr     vi_editor_switch_off_cursor\n\njsr     vi_xpos_screen_sub_sub\ncmp     #IS_BEGINNING_OF_THE_LINE\nbeq     @exit_and_check ; x_equal_to_zero\n\njsr     vi_ptr_file_used_sub_sub\n\n@exit:\nrts\n\n@exit_and_check:\n\n; At this step we are on the column 0 (xpos=0)\n\njsr     vi_check_beginning_of_file\ncmp     #$00\nbeq     @exit\n\n; Check if the previous char is a crlf\n\n\n; if posfile[vi_ptr_file_used]=$0A goto @exit_add\njsr     vi_ptr_file_used_sub_sub\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbeq     @exit_add   ; LF exit\n\n; if posfile[vi_ptr_file_used]=$0D goto @exit_add\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @exit_add ; CR ?exit\n\njsr     vi_ypos_screen_sub_sub\n\nldy     #vi_struct_data::xpos_screen\nlda     #VI_EDITOR_MAX_COLUMN\nsta     (vi_struct),y\n\nrts\n@exit_add:\njsr     vi_ptr_file_used_plus_plus\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__key__right_8s/","title":"vi_key_right.s","text":""},{"location":"tools_docs/vi/Files/vi__key__right_8s/#vi_key_rights","title":"vi_key_right.s","text":""},{"location":"tools_docs/vi/Files/vi__key__right_8s/#routine","title":"Routine","text":"Name vi_key_right"},{"location":"tools_docs/vi/Files/vi__key__right_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__key__right_8s/#routine-vi_key_right","title":"Routine vi_key_right","text":"<pre><code>vi_key_right\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__right_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_key_right\n\n; are we  on the end of the text file ?\n\n; Compute if we need to erase ~\njsr     vi_check_eof\ncmp     #IS_EOF\nbne     @not_eof\nrts\n\n@not_eof:\njsr     vi_editor_switch_off_cursor\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @no_add_x\ncmp     #LF\nbeq     @no_add_x\n\njsr     vi_ptr_file_used_plus_plus\njsr     vi_xpos_screen_plus_plus\ncmp     #$01\nbne     @no_add_x\n\njsr     vi_set_xpos_0\njsr     vi_ypos_screen_plus_plus\ncmp     #$01\nbne     @no_add_x\n\nscroll up, 0, 26            ; Yes scroll\n\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\nlda     vi_ptr1\nbne     @S1\ndec     vi_ptr1+1\n@S1:\ndec     vi_ptr1\n\n\nlda     vi_ptr1\nldy     vi_ptr1+1\njsr     vi_fill_last_line\n@no_add_x:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__key__up_8s/","title":"vi_key_up.s","text":""},{"location":"tools_docs/vi/Files/vi__key__up_8s/#vi_key_ups","title":"vi_key_up.s","text":""},{"location":"tools_docs/vi/Files/vi__key__up_8s/#routine","title":"Routine","text":"Name vi_key_up"},{"location":"tools_docs/vi/Files/vi__key__up_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__key__up_8s/#routine-vi_key_up","title":"Routine vi_key_up","text":"<pre><code>vi_key_up\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__key__up_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_key_up\n; Debut du fichier ? On sort\njsr     vi_check_beginning_of_file\ncmp     #IS_BEGINNING_OF_THE_FILE\nbeq     @stop_shorter\n\n; On eteint le curseur\njsr     vi_editor_switch_off_cursor\n\n; On force \u00e0 revenir \u00e0 la position X=0 de la ligne pr\u00e9c\u00e9cente : FIXME\njsr     vi_set_xpos_0\n\n@continue_up:\n; Checking if previous char is not $0A or $0D if it's not the case, it's on a truncated line\n\n; On va voir si la pr\u00e9dente ligne c'est une fin de ligne ou pas\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\nlda     vi_ptr1 ; 98     ; On d\u00e9cr\u00e9mente la copie de ptr_file_used pour lire le caract\u00e8re pr\u00e9c\u00e9dent\nbne     @out_compare\ndec     vi_ptr1+1\n@out_compare:\ndec     vi_ptr1\n\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #LF\nbeq     @search_previous_line\n\n;ldy     #$00\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @search_previous_line\n\nlda     vi_ptr1 ; 98\nbne     @out_compare2\ndec     vi_ptr1+1\n@out_compare2:\ndec     vi_ptr1\n\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @search_previous_line\n\n; Check if the\n\njsr     vi_ypos_screen_sub_sub\n\n\njsr     vi_search_previous_line_beginning ; Looking for previous line ($0D detection)\n\n\njsr     vi_ptr_file_used_sub_sub            ; Skip $0D\n\ncpx     #VI_EDITOR_MAX_COLUMN+1\nbcc     @skip_y_plusplus\n\njsr     vi_ypos_screen_sub_sub\n\n@skip_y_plusplus:\n\njsr     vi_search_previous_line_beginning ; Looking for previous line ($0D detection)\n\njsr     vi_ptr_file_used_plus_plus\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbne     @S10\njsr     vi_ptr_file_used_plus_plus\n@S10:\n\n\n@stop_shorter:\nrts\n\n\n@search_previous_line:\njsr     vi_search_previous_line_beginning ; Looking for previous line ($0D detection)\ncmp     #$00\nbeq     @exit\n\njsr     vi_search_previous_line_beginning\ncmp     #$00\nbeq     @exit\n\ncpx     #VI_EDITOR_MAX_COLUMN\nbcc     @no_line_greater_than_39_chars\n\n\njsr     vi_ptr_file_used_plus_plus\n\nldx     #$00\n@looking_for_truncated_line:\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @finished\ncmp     #LF\nbeq     @skip_inx\ninx\n@skip_inx:\njsr     vi_ptr_file_used_plus_plus\n\ncpx     #VI_EDITOR_MAX_COLUMN+1\nbne     @looking_for_truncated_line\nldx     #$00\nbeq     @looking_for_truncated_line\n\n@finished:\njsr     vi_ypos_screen_sub_sub\n\ntxa\njsr     vi_set_xpos_from_A\nrts\n\n@no_line_greater_than_39_chars:\njsr     vi_ptr_file_used_plus_plus\n\nldy     #$00\njsr     vi_check_0A\n\n@exit:\n; Check if posx=0 and not the beginning of the file\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\nbne     @stop\n\nscroll down, 0, 26\n\nldx     #$01\nstx     vi_savex\n\nldx     vi_savex\ncpx     #$00\nbeq     @stop\n\nldy     #$00\n@L1:\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @stop\nsta     VI_EDITION_VIDEO_ADRESS,y\niny\ncpy     #VI_EDITOR_MAX_COLUMN\nbeq     @stop\nbne     @L1\n\n@stop:\njsr     vi_ypos_screen_sub_sub\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__length__file__plus__plus_8s/","title":"vi_length_file_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__length__file__plus__plus_8s/#vi_length_file_plus_pluss","title":"vi_length_file_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__length__file__plus__plus_8s/#routine","title":"Routine","text":"Name vi_length_file_plus_plus"},{"location":"tools_docs/vi/Files/vi__length__file__plus__plus_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__length__file__plus__plus_8s/#routine-vi_length_file_plus_plus","title":"Routine vi_length_file_plus_plus","text":"<pre><code>vi_length_file_plus_plus\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__length__file__plus__plus_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_length_file_plus_plus\n; add length_file=length_file+1\ninc     vi_length_file\nbne     @S1\ninc     vi_length_file+1\n\n@S1:\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__length__file__sub__sub_8s/","title":"vi_length_file_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__length__file__sub__sub_8s/#vi_length_file_sub_subs","title":"vi_length_file_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__length__file__sub__sub_8s/#routine","title":"Routine","text":"Name vi_length_file_sub_sub"},{"location":"tools_docs/vi/Files/vi__length__file__sub__sub_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__length__file__sub__sub_8s/#routine-vi_length_file_sub_sub","title":"Routine vi_length_file_sub_sub","text":"<pre><code>vi_length_file_sub_sub\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__length__file__sub__sub_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_length_file_sub_sub\n; add length_file=length_file--\nlda     vi_length_file\nbne     @out\ndec     vi_length_file+1\n\n@out:\ndec     vi_length_file\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus_8s/","title":"vi_ptr_file_used_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus_8s/#vi_ptr_file_used_plus_pluss","title":"vi_ptr_file_used_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus_8s/#routine","title":"Routine","text":"Name vi_ptr_file_used_plus_plus"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus_8s/#routine-vi_ptr_file_used_plus_plus","title":"Routine vi_ptr_file_used_plus_plus","text":"<pre><code>vi_ptr_file_used_plus_plus\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus_8s/#source-code","title":"Source code","text":"<pre><code>.proc  vi_ptr_file_used_plus_plus\ninc     vi_ptr_file_used\nbne     @out\ninc     vi_ptr_file_used+1\n@out:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus__and__check__eof_8s/","title":"vi_ptr_file_used_plus_plus_and_check_eof.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus__and__check__eof_8s/#vi_ptr_file_used_plus_plus_and_check_eofs","title":"vi_ptr_file_used_plus_plus_and_check_eof.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus__and__check__eof_8s/#routine","title":"Routine","text":"Name vi_ptr_file_used_plus_plus_and_check_eof"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus__and__check__eof_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus__and__check__eof_8s/#routine-vi_ptr_file_used_plus_plus_and_check_eof","title":"Routine vi_ptr_file_used_plus_plus_and_check_eof","text":"<pre><code>vi_ptr_file_used_plus_plus_and_check_eof\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__plus__plus__and__check__eof_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_ptr_file_used_plus_plus_and_check_eof\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__sub__sub_8s/","title":"vi_ptr_file_used_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__sub__sub_8s/#vi_ptr_file_used_sub_subs","title":"vi_ptr_file_used_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__sub__sub_8s/#routine","title":"Routine","text":"Name vi_ptr_file_used_sub_sub"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__sub__sub_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ptr__file__used__sub__sub_8s/#routine-vi_ptr_file_used_sub_sub","title":"Routine vi_ptr_file_used_sub_sub","text":"<pre><code>vi_ptr_file_used_sub_sub\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__ptr__file__used__sub__sub_8s/#source-code","title":"Source code","text":"<pre><code>.proc  vi_ptr_file_used_sub_sub\n\njsr     vi_check_beginning_of_file\ncmp     #IS_BEGINNING_OF_THE_FILE\nbeq     @beginning_of_file\n\nlda     vi_ptr_file_used ; 98\nbne     @out\ndec     vi_ptr_file_used+1\n@out:\ndec     vi_ptr_file_used\nlda     #$01\nrts\n\n@beginning_of_file:\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__add_8s/","title":"vi_ptr_last_char_add.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__add_8s/#vi_ptr_last_char_adds","title":"vi_ptr_last_char_add.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__add_8s/#routine","title":"Routine","text":"Name vi_ptr_last_char_add"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__add_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__add_8s/#routine-vi_ptr_last_char_add","title":"Routine vi_ptr_last_char_add","text":"<pre><code>vi_ptr_last_char_add\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__add_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_ptr_last_char_add\n\n; A and X the value to add\npha\ntxa\nldy     #vi_struct_data::ptr_last_char_file+1 ; 3737\nclc\nadc     (vi_struct),y\nsta     (vi_struct),y\npla\n\nldy     #vi_struct_data::ptr_last_char_file\n\nsec\nsbc     #$01\n\nclc\nadc     (vi_struct),y\n\nbcc     @do_not_inc_ptr_last_char\npha\niny\nlda     (vi_struct),y\nclc\nadc     #$01\nsta     (vi_struct),y\ndey\npla\n\n@do_not_inc_ptr_last_char:\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__plus__plus_8s/","title":"vi_ptr_last_char_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__plus__plus_8s/#vi_ptr_last_char_plus_pluss","title":"vi_ptr_last_char_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__plus__plus_8s/#routine","title":"Routine","text":"Name vi_ptr_last_char_plus_plus"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__plus__plus_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__plus__plus_8s/#routine-vi_ptr_last_char_plus_plus","title":"Routine vi_ptr_last_char_plus_plus","text":"<pre><code>vi_ptr_last_char_plus_plus\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__plus__plus_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_ptr_last_char_plus_plus\n\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nclc\nadc     #$01\nbcc     @S1\npha\niny\nlda     (vi_struct),y\nclc\nadc     #$01\nsta     (vi_struct),y\ndey\npla\n@S1:\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__sub__sub_8s/","title":"vi_ptr_last_char_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__sub__sub_8s/#vi_ptr_last_char_sub_subs","title":"vi_ptr_last_char_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__sub__sub_8s/#routine","title":"Routine","text":"Name vi_ptr_last_char_sub_sub"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__sub__sub_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ptr__last__char__sub__sub_8s/#routine-vi_ptr_last_char_sub_sub","title":"Routine vi_ptr_last_char_sub_sub","text":"<pre><code>vi_ptr_last_char_sub_sub\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__ptr__last__char__sub__sub_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_ptr_last_char_sub_sub\nldy     #vi_struct_data::ptr_last_char_file\niny\nlda     (vi_struct),y\nbne     @dec\nsec\nsbc     #$01\nsta     (vi_struct),y\n\n@dec:\ndey\nlda     (vi_struct),y\nsec\nsbc     #$01\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__put__char_8s/","title":"/Routines/vi_put_char.s","text":""},{"location":"tools_docs/vi/Files/vi__put__char_8s/#routinesvi_put_chars","title":"/Routines/vi_put_char.s","text":""},{"location":"tools_docs/vi/Files/vi__put__char_8s/#routine","title":"Routine","text":"Name vi_put_char"},{"location":"tools_docs/vi/Files/vi__put__char_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__put__char_8s/#routine-vi_put_char","title":"Routine vi_put_char","text":"<pre><code>vi_put_char\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__put__char_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_put_char\n\ncmp     #$0A\nbeq     exit\n\ncmp     #$0D\nbeq     @return_line\n\npha\n\njsr     vi_compute_video_adress\n\n\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ncmp     #40\nbne     @not_eol_onscreen\n\njsr     vi_ypos_screen_plus_plus\njsr     vi_compute_video_adress\nldy     #vi_struct_data::xpos_screen\nlda     #$00\nsta     (vi_struct),y\n\n\n@not_eol_onscreen:\ntay\npla\n\nsta     (vi_ptr_screen),y\niny\nbne     @do_not_inc_y\n\n@do_not_inc_y:\ntya\nldy     #vi_struct_data::xpos_screen\nsta     (vi_struct),y\n\nrts\n\n@return_line:\nlda     #$00\nldy     #vi_struct_data::xpos_screen\nsta     (vi_struct),y\n\nldy     #vi_struct_data::file_number_of_line\nlda     (vi_struct),y\nclc\nadc     #$01\nsta     (vi_struct),y\n\n\njsr     vi_ypos_screen_plus_plus\n\nrts\nexit:\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__scroll__from__left__to__right__full__line_8s/","title":"vi_scroll_from_left_to_right_full_line.s","text":""},{"location":"tools_docs/vi/Files/vi__scroll__from__left__to__right__full__line_8s/#vi_scroll_from_left_to_right_full_lines","title":"vi_scroll_from_left_to_right_full_line.s","text":""},{"location":"tools_docs/vi/Files/vi__scroll__from__left__to__right__full__line_8s/#routine","title":"Routine","text":"Name vi_scroll_from_left_to_right_full_line"},{"location":"tools_docs/vi/Files/vi__scroll__from__left__to__right__full__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__scroll__from__left__to__right__full__line_8s/#routine-vi_scroll_from_left_to_right_full_line","title":"Routine vi_scroll_from_left_to_right_full_line","text":"<pre><code>vi_scroll_from_left_to_right_full_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__scroll__from__left__to__right__full__line_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_scroll_from_left_to_right_full_line\n; Scroll une ligne Y\n; insert copy on screen\nldy     #vi_struct_data::xpos_screen    ; Get X position\nlda     (vi_struct),y                   ; get value\nsec\nsbc     #$01\nsta     vi_tmp1                         ; Save It\n\nlda     vi_ptr_file_used\nsta     vi_ptr1\n\nlda     vi_ptr_file_used+1\nsta     vi_ptr1+1\n\n; Compute number of char to scroll\n\n\nldy     #$00\nldx     #$00\n@compute:\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @end_compute\n\ninc     vi_ptr1\nbne     @S2\ninc     vi_ptr1+1\n@S2:\ninc     vi_ptr1\ninx\nbne     @compute\n\n@end_compute:\ntxa\ntay\n\nldy     #38\n@L2:\nlda     (vi_ptr_screen),y\niny\nsta     (vi_ptr_screen),y\ndey\ndey\ncpy     vi_tmp1\nbne     @L2\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__scroll__to__left_8s/","title":"vi_scroll_to_left.s","text":""},{"location":"tools_docs/vi/Files/vi__scroll__to__left_8s/#vi_scroll_to_lefts","title":"vi_scroll_to_left.s","text":""},{"location":"tools_docs/vi/Files/vi__scroll__to__left_8s/#routine","title":"Routine","text":"Name vi_scroll_to_left"},{"location":"tools_docs/vi/Files/vi__scroll__to__left_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__scroll__to__left_8s/#routine-vi_scroll_to_left","title":"Routine vi_scroll_to_left","text":"<pre><code>vi_scroll_to_left\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__scroll__to__left_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_scroll_to_left\npha\n\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ntay\n@L3:\nlda     (vi_ptr_screen),y\ndey\nsta     (vi_ptr_screen),y\niny\niny\ncpy     #39\nbne     @L3\npla\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__search__next__line_8s/","title":"vi_search_next_line.s","text":""},{"location":"tools_docs/vi/Files/vi__search__next__line_8s/#vi_search_next_lines","title":"vi_search_next_line.s","text":""},{"location":"tools_docs/vi/Files/vi__search__next__line_8s/#routine","title":"Routine","text":"Name vi_search_next_line"},{"location":"tools_docs/vi/Files/vi__search__next__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__search__next__line_8s/#routine-vi_search_next_line","title":"Routine vi_search_next_line","text":"<pre><code>vi_search_next_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__search__next__line_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_search_next_line\n; vi_ptr_file_used is on $0D\n; and the exit of the subroutine must be :\n; -last char\n\nlda     #$00\nsta     vi_tmp2     ; Contains the number of line when max number of_column has reached\n\n\n; jsr     vi_check_eof\n; cmp     #IS_EOF\n; beq     @eof\n\n; ; The current line is empty               : *$0D*, $0A, 'T',$0D, 0A\n; ; The current line is chars               : *$0D*, $0A, 'T',$0D, 0A\n; ; The current line is the end of the file : *$0D*, $0A\n; ; The current line is the end of the file : *'T'*\n; jsr     vi_ptr_file_used_plus_plus\n\n; ; The current line is empty               : $0D, *$0A*, 'T',$0D, 0A\n; ; The current line is chars               : $0D, *$0A*, 'T',$0D, 0A\n; ; The current line is the end of the file : $0D, *$0A*\n; ; The current line is the end of the file : 'T' ** err\n\n; jsr     vi_check_eof\n; cmp     #IS_EOF\n; beq     @eof\n\n\n; ldy     #$00\n; lda     (vi_ptr_file_used),y\n; cmp     #LF\n; bne     @continue\n\n; jsr     vi_ptr_file_used_plus_plus\n\n; jsr     vi_check_eof\n; cmp     #IS_EOF\n; beq     @eof\n\nldx     #$00\n@continue:\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @first_char_found\n\njsr     vi_ptr_file_used_plus_plus\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\ninx\ncpx     #VI_EDITOR_MAX_COLUMN\nbne     @continue\ninc     vi_tmp2\nldx     #$00\n\njmp     @continue\n\n\n@eof:\n; A=IS_EOF\nrts\n@first_char_found:\njsr     vi_ptr_file_used_plus_plus\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #LF\nbne     @exit\n\njsr     vi_ptr_file_used_plus_plus\njsr     vi_check_eof\ncmp     #IS_EOF\nbeq     @eof\n\n@exit:\nlda     #$01\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__search__previous__cr_8s/","title":"vi_search_previous_cr.s","text":""},{"location":"tools_docs/vi/Files/vi__search__previous__cr_8s/#vi_search_previous_crs","title":"vi_search_previous_cr.s","text":""},{"location":"tools_docs/vi/Files/vi__search__previous__cr_8s/#routine","title":"Routine","text":"Name vi_search_previous_cr"},{"location":"tools_docs/vi/Files/vi__search__previous__cr_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__search__previous__cr_8s/#routine-vi_search_previous_cr","title":"Routine vi_search_previous_cr","text":"<pre><code>vi_search_previous_cr\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__search__previous__cr_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_search_previous_cr\n; Cherche le pr\u00e9c\u00e9dent \\n\n; retourne dans A et Y la position en ptr\n; Si on est en d\u00e9but de fichier A et Y = $0000\n; retourne dans X le nombre de char trouv\u00e9s entre le $0D et le 1er char de la ligne pr\u00e9c\u00e9dnte ligne\n\nsta     vi_ptr1\nsty     vi_ptr1+1\n\nldx     #$00\n@L1:\nldy     #$00\nlda     (vi_ptr1),y\ncmp     #CR\nbeq     @exit\ncmp     #LF\nbeq     @no_inc\n\ninx\n\n@no_inc:\nlda     vi_ptr1\nbne     @S1\ndec     vi_ptr1+1\n@S1:\ndec     vi_ptr1\n\nlda     vi_ptr1\ncmp     vi_ptr_file\nbne     @not_beginning\n\nlda     vi_ptr1+1\ncmp     vi_ptr_file+1\nbne     @not_beginning\n\n@exit_beginning_of_the_file_is_reached:\ninx\nlda     #$00\nldy     #$00\nrts\n\n@not_beginning:\njmp     @L1\n\n@exit:\n\n\nlda     vi_ptr1\nbne     @S2\ndec     vi_ptr1+1\n@S2:\ndec     vi_ptr1\n\nlda     vi_ptr1\ncmp     vi_ptr_file\nbne     @not_beginning2\n\nlda     vi_ptr1+1\ncmp     vi_ptr_file+1\nbne     @not_beginning2\nbeq     @exit_beginning_of_the_file_is_reached\n\n@not_beginning2:\nlda     vi_ptr1\nldy     vi_ptr1+1\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__search__previous__line__beginning_8s/","title":"vi_search_previous_line_beginning.s","text":""},{"location":"tools_docs/vi/Files/vi__search__previous__line__beginning_8s/#vi_search_previous_line_beginnings","title":"vi_search_previous_line_beginning.s","text":""},{"location":"tools_docs/vi/Files/vi__search__previous__line__beginning_8s/#routine","title":"Routine","text":"Name vi_search_previous_line_beginning"},{"location":"tools_docs/vi/Files/vi__search__previous__line__beginning_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__search__previous__line__beginning_8s/#routine-vi_search_previous_line_beginning","title":"Routine vi_search_previous_line_beginning","text":"<pre><code>vi_search_previous_line_beginning\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__search__previous__line__beginning_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_search_previous_line_beginning\n; A = 1 found $0D\n; A = 0 find beginning\n; X contains the number of char parsed\nldx     #$00\n\n@L1:\njsr     vi_ptr_file_used_sub_sub\ncmp     #IS_BEGINNING_OF_THE_FILE\nbeq     @beginning_of_file\n\nldy     #$00\nlda     (vi_ptr_file_used),y\ncmp     #CR\nbeq     @found_0D\ncmp     #LF\nbeq     @dex\ninx\nbne     @L1\n\n@dex:\njmp     @L1\n\n@found_0D:\nlda     #$01\nrts\n\n@beginning_of_file:\nlda     #$00\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__set__length__file_8s/","title":"/Routines/vi_set_length_file.s","text":""},{"location":"tools_docs/vi/Files/vi__set__length__file_8s/#routinesvi_set_length_files","title":"/Routines/vi_set_length_file.s","text":""},{"location":"tools_docs/vi/Files/vi__set__length__file_8s/#routine","title":"Routine","text":"Name vi_set_length_file"},{"location":"tools_docs/vi/Files/vi__set__length__file_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__set__length__file_8s/#routine-vi_set_length_file","title":"Routine vi_set_length_file","text":"<pre><code>vi_set_length_file\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__set__length__file_8s/#source-code","title":"Source code","text":"<pre><code>; A,X,Y RES contains the length\n\n.proc vi_set_length_file\n; set file length A and X contains the value\n\npha\njsr     populate_tmp0_16_with_ptr_length_file\npla\nldy     #$00\nsta     (tmp0_16),y\ntxa\niny\nsta     (tmp0_16),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__set__ptr__last__char_8s/","title":"vi_set_ptr_last_char.s","text":""},{"location":"tools_docs/vi/Files/vi__set__ptr__last__char_8s/#vi_set_ptr_last_chars","title":"vi_set_ptr_last_char.s","text":""},{"location":"tools_docs/vi/Files/vi__set__ptr__last__char_8s/#routine","title":"Routine","text":"Name vi_set_ptr_last_char"},{"location":"tools_docs/vi/Files/vi__set__ptr__last__char_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__set__ptr__last__char_8s/#routine-vi_set_ptr_last_char","title":"Routine vi_set_ptr_last_char","text":"<pre><code>vi_set_ptr_last_char\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__set__ptr__last__char_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_set_ptr_last_char\n; A and X contains the last char ptr\n\nldy     #vi_struct_data::ptr_last_char_file\nsta     (vi_struct),y\ntxa\niny\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__set__xpos__0_8s/","title":"vi_set_xpos_0.s","text":""},{"location":"tools_docs/vi/Files/vi__set__xpos__0_8s/#vi_set_xpos_0s","title":"vi_set_xpos_0.s","text":""},{"location":"tools_docs/vi/Files/vi__set__xpos__0_8s/#routine","title":"Routine","text":"Name vi_set_xpos_0"},{"location":"tools_docs/vi/Files/vi__set__xpos__0_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__set__xpos__0_8s/#routine-vi_set_xpos_0","title":"Routine vi_set_xpos_0","text":"<pre><code>vi_set_xpos_0\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__set__xpos__0_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_set_xpos_0\nldy     #vi_struct_data::xpos_screen\nlda     #$00\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__set__xpos__from__A_8s/","title":"vi_set_xpos_from_A.s","text":""},{"location":"tools_docs/vi/Files/vi__set__xpos__from__A_8s/#vi_set_xpos_from_as","title":"vi_set_xpos_from_A.s","text":""},{"location":"tools_docs/vi/Files/vi__set__xpos__from__A_8s/#routine","title":"Routine","text":"Name vi_set_xpos_from_A"},{"location":"tools_docs/vi/Files/vi__set__xpos__from__A_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__set__xpos__from__A_8s/#routine-vi_set_xpos_from_a","title":"Routine vi_set_xpos_from_A","text":"<pre><code>vi_set_xpos_from_A\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__set__xpos__from__A_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_set_xpos_from_A\nldy     #vi_struct_data::xpos_screen\nsta     (vi_struct),y\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__shift__file__from__memory__one__char_8s/","title":"vi_shift_file_from_memory_one_char.s","text":""},{"location":"tools_docs/vi/Files/vi__shift__file__from__memory__one__char_8s/#vi_shift_file_from_memory_one_chars","title":"vi_shift_file_from_memory_one_char.s","text":""},{"location":"tools_docs/vi/Files/vi__shift__file__from__memory__one__char_8s/#routine","title":"Routine","text":"Name vi_shift_file_from_memory_one_char"},{"location":"tools_docs/vi/Files/vi__shift__file__from__memory__one__char_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__shift__file__from__memory__one__char_8s/#routine-vi_shift_file_from_memory_one_char","title":"Routine vi_shift_file_from_memory_one_char","text":"<pre><code>vi_shift_file_from_memory_one_char\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__shift__file__from__memory__one__char_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_shift_file_from_memory_one_char\n\nldy     #vi_struct_data::ptr_last_char_file\nlda     (vi_struct),y\nsta     vi_ptr1 ; A4 A0 39\niny\nlda     (vi_struct),y\nsta     vi_ptr1+1 ; 3A 3A 08\n\n@copy_char_routine:\nldy     #$00\n\nlda     (vi_ptr1),y\niny\nsta     (vi_ptr1),y\n\nlda     vi_ptr1\nbne     @S1\ndec     vi_ptr1+1\n@S1:\ndec     vi_ptr1\n\n\n@L1:\nlda     vi_ptr1\ncmp     vi_ptr_file_used\nbne     @copy_char_routine\n\nlda     vi_ptr1+1\ncmp     vi_ptr_file_used+1\nbne     @copy_char_routine\n\nldy     #$00\n\nlda     (vi_ptr1),y\niny\nsta     (vi_ptr1),y\n\nrts\n\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__shift__line__left__to__right__editor_8s/","title":"vi_shift_line_left_to_right_editor.s","text":""},{"location":"tools_docs/vi/Files/vi__shift__line__left__to__right__editor_8s/#vi_shift_line_left_to_right_editors","title":"vi_shift_line_left_to_right_editor.s","text":""},{"location":"tools_docs/vi/Files/vi__shift__line__left__to__right__editor_8s/#routine","title":"Routine","text":"Name vi_shift_line_left_to_right_editor"},{"location":"tools_docs/vi/Files/vi__shift__line__left__to__right__editor_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__shift__line__left__to__right__editor_8s/#routine-vi_shift_line_left_to_right_editor","title":"Routine vi_shift_line_left_to_right_editor","text":"<pre><code>vi_shift_line_left_to_right_editor\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__shift__line__left__to__right__editor_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_shift_line_left_to_right_editor\n; A the line to scroll\n\ntay\nlda     TABLE_LOW_TEXT,y\nsta     vi_ptr1\nlda     TABLE_HIGH_TEXT,y\nsta     vi_ptr1+1\n\n\nldy     #38\n@L1:\nlda     (vi_ptr1),y\niny\nsta     (vi_ptr1),y\ndey\ndey\nbpl     @L1\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__strlen__current__line_8s/","title":"vi_strlen_current_line.s","text":""},{"location":"tools_docs/vi/Files/vi__strlen__current__line_8s/#vi_strlen_current_lines","title":"vi_strlen_current_line.s","text":""},{"location":"tools_docs/vi/Files/vi__strlen__current__line_8s/#routine","title":"Routine","text":"Name vi_strlen_current_line"},{"location":"tools_docs/vi/Files/vi__strlen__current__line_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__strlen__current__line_8s/#routine-vi_strlen_current_line","title":"Routine vi_strlen_current_line","text":"<pre><code>vi_strlen_current_line\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__strlen__current__line_8s/#source-code","title":"Source code","text":"<pre><code>;; strlen of a line\n;\n;@param  A&amp;Y : ptr of the position\n;@return X : the length of the line\n;@return A &amp; Y : the ptr reached\n;@see     vi_struct\n;\n;@example This routine compute ...\n;@page strlen\n;;\n\n.proc vi_strlen_current_line\n\n; Returns in A and Y the ptr of the beginning of the line\n; Returns in X the length of the line\n\nsta     vi_ptr2\nsty     vi_ptr2+1\n\n; Looking for the beginning of the line\n\nldy     #$00\nlda     (vi_ptr2),y\ncmp     #CR\nbne     @search_beginning_of_the_line\n\nlda     vi_ptr2 ; 98\nbne     @out_compare2\ndec     vi_ptr2+1\n@out_compare2:\ndec     vi_ptr2\n\n\n@search_beginning_of_the_line:\n; Check beginning\n\nlda     vi_ptr2\ncmp     vi_ptr_file\nbne     @not_beginning\n\nlda     vi_ptr2+1\ncmp     vi_ptr_file+1\nbne     @not_beginning\n\nlda     vi_ptr2\nldy     vi_ptr2+1\nldx     #$00\n\nrts\n\n@not_beginning:\nldy     #$00\nlda     (vi_ptr2),y\ncmp     #LF\nbeq     @found_beginning\ncmp     #CR\nbeq     @found_beginning\n\nlda     vi_ptr2 ; 98\nbne     @out_compare\ndec     vi_ptr2+1\n@out_compare:\ndec     vi_ptr2\njmp     @search_beginning_of_the_line\n\n@found_beginning:\ninc     vi_ptr2\nbne     @no_inc\ninc     vi_ptr2+1\n@no_inc:\n; At this step we are at the beginning of the line\n; search now the end of the line\n\n\nldx     #$00\n\nldy     #$00\n@search_eol:\n\nlda     (vi_ptr2),y\ncmp     #CR\nbeq     @found_eol\n\n\niny\n\nbne     @search_eol\n\n@found_eol:\ntya\ntax\nlda     vi_ptr2\nldy     vi_ptr2+1\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__struct_8s/","title":"/Routines/vi_struct.s","text":""},{"location":"tools_docs/vi/Files/vi__struct_8s/#routinesvi_structs","title":"/Routines/vi_struct.s","text":""},{"location":"tools_docs/vi/Files/vi__struct_8s/#classes","title":"Classes","text":"Name struct vi_struct_data"},{"location":"tools_docs/vi/Files/vi__struct_8s/#defines","title":"Defines","text":"Name VI_MAX_LENGTH_FILENAME"},{"location":"tools_docs/vi/Files/vi__struct_8s/#macros-documentation","title":"Macros Documentation","text":""},{"location":"tools_docs/vi/Files/vi__struct_8s/#define-vi_max_length_filename","title":"define VI_MAX_LENGTH_FILENAME","text":"<pre><code>#define VI_MAX_LENGTH_FILENAME 16\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__struct_8s/#source-code","title":"Source code","text":"<pre><code>.define VI_MAX_LENGTH_FILENAME 16\n\n.struct vi_struct_data\nxpos_screen           .byte    ; position x of the cursor on the screen\nypos_screen           .byte    ; position y of the cursor on the screen\npos_file_addr         .word   ; position on the file (address)\npos_file              .res 4   ; position in the file\nposx_command_line     .byte    ; position on command line\nname_file_open        .res     VI_MAX_LENGTH_FILENAME\n;ptr_file_begin   .word    ; adress of the beginning of the file\nlength_file           .res 4   ; Length of the file\npos_ptr_video_address .word\nfile_number_of_line   .res 4\nxpos_command_line     .byte\ncommand_line_buffer   .res 39\nptr_last_char_file    .word\nline_id               .word\nxpos_text             .byte\nypos_text             .byte\n.endstruct\n\n.if     .sizeof(vi_struct_data) &gt; 255\n.error  \"vi_struct_data size is greater than 255. It's impossible because code does not handle a struct greater than 255\"\n.endif\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__switch__to__edition__mode_8s/","title":"/Routines/vi_switch_to_edition_mode.s","text":""},{"location":"tools_docs/vi/Files/vi__switch__to__edition__mode_8s/#routinesvi_switch_to_edition_modes","title":"/Routines/vi_switch_to_edition_mode.s","text":""},{"location":"tools_docs/vi/Files/vi__switch__to__edition__mode_8s/#routine","title":"Routine","text":"Name vi_switch_to_edition_mode"},{"location":"tools_docs/vi/Files/vi__switch__to__edition__mode_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__switch__to__edition__mode_8s/#routine-vi_switch_to_edition_mode","title":"Routine vi_switch_to_edition_mode","text":"<pre><code>vi_switch_to_edition_mode\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__switch__to__edition__mode_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_switch_to_edition_mode\n\n@loop:\n; Display debug\nldy    vi_pos_debug\njsr    displays_debug\n; end display debug\n\njsr     vi_compute_video_adress\njsr     vi_editor_switch_on_cursor\ncgetc\n\ncmp     #KEY_ESC\nbeq     @exit\n\ncmp     #KEY_UP\nbeq     @key_up\n\ncmp     #KEY_DEL\nbeq     @key_del\n\ncmp     #KEY_RETURN\nbeq     @key_enter\n\ncmp     #KEY_DOWN\nbeq     @key_down\n\ncmp     #KEY_RIGHT\nbeq     @key_right\n\ncmp     #KEY_LEFT\nbeq     @key_left\n\njsr     @display_char\njmp     @loop\n\n@exit:\nrts\n\n@key_right:\njsr     vi_key_right\njmp     @loop\n\n@key_left:\njsr     vi_key_left\njmp     @loop\n\n@key_up:\njsr     vi_key_up\njmp     @loop\n\n@key_del:\njsr     vi_manage_del\njmp     @loop\n\n@key_enter:\njsr     vi_key_enter\njmp     @loop\n\n@key_down:\njsr     vi_key_down\njmp     @loop\n\n@display_char:\njsr     vi_display_char\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__vi__ptr__file__used__plus__plus_8s/","title":"vi_vi_ptr_file_used_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__vi__ptr__file__used__plus__plus_8s/#vi_vi_ptr_file_used_plus_pluss","title":"vi_vi_ptr_file_used_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__vi__ptr__file__used__plus__plus_8s/#routine","title":"Routine","text":"Name vi_vi_ptr_file_used_plus_plus"},{"location":"tools_docs/vi/Files/vi__vi__ptr__file__used__plus__plus_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__vi__ptr__file__used__plus__plus_8s/#routine-vi_vi_ptr_file_used_plus_plus","title":"Routine vi_vi_ptr_file_used_plus_plus","text":"<pre><code>vi_vi_ptr_file_used_plus_plus\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__vi__ptr__file__used__plus__plus_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_vi_ptr_file_used_plus_plus\n; A the char to add\n; Insert into file (memory) char\ninc     vi_ptr_file_used\nbne     @no_inc\ninc     vi_ptr_file_used+1\n@no_inc:\n\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__xpos__screen__plus__plus_8s/","title":"vi_xpos_screen_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__xpos__screen__plus__plus_8s/#vi_xpos_screen_plus_pluss","title":"vi_xpos_screen_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__xpos__screen__plus__plus_8s/#routine","title":"Routine","text":"Name vi_xpos_screen_plus_plus"},{"location":"tools_docs/vi/Files/vi__xpos__screen__plus__plus_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__xpos__screen__plus__plus_8s/#routine-vi_xpos_screen_plus_plus","title":"Routine vi_xpos_screen_plus_plus","text":"<pre><code>vi_xpos_screen_plus_plus\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__xpos__screen__plus__plus_8s/#source-code","title":"Source code","text":"<pre><code>; Returns in A=1 if we reached the eol\n\n.proc vi_xpos_screen_plus_plus\n; ypos_screen=ypos_screen+1\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\ncmp     #VI_EDITOR_MAX_COLUMN\nbeq     @no_add\nclc\nadc     #$01\nsta     (vi_struct),y\nlda     #$00\nrts\n\n@no_add:\nlda     #$01\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__xpos__screen__sub__sub_8s/","title":"vi_xpos_screen_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__xpos__screen__sub__sub_8s/#vi_xpos_screen_sub_subs","title":"vi_xpos_screen_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__xpos__screen__sub__sub_8s/#routine","title":"Routine","text":"Name vi_xpos_screen_sub_sub"},{"location":"tools_docs/vi/Files/vi__xpos__screen__sub__sub_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__xpos__screen__sub__sub_8s/#routine-vi_xpos_screen_sub_sub","title":"Routine vi_xpos_screen_sub_sub","text":"<pre><code>vi_xpos_screen_sub_sub\n</code></pre>"},{"location":"tools_docs/vi/Files/vi__xpos__screen__sub__sub_8s/#source-code","title":"Source code","text":"<pre><code>.proc vi_xpos_screen_sub_sub\n;; vi_xpos_screen_sub_sub\n;; Return 00 if we are on the first line\n;; xpos_screen=ypos_screen+1\nldy     #vi_struct_data::xpos_screen\nlda     (vi_struct),y\nbeq     @no_substract\nsec\nsbc     #$01\nsta     (vi_struct),y\nlda     #$01\nrts\n@no_substract:\nlda     #IS_BEGINNING_OF_THE_LINE\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ypos__screen__plus__plus_8s/","title":"vi_ypos_screen_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__ypos__screen__plus__plus_8s/#vi_ypos_screen_plus_pluss","title":"vi_ypos_screen_plus_plus.s","text":""},{"location":"tools_docs/vi/Files/vi__ypos__screen__plus__plus_8s/#routine","title":"Routine","text":"Name vi_ypos_screen_plus_plusIncrement ypos and returns IS_LAST_LINE_OF_SCREEN_TEXT."},{"location":"tools_docs/vi/Files/vi__ypos__screen__plus__plus_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ypos__screen__plus__plus_8s/#routine-vi_ypos_screen_plus_plus","title":"Routine vi_ypos_screen_plus_plus","text":"<pre><code>vi_ypos_screen_plus_plus\n</code></pre> <p>Increment ypos and returns IS_LAST_LINE_OF_SCREEN_TEXT. </p> <p>See: vi_struct</p> <p>Return: A : IS_LAST_LINE_OF_SCREEN_TEXT if we are on the last line of the screen else $00 </p>"},{"location":"tools_docs/vi/Files/vi__ypos__screen__plus__plus_8s/#source-code","title":"Source code","text":"<pre><code>;; Increment ypos and returns IS_LAST_LINE_OF_SCREEN_TEXT\n;\n;@return A : IS_LAST_LINE_OF_SCREEN_TEXT if we are on the last line of the screen else $00\n;@see     vi_struct\n;;\n.proc vi_ypos_screen_plus_plus\n; ypos_screen=ypos_screen+1\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\ncmp     #VI_LAST_LINE_EDITOR\nbeq     @no_add\nclc\nadc     #$01\nsta     (vi_struct),y\nlda     #$00\nrts\n@no_add:\n;\nlda     #IS_LAST_LINE_OF_SCREEN_TEXT\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Files/vi__ypos__screen__sub__sub_8s/","title":"vi_ypos_screen_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__ypos__screen__sub__sub_8s/#vi_ypos_screen_sub_subs","title":"vi_ypos_screen_sub_sub.s","text":""},{"location":"tools_docs/vi/Files/vi__ypos__screen__sub__sub_8s/#routine","title":"Routine","text":"Name vi_ypos_screen_sub_subDecrement ypos."},{"location":"tools_docs/vi/Files/vi__ypos__screen__sub__sub_8s/#routine-documentation","title":"Routine documentation","text":""},{"location":"tools_docs/vi/Files/vi__ypos__screen__sub__sub_8s/#routine-vi_ypos_screen_sub_sub","title":"Routine vi_ypos_screen_sub_sub","text":"<pre><code>vi_ypos_screen_sub_sub\n</code></pre> <p>Decrement ypos. </p> <p>See: vi_struct</p> <p>Return: A : returns 1 if y=0 or A returns 0 if y!=0 </p>"},{"location":"tools_docs/vi/Files/vi__ypos__screen__sub__sub_8s/#source-code","title":"Source code","text":"<pre><code>;; Decrement ypos\n;\n;@return A : returns 1 if y=0 or A returns 0 if y!=0\n;@see     vi_struct\n;\n;;\n.proc vi_ypos_screen_sub_sub\n; ypos_screen=ypos_screen-1\nldy     #vi_struct_data::ypos_screen\nlda     (vi_struct),y\nbeq     @no_substract\nsec\nsbc     #$01\n\nsta     (vi_struct),y\nlda     #$00\nrts\n@no_substract:\nlda     #$01\nrts\n.endproc\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Pages/strlen/","title":"strlen","text":""},{"location":"tools_docs/vi/Pages/strlen/#strlen","title":"strlen","text":"<p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/","title":"vi_struct_data","text":""},{"location":"tools_docs/vi/Structs/structvi__struct__data/#vi_struct_data","title":"vi_struct_data","text":""},{"location":"tools_docs/vi/Structs/structvi__struct__data/#public-attributes","title":"Public Attributes","text":"Name char xpos_screen char ypos_screen int pos_file_addr char[4] pos_file char posx_command_line char[VI_MAX_LENGTH_FILENAME] name_file_open int ptr_file_begin char[4] length_file int pos_ptr_video_address char[4] file_number_of_line char xpos_command_line char[39] command_line_buffer int ptr_last_char_file int line_id char xpos_text char ypos_text"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#public-attributes-documentation","title":"Public Attributes Documentation","text":""},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-xpos_screen","title":"variable xpos_screen","text":"<pre><code>char xpos_screen;\n</code></pre> <p>position x of the cursor on the screen </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-ypos_screen","title":"variable ypos_screen","text":"<pre><code>char ypos_screen;\n</code></pre> <p>position y of the cursor on the screen </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-pos_file_addr","title":"variable pos_file_addr","text":"<pre><code>int pos_file_addr;\n</code></pre> <p>position on the file (address) </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-pos_file","title":"variable pos_file","text":"<pre><code>char[4] pos_file;\n</code></pre> <p>position in the file </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-posx_command_line","title":"variable posx_command_line","text":"<pre><code>char posx_command_line;\n</code></pre> <p>position on command line </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-name_file_open","title":"variable name_file_open","text":"<pre><code>char[VI_MAX_LENGTH_FILENAME] name_file_open;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-int","title":"variable int","text":"<pre><code>int;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-ptr_file_begin","title":"variable ptr_file_begin","text":"<pre><code>ptr_file_begin;\n</code></pre> <p>adress of the beginning of the file </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-length_file","title":"variable length_file","text":"<pre><code>char[4] length_file;\n</code></pre> <p>Length of the file </p>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-pos_ptr_video_address","title":"variable pos_ptr_video_address","text":"<pre><code>int pos_ptr_video_address;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-file_number_of_line","title":"variable file_number_of_line","text":"<pre><code>char[4] file_number_of_line;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-xpos_command_line","title":"variable xpos_command_line","text":"<pre><code>char xpos_command_line;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-command_line_buffer","title":"variable command_line_buffer","text":"<pre><code>char[39] command_line_buffer;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-ptr_last_char_file","title":"variable ptr_last_char_file","text":"<pre><code>int ptr_last_char_file;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-line_id","title":"variable line_id","text":"<pre><code>int line_id;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-xpos_text","title":"variable xpos_text","text":"<pre><code>char xpos_text;\n</code></pre>"},{"location":"tools_docs/vi/Structs/structvi__struct__data/#variable-ypos_text","title":"variable ypos_text","text":"<pre><code>char ypos_text;\n</code></pre> <p>Updated on 2022-12-15 at 14:20:17 +0100</p>"},{"location":"tutorials/","title":"Tutorials","text":""},{"location":"tutorials/advanced_submit_part1/","title":"submit scripts advanced","text":""},{"location":"tutorials/advanced_submit_part1/#submit-scripts-advanced","title":"submit scripts advanced","text":""},{"location":"tutorials/advanced_submit_part1/#versions","title":"Versions","text":"<p>Kernel v2023.2 submit 2022.4</p> <pre><code>#!/bin/submit\n</code></pre>"},{"location":"tutorials/advanced_submit_part1/#restore-from","title":"Restore from","text":"<p>restore from /etc/orix/menu.cnf</p> <p>En PJ la version corrig\u00e9e de submit.</p> <p>Bugfix: restore from: ne fonctionnait plus suite \u00e0 l'optimisation de la lecture du script</p> <p>Modification: place la fl\u00e8che au d\u00e9but de la variable et non \u00e0 la fin (cas de if exists)</p> <p>Je ne sais pas si tu l'avais vu dans le manuel subdoc mais tu peux v\u00e9rifier la valeur de errrorlevel apr\u00e8s une commande restore ou save.</p>"},{"location":"tutorials/advanced_submit_part1/#restore-22","title":"Restore (2/2)","text":"<p>Apres execution errorlevel vaut:</p> <ul> <li>0: ok</li> <li>1: erreur d'ouverture du fichier</li> <li>2: '=' manquant</li> <li>3: nom de variable trop long</li> <li>4: trop de variables</li> <li>5: chaine trop longue</li> <li>6: erreur interne</li> </ul>"},{"location":"tutorials/advanced_submit_part1/#save","title":"Save","text":"<p>Apres execution errorlevel vaut:</p> <ul> <li>0: ok</li> <li>1: erreur d'ouverture du fichier</li> </ul> <p>Donc tu peux faire:</p> <p>if errorlevel 1 goto erreur ou if errorlevel &gt;=1 goto erreur qui est \u00e9quivalent if errorlevel = 1 goto erreur pour ne d\u00e9tecter que le probl\u00e8me d'ouverture du fichier if errorlevel = 0 goto ok et mettre le traitement d'erreur juste apr\u00e8s cette ligne. on error ne fonctionnera pas ici parce que j'ai consid\u00e9rer qu'il ne s'agissait d'erreurs fatales.</p>"},{"location":"tutorials/advanced_submit_part1/#call","title":"Call","text":""},{"location":"tutorials/advanced_submit_part1/#chain","title":"Chain","text":"<p>Calls a new submit script. If chain is called, the main script is left and the one starts</p> <pre><code>chain script.sub\n</code></pre>"},{"location":"tutorials/advanced_submit_part1/#on-error","title":"On error","text":""},{"location":"tutorials/advanced_submit_part1/#getkey","title":"getkey","text":"<p>getkey wait for a key. The value of the key pressed is inserted in \"key\" variable</p>"},{"location":"tutorials/advanced_submit_part1/#if","title":"if","text":""},{"location":"tutorials/advanced_submit_part1/#variable","title":"variable","text":""},{"location":"tutorials/autoboot_fr/","title":"Autoboot","text":""},{"location":"tutorials/autoboot_fr/#orix-demarrage-personnalise-par-autoboot-et-submit","title":"[Orix] D\u00e9marrage personnalis\u00e9 par autoboot et submit","text":"<p>Depuis la version du kernel v2023.1, il est d\u00e9sormais possible de personnaliser le d\u00e9marrage d\u2019Orix sur son atmos.</p> <p>Submit est un langage de scripting issu de CPM mais modifi\u00e9 par Assinie. Assine a fait le code pour Orix mais aussi a am\u00e9lior\u00e9 le fonctionnement afin d\u2019int\u00e9grer des fonctionnalit\u00e9s en plus. Submit est un langage interpr\u00e9t\u00e9.</p> <p>Autoboot est un fichier localis\u00e9 dans le r\u00e9pertoire \u201c/etc/\u201d et va contenir un script submit. Ce script contenu dans le fichier autoboot sera lanc\u00e9 au boot de l\u2019ordinateur ce qui permettra de personnaliser son boot, faire des menus etc.</p> <p>Si le fichier autoboot est pr\u00e9sent, alors il sera d\u00e9marr\u00e9, sinon, cela d\u00e9marrera normalement sans personnalisation. S\u2019il y a besoin de bypasser ce d\u00e9marrage par autoboot, il faudra faire un reset par exemple avec une touche quelconque appuy\u00e9e. Cela va emp\u00eacher autoboot de d\u00e9marrer et permettre d\u2019acc\u00e9der au shell directement.</p> <p>Le gros avantage du scripting, c\u2019est que cela permet d\u2019aller vite pour faire quelque chose sans avoir beaucoup de connaissances.</p> <p>Voici, donc, un tutorial qui va mettre en application un d\u00e9marrage par autoboot.</p>"},{"location":"tutorials/autoboot_fr/#prerequis","title":"Prerequis","text":"<p>Avoir la twilighte board \u00e0 jour avec le kernel v2023.1 submit version v2022.4 (v\u00e9rifier avec \u2018submit\u2019) un \u00e9diteur texte sur pc. Il y a un \u00e9diteur texte natif en cours de dev, mais il n\u2019est pas finalis\u00e9, et donc, il faudra partir sur la cl\u00e9 usb branch\u00e9e sur le pc, avec \u201c/etc/autoboot\u201d ouvert. avoir tous les binaires Orix \u00e0 jour : https://repo.orix.oric.org/dists/official/ sur la cl\u00e9 usb Pour demander au syst\u00e8me de ne pas lire le fichier autoboot au d\u00e9marrage, appuyer sur une touche au boot. Si autoboot doit \u00eatre d\u00e9sactiv\u00e9, il suffit d\u2019aller dans /etc/, faire une copie d\u2019autoboot avec \u2018cp\u2019, et supprimer le fichier autoboot</p> <p>Je veux d\u00e9marrer blake\u2019s 7 au d\u00e9marrage Dans le script submit, je mets juste :</p> <pre><code>#!/bin/submit\nblakes7\n</code></pre> <p>Je sauve le fichier, je mets la cl\u00e9 usb, et je d\u00e9marre l\u2019oric.</p> <p>Blakes7 d\u00e9marrera automatiquement</p>"},{"location":"tutorials/autoboot_fr/#demarrage-dun-menu-personnalise-avec-changement-de-fonte","title":"D\u00e9marrage d\u2019un menu personnalis\u00e9 avec changement de fonte","text":"<p>Cette fois ci, nous allons lancer un menu au boot. Le script suivant va :</p> <p>effacer l\u2019\u00e9cran apr\u00e8s le boot, mettre la fonte fanta2uk (les fontes sont localis\u00e9es dans \u201c/usr/share/fonts\u201d). afficher un menu avec des entr\u00e9es \u201cbasic, blake\u2019s 7, Psychiatric, barbitoric, et Orix\u201d : ces choix sont volontaires car ils permettent de montrer les diff\u00e9rents lancements, que cela soit \u00e0 partir d\u2019une rom, du storage, d\u2019un jeu, ou d\u2019une d\u00e9mo). La commande basic11 prend un argument qui est le nom du .tap \u00e0 lancer (on peut le trouver en faisant un basic11 -l) attendre une touche et lancer le programme s\u00e9lectionn\u00e9.</p> <pre><code>#! /bin/submit\ncls\nsetfont fanta2uk\n\n@ 10,0\ntext\n            +--------------+\n             | 1 Basic         |\n| 2 Blake's 7   |\n| 3 Psychatric |\n| 4 Barbitoric  |\n| 5 Orix           |\n+--------------+\nendtext\n:start\ngetkey\nif key = 49 goto _basic\nif key = 50 goto _blake\nif key = 51 goto _psy\nif key = 52 goto _barbitoric\nif key = 53 goto prompt\n\ngoto start\n\n:_basic\nbasic11\n\n:_blake\nblakes7\n\n:_barbitoric\nbarboric\n\n:_psy\nbasic11 \"PSY\n\n:prompt\nexit\n</code></pre> <p>Le r\u00e9sultat en image:</p> <p>Le r\u00e9sultat en vid\u00e9o :</p> <p>Ce script va lancer, en fonction de la touche press\u00e9e, l\u2019entr\u00e9e voulue (rom basic, blake, psychiatric, barbitoric ou revenir au shell). En revanche, une entr\u00e9e de fonctionnera pas, c\u2019est barbitoric (pour la version disponible au 7/06/2023).</p> <p>Pour expliquer pourquoi barbitoric ne fonctionne pas dans le cas o\u00f9 il est localis\u00e9 dans un script submit, il faut se r\u00e9f\u00e9rer au fonctionnement d\u2019un binaire Orix. Le probl\u00e8me ne se produit pas pour une commande en ROM, mais il peut se produire pour un binaire sur cl\u00e9 usb/sdcard.</p> <p>Au d\u00e9but du d\u00e9veloppement d\u2019Orix, un seul format de binaire existait, c\u2019est le fameux format statique que nous connaissons pour du basic, hyperbasic, commandes sedoric etc. Les programmes sont assembl\u00e9s \u00e0 une adresse fixe, et il y a conflit si on essaie de charger un programme qui est dans la m\u00eame plage d\u2019adresse : l\u2019un va \u00e9craser l\u2019autre. C\u2019est ce qu\u2019il se passe dans le cas de submit et barbitoric, mais ce n\u2019est pas submit le fautif, c\u2019est le binaire barbitoric en natif Orix. Submit est un binaire sur disque au format 2 Orix. Ce format est relogeable. Le kernel va allouer la plage m\u00e9moire disponible en fonction de la taille et reloger au runtime le binaire pour que submit puisse tourner \u00e0 une nouvelle adresse. Submit tourne donc \u00e0 une adresse inconnue par l\u2019utilisateur, seul le kernel sait o\u00f9 submit est localis\u00e9 en RAM. Aussi, Submit va faire des allocations m\u00e9moire pour sa propre utilisation.</p> <p>Ici, barbitoric n\u2019est pas au format relogeable, et quand le kernel va essayer de le lancer, il va regarder s\u2019il est au format 2, s\u2019il est au format 1, le header du binaire d\u00e9finit une adresse fixe. Le kernel va v\u00e9rifier si l\u2019adresse est occup\u00e9e. Comme submit a \u00e9t\u00e9 lanc\u00e9 de mani\u00e8re relog\u00e9e au 1er offset m\u00e9moire libre, il y a conflit et le kernel va renvoyer un \u201cexec format error\u201d qui sera affich\u00e9 dans submit.</p> <p>Voici comment v\u00e9rifier si un binaire est au format relogeable : Il faut utiliser le binaire file.</p> <p>Vous verrez que file n\u2019indique pas que c\u2019est un binaire relogeable pour barboric (nom du programme barbitoric) :</p> <pre><code>/#cd bin\n/bin#file barboric\n</code></pre> <p>Ci dessous, en rouge, le test sur le binaire barbitoric, en vert le m\u00eame test sur le programme blakes7. Nous voyons bien dans ce cas \u201creloc binary\u201d en vert</p> <p>Pour corriger le probl\u00e8me de barbitoric dans le cas de submit, il faut attendre la sortie de la version relogeable. Pour cela, le binaire est converti par un programme apr\u00e8s un 1er build du code source.</p> <p>Les commandes en ROM n\u2019ont pas besoin d\u2019\u00eatre relog\u00e9es. Elles sont d\u00e9j\u00e0 r\u00e9sidentes en ROM, et ont \u00e9t\u00e9 con\u00e7ues pour ne pas \u00e9craser les autres commandes. Les commandes sont d\u00e9j\u00e0 dans des emplacements m\u00e9moire fixes, et g\u00e8rent les allocations m\u00e9moire de leur cot\u00e9. De fa\u00e7on g\u00e9n\u00e9rale, les commandes en ROM sont plus rapides car elles sont d\u00e9j\u00e0 charg\u00e9es, n\u2019ont pas besoin d\u2019\u00eatre relog\u00e9es et n\u2019occupent pas de RAM dans les 48KB pour son propre code (\u00e0 part pour les allocations m\u00e9moires n\u00e9cessaires)</p> <p>Couleurs, caract\u00e8res de contr\u00f4les Avant d\u2019aller plus loin, l\u2019id\u00e9al est de lire la doc \u201csubdoc\u201d en utilisant man. C\u2019est une doc en fran\u00e7ais qui explique les possibilit\u00e9s de submit</p> <pre><code>/#man subdoc\n</code></pre> <p>Nous avons besoin de personnaliser un peu plus ce menu, et nous allons afficher un texte double hauteur avec quelques couleurs. Cela se fait avec les caract\u00e8res de contr\u00f4le : </p><pre><code>ink_black = ^@\nink_red = ^A\nink_green = ^B\nink_yellow = ^C\nink_blue = ^D\nink_purple = ^E\nink_cyan = ^F\nink_white = ^G\n\nsimple_height = ^H\nsimple_graph = ^I\ndouble_height = ^J\nblink_simple = ^L\nblink_double = ^N\n\npaper_black = ^P\npaper_red = ^Q\npaper_green = ^R\npaper_yellow = ^S\npaper_blue = ^T\npaper_purple = ^U\npaper_cyan = ^V\npaper_white = ^W\n</code></pre> <p>Nous allons modifier autoboot, pour afficher un bandeau avec sur fond bleu et en \u00e9criture rouge le mot menu en double hauteur, puis afficher un encadr\u00e9 magenta avec le menu.</p> <pre><code>#! /bin/submit\ncls\nsetfont fanta2uk\necho ^[T +-----------------------------------+\necho ^[T^[J|^[A               Menu         ^[G     |\necho ^[T^[J|^[A               Menu         ^[G     |\necho ^[T +-----------------------------------+\n\necho\n\necho ^[U\necho ^[U ^[P         1 Basic                   ^[U\necho ^[U ^[P         2 Blake's 7               ^[U\necho ^[U ^[P         3 Psychatric              ^[U\necho ^[U ^[P         4 Barbitoric              ^[U\necho ^[U ^[P         5 Orix                    ^[U\necho ^[U\n\n:start\ngetkey\nif key = 49 goto _basic\nif key = 50 goto _blake\nif key = 51 goto _psy\nif key = 52 goto _barbitoric\nif key = 53 goto prompt\n\ngoto start\n\n:_basic\nbasic11\n\n:_blake\nblakes7\n\n:_barbitoric\nbarboric\n\n:_psy\nbasic11 \"PSY\n\n:prompt\nexit\nLe r\u00e9sultat\n</code></pre>"},{"location":"tutorials/autoboot_fr/#pour-aller-plus-loin","title":"Pour aller plus loin","text":"<p>Submit g\u00e8re des variables, il est possible de les d\u00e9finir et de les sauver dans un fichier texte (save to myfile) et les restaurer. (restore from myfile)</p> <p>Submit lit des arguments en param\u00e8tre. Ainsi, un script en ligne de commande lanc\u00e9 par submit tel que</p> <pre><code>/#submit monscript.sub toto\n</code></pre> <p>\u201ctoto\u201d sera dans la variable $1, permettant de faire des tests avec if.</p> <p>Il est possible de tester la pr\u00e9sence d\u2019un fichier (if exist myfile.txt goto start)</p> <p>D\u2019afficher un prompt avec input, et r\u00e9cup\u00e9rer ce qui a \u00e9t\u00e9 saisi dans une variable.</p>"},{"location":"tutorials/basic11_programming_fr/","title":"Programmer en basic sur la machine","text":""},{"location":"tutorials/basic11_programming_fr/#programmer-en-basic-sur-la-machine","title":"Programmer en basic sur la machine","text":"<ul> <li>D\u00e9marrer basic11 au shell :</li> </ul> <p>/#basic11</p> <ul> <li> <p>taper son programme : 10 ?\"Salut</p> </li> <li> <p>Sauvegarder :</p> </li> </ul> <p>CSAVE\"PRG</p> <ul> <li>quitter</li> </ul> <p>taper quit ou appuyer sur reset</p> <ul> <li>sur le shell voir la pr\u00e9sence de son fichier dans le bon folder :</li> </ul> <p>/#cd home/basic11 /#ls PRG.*</p> <p>=&gt; il devrait \u00eatre pr\u00e9sent.</p> <ul> <li>Revenir au basic11 et le charger</li> </ul> <p>/#basic11</p> <p>CLOAD\"PRG LIST</p>"},{"location":"tutorials/network/","title":"Gestion ethernet beta (WIP) : n\u00e9cessite une carte \u00e0 ins\u00e9rer dans la twilighte board","text":""},{"location":"tutorials/network/#gestion-ethernet-beta-wip-necessite-une-carte-a-inserer-dans-la-twilighte-board","title":"Gestion ethernet beta (WIP) : n\u00e9cessite une carte \u00e0 ins\u00e9rer dans la twilighte board","text":"<p>ATTENTION : c'est une version en cours de dev, il y a beaucoup de bugs.</p> <ul> <li> <p>D\u00e9marrer l'oric</p> </li> <li> <p>s'assurer que le cable r\u00e9seau est branch\u00e9 sur la carte r\u00e9seau et que le cable est bien sur un r\u00e9seau disposant d'un dhcp</p> </li> <li> <p>Presser FUNCT+L (pour passer un bug) quitter (ESC) pui presser FUNCT+N et attendre le d\u00e9marrage de la couche r\u00e9seau.</p> </li> </ul> <p>3 [OK] en vert devrait apparaitre, si ce n'est pas le cas, se r\u00e9f\u00e9rer \u00e0 l'erreur concern\u00e9e (cable d\u00e9branch\u00e9, dhcp ...)</p> <ul> <li>Quand tout est vert, regarder l'ip r\u00e9cup\u00e9r\u00e9e au dhcp :</li> </ul> <p>/#ifcfg</p> <p>L'adresse IP est pr\u00e9sente et la mac address de la carte est pr\u00e9sente aussi.</p> <ul> <li>V\u00e9rifier les commandes qu'apporte ce d\u00e9marrage r\u00e9seau (banque network num\u00e9ro 34)</li> </ul> <p>/#help -b34</p> <ul> <li>V\u00e9rifier le serveur DNS configur\u00e9</li> </ul> <p>/#resvctl</p> <ul> <li>Faire une r\u00e9solution dns d'oric.org puis de www.google.com</li> </ul> <p>/#dig www.oric.org</p> <p>puis</p> <p>/#dig www.google.com</p> <ul> <li>Envoyer un message sur un serveur rsyslog</li> </ul> <p>=&gt; n\u00e9cessite d'avoir un serveur rsyslog sur le r\u00e9seau acceptant les messages en UDP (\u00e0 configurer sur le serveur distant)</p> <p>/#nc -u 192.168.1.200 514 -s MONMSG</p> <ul> <li>Telecharger un fichier de 5 mo et l'\u00e9crire sur disque</li> </ul> <p>/# curl</p> <p>=&gt; attendre 3 Mins, le programme rend la main.</p> <p>/# ls -l</p> <p>un fichier index.htm de 5mo est pr\u00e9sent</p> <p>/# v =&gt; fait appelle un serveur web, et r\u00e9cup\u00e8re un index.hlp qui s'affiche \u00e0 l'\u00e9cran</p>"},{"location":"tutorials/start_a_software_fr/","title":"D\u00e9marrer un software","text":""},{"location":"tutorials/start_a_software_fr/#demarrer-un-software","title":"D\u00e9marrer un software","text":""},{"location":"tutorials/start_a_software_fr/#demarrer-un-soft-oric-1-ou-atmos-loader-v20223","title":"D\u00e9marrer un soft oric-1 ou atmos (Loader v2022.3)","text":"<p>Exemple d'un jeu atmos (A.T.M)</p> <ul> <li> <p>D\u00e9marrer l'oric</p> </li> <li> <p>Au shell, appuyer sur funct+L : un menu apparait.</p> </li> <li> <p>Aller sur l'icone joyspad.</p> </li> <li> <p>Appuyer sur la touche A -&gt; Nous arrivons sur le premier jeu commen\u00e7ant par la lettre A</p> </li> <li> <p>Appuyer sur espace : la fiche de jeu s'affiche.</p> </li> <li> <p>Utiliser la fl\u00e8che du bas pour descendre et acc\u00e9der par exemple aux commentaires.</p> </li> <li> <p>Pour revenir en haut de la fiche, appuyer sur la touche haut.</p> </li> <li> <p>Quitter la fiche jeu, appuyer sur espace.</p> </li> <li> <p>Appuyer sur entr\u00e9e pour d\u00e9marrer ATM.</p> </li> <li> <p>Pour quitter le jeu, appuyer sur le bouton reset.</p> </li> </ul> <p>Le loader permet de lancer les soft oric-1 et atmos, mais pas seulement \u00e0 l'avenir</p>"},{"location":"tutorials/start_a_software_fr/#demarrer-un-soft-oric-1-only","title":"Demarrer un soft oric-1 only","text":"<ul> <li> <p>D\u00e9marrer l'oric</p> </li> <li> <p>taper basic10 -g</p> </li> <li> <p>naviguer avec les fl\u00e8ches et choisir le soft \u00e0 lancer avec les fl\u00e8ches : Appuyer sur entr\u00e9e</p> </li> </ul>"},{"location":"tutorials/start_a_software_fr/#demarrer-un-soft-atmos-only","title":"Demarrer un soft Atmos only","text":"<ul> <li> <p>D\u00e9marrer l'oric</p> </li> <li> <p>taper basic11 -g</p> </li> <li> <p>naviguer avec les fl\u00e8ches et choisir le soft \u00e0 lancer avec les fl\u00e8ches : Appuyer sur entr\u00e9e</p> </li> </ul>"},{"location":"tutorials/start_a_software_fr/#demarrer-un-soft-personnel-sur-atmos","title":"Demarrer un soft personnel sur atmos","text":"<ul> <li>Sur le shell, taper :</li> </ul> <p>cd /home/basic11 ls</p> <p>Memoriser le nom d'un .tap dans la liste</p> <p>Puis taper au shell basic11</p> <ul> <li> <p>basic11</p> </li> <li> <p>Puis faire un cload : CLOAD\"MONTAP</p> </li> </ul>"},{"location":"tutorials/start_a_software_fr/#demarrer-un-dsk-jasmin-sans-lecteur-jasmin-beta","title":"D\u00e9marrer un .dsk jasmin sans lecteur jasmin (beta)","text":"<p>Rep\u00e9rer un dsk dans /home/basic11/dsk</p> <p>/#cd home/basic11/dsk /#ls</p> <p>Prendre par exemple le dsk theoric9.dsk</p> <p>Lancer ftdos avec ce dsk :</p> <p>ftdos theoric9</p> <p>Le dsk d\u00e9marre.</p> <p>Regarder le contenu du dsk :</p> <p>!CAT\"</p>"},{"location":"update/2022_3/","title":"2022.3","text":""},{"location":"update/2022_3/#v20223","title":"v2022.3","text":""},{"location":"update/2022_3/#kernel","title":"Kernel","text":"<ul> <li> <p>[XMKDIR] Fix registers</p> </li> <li> <p>[XATN] Arc Tan routine removed</p> </li> <li> <p>[XCOS] Cosinus routine removed</p> </li> <li> <p>[XSIN] sinus routine removed</p> </li> <li> <p>[XLN] Ln routine removed</p> </li> <li> <p>[XLOG] Log routine removed</p> </li> <li> <p>[XEXP] Exp routine removed</p> </li> <li> <p>[XOPEN] Now, WR_ONLY Flag does not create the file. O_CREAT is handled and create the file</p> </li> <li> <p>[XFSEEK] now works in 32 bits mode (return EOK if OK, EINVAL if whence is not recognize)</p> </li> <li> <p>[XOPEN] [XREAD] [XCLOSE] Allows to open 2 files at the same times</p> </li> <li> <p>[XFREE] Fix many bugs</p> </li> <li> <p>[Load from device] Add magic token to start any binary without checks</p> </li> <li> <p>Can open 2 files at the same times</p> </li> <li> <p>Many bugs corrected in XFREE primitive memory management</p> </li> <li> <p>FSEEK primitive to move into the opened files</p> </li> </ul>"},{"location":"update/2022_3/#cc65-telestrat-target","title":"CC65 (telestrat target)","text":"<ul> <li> <p>[cc65] Fix mkdir bug</p> </li> <li> <p>[cc65] now send correct fd for fwrite/fopen/fread to the kernel</p> </li> <li> <p>[cc65] kbhit has the right behavior now</p> </li> </ul>"},{"location":"update/2022_3/#shell","title":"Shell","text":"<ul> <li> <p>Add readline (command line behavior) : insert/replace mode move to end of the line, at the beginning etc (see : sh - Orix (orix-software.github.io)  code : Assinie)</p> </li> <li> <p>update man pages</p> </li> </ul> <p>Readline : </p> <p></p>"},{"location":"update/2022_3/#man","title":"Man","text":"<ul> <li> <p>man removes shell ptr and no others command were working, when man is used without any argument =&gt; fixed</p> </li> <li> <p>man can displays now more than one screen</p> </li> </ul>"},{"location":"update/2022_3/#loader-functl","title":"Loader (funct+L)","text":"<ul> <li> <p>Displays the version of the loader</p> </li> <li> <p>When we press space the informations(and comments) of the software is displayed. Up and down arrows are availables to navigate into this page (788 games, 60 roms, 35 demos, 142 tools, 80 musics)</p> </li> <li> <p>When a letter is pressed, it goes to the first entry of this letter.</p> </li> </ul> <p></p>"},{"location":"update/2022_3/#new-command-line-tool-grep","title":"New command line tool : grep","text":"<p>Grep search pattern into file (grep is a tool to find pattern into file.)</p> <p></p>"},{"location":"update/2022_3/#new-command-line-tool-untar","title":"New command line tool : untar","text":"<p>can untar tar files</p> <p></p>"},{"location":"update/2022_3/#new-command-line-tool-submit","title":"New command line tool : submit","text":"<p>submit can launch script file(Submit is a script management system in order to launch command like a shell script)</p> <p></p>"},{"location":"update/2022_3/#how-to-upgrade","title":"How to upgrade","text":"<ul> <li> <p>Download https://repo.orix.oric.org/dists/official/tgz/6502/sdcard.tgz</p> </li> <li> <p>gunzip/untar sdcard.tgz on the twilighte board device</p> </li> <li>type in the orix shell :</li> <li>cd /usr/share/carts/2022.3</li> </ul> <p>if the default device is a usb key</p> <pre><code>/# orixcfg -r -s 4 kernelus.r64\n</code></pre> <p>if the default device is a sdcard</p> <pre><code>/#orixcfg -r -s 4 kernelsd.r64\n</code></pre>"},{"location":"update/2022_3/#conversion","title":"Conversion","text":"<ul> <li>Pushing the envelop</li> <li>born in 1983</li> <li>Blake's 7</li> <li>Oric tech ...</li> </ul>"},{"location":"update/2022_4/","title":"2022.4","text":""},{"location":"update/2022_4/#v20224-and-v202241","title":"v2022.4 and v2022.4.1","text":""},{"location":"update/2022_4/#kernel","title":"Kernel","text":"<ul> <li>Kernel supports relocation mode binary</li> <li>fixbug in multiples files opened</li> </ul>"},{"location":"update/2022_4/#cc65-telestrat-target","title":"CC65 (telestrat target)","text":"<ul> <li>binary from cc65 will be deprecated (without relocbin tool in order to convert it in relocation mode). It needs to get relocbin from orix-sdk : https://github.com/assinie/orix-sdk</li> </ul>"},{"location":"update/2022_4/#shell","title":"Shell","text":"<ul> <li>cp now works</li> <li>many man pages had been improved</li> <li>bugfix with \"cd /\" which did not work</li> </ul>"},{"location":"update/2022_4/#how-to-upgrade","title":"How to upgrade","text":"<ul> <li> <p>Download https://repo.orix.oric.org/dists/official/tgz/6502/sdcard.tgz</p> </li> <li> <p>gunzip/untar sdcard.tgz on the twilighte board device</p> </li> <li>type in the orix shell :</li> <li>cd /usr/share/carts/2022.4</li> </ul> <p>if the default device is a usb key</p> <pre><code>/# orixcfg -r -s 4 kernelus.r64\n</code></pre> <p>if the default device is a sdcard</p> <pre><code>/# orixcfg -r -s 4 kernelsd.r64\n</code></pre>"},{"location":"update/2023_1/","title":"2023.1","text":""},{"location":"update/2023_1/#20231","title":"2023.1","text":""},{"location":"update/2023_1/#kernel","title":"Kernel","text":"<ul> <li>add ftell in XVALUES primitive</li> <li>add getProcessName from an id malloc entry</li> <li>get table copy of free malloc table (from XVALUES)</li> <li>get table copy of busy malloc table (from XVALUES)</li> <li>when MAX_PROCESS is reached, kernel displays a kernel panic</li> <li>fix bug when wronly us set only</li> <li>fix two  bugs for dynamic relocation format (2)</li> </ul>"},{"location":"update/2023_1/#shell","title":"Shell","text":"<ul> <li>lsmem is recoded from scratch</li> <li>/etc/autoboot is checked at the start of shell in order to boot any submit script (autoboot is a .sub file without extension)</li> <li>pstree added</li> <li>It's now possible to add \"#\" on command line to specify a comment</li> </ul>"},{"location":"update/2023_1/#install","title":"Install","text":"<p>Download : https://repo.orix.oric.org/dists/official/tgz/6502/cardridge.tgz</p> <p>untar/gunzip on the twilighte board device.</p>"},{"location":"update/2023_1/#orixcfg-below-20232-orixcfg-version","title":"orixcfg (below 2023.2 orixcfg version)","text":"<p>Under Orix</p> <pre><code>/# cd /usr/share/carts/2023.1/\n/usr/share/carts/2023.1# orixcfg -r -s 4 kernelus.r64\n</code></pre>"},{"location":"update/2023_1/#orixcfg-equal-or-greater-than-20232-orixcfg-version","title":"orixcfg (equal or greater than 2023.2 orixcfg version)","text":"<pre><code>/# cd /usr/share/carts/2023.1/\n/usr/share/carts/2023.1# orixcfg -k kernelus.r64\n</code></pre>"},{"location":"update/2023_2/","title":"2023.2","text":""},{"location":"update/2023_2/#20232","title":"2023.2","text":""},{"location":"update/2023_2/#kernel","title":"Kernel","text":"<ul> <li>XEXEC works with absolute path (/root/bin/toto can be launched)</li> <li>XEXEC works with relative \"./\" syntax only  (./toto can be launched)</li> <li>#! script are now working</li> <li>Fix bug when we switch to hires many times</li> </ul>"},{"location":"update/2023_2/#shell","title":"Shell","text":"<ul> <li>Cleaning</li> <li>Fix bug in lsmem (free chunk)</li> <li>viewhrs can have an arg \"-t\" in order to specify a wait value before viewhrs exit</li> </ul>"},{"location":"update/2023_2/#cc65","title":"cc65","text":"<p>fwrite and fread did not returns the right number of byte read or written</p>"},{"location":"update/2023_2/#tools","title":"Tools","text":"<ul> <li>'more' available</li> <li>'blakes7' is now in relocation format</li> </ul>"},{"location":"update/2023_2/#install","title":"Install","text":"<p>Download Kernel: https://repo.orix.oric.org/dists/official/tgz/6502/cardridge.tgz</p> <p>untar/gunzip on the twilighte board device.</p>"},{"location":"update/2023_2/#orixcfg-below-20232-orixcfg-version","title":"orixcfg (below 2023.2 orixcfg version)","text":"<p>Under Orix</p> <pre><code>/# cd /usr/share/carts/2023.2/\n/usr/share/carts/2023.2# orixcfg -r -s 4 kernelus.r64\n</code></pre>"},{"location":"update/2023_2/#orixcfg-equal-or-greater-than-20232-orixcfg-version","title":"orixcfg (equal or greater than 2023.2 orixcfg version)","text":"<pre><code>/# cd /usr/share/carts/2023.2/\n/usr/share/carts/2023.2# orixcfg -k kernelus.r64\n</code></pre>"},{"location":"update/2023_3/","title":"2023.3","text":""},{"location":"update/2023_3/#20233","title":"2023.3","text":""},{"location":"update/2023_3/#kernel","title":"Kernel","text":"<ul> <li>XEXEC now returns Y=EINVAL if the command sent to XEXEC has a length too long</li> <li>XEXEC returns program value in A and X (instead of A only)</li> </ul>"},{"location":"update/2023_3/#shell","title":"Shell","text":"<ul> <li>update man pages with screenshot</li> <li>loader is a new command line to start loader</li> </ul>"},{"location":"update/2023_3/#install","title":"Install","text":"<p>Download Kernel: https://repo.orix.oric.org/dists/official/tgz/6502/cardridge.tgz</p> <p>untar/gunzip on the twilighte board device.</p>"},{"location":"update/2023_3/#orixcfg-below-20232-orixcfg-version","title":"orixcfg (below 2023.2 orixcfg version)","text":"<p>Under Orix</p> <pre><code>/# cd /usr/share/carts/2023.3/\n/usr/share/carts/2023.3# orixcfg -r -s 4 kernelus.r64\n</code></pre>"},{"location":"update/2023_3/#orixcfg-equal-or-greater-than-20232-orixcfg-version","title":"orixcfg (equal or greater than 2023.2 orixcfg version)","text":"<pre><code>/# cd /usr/share/carts/2023.3/\n/usr/share/carts/2023.3# orixcfg -k kernelus.r64\n</code></pre>"},{"location":"update/2023_4/","title":"2023.4","text":""},{"location":"update/2023_4/#20234","title":"2023.4","text":""},{"location":"update/2023_4/#ls","title":"ls","text":"<ul> <li>Fix bug when a folder is empty (it was writting \"file not found\")</li> <li>Remove empty line at the end of \"ls -l\"</li> <li>Fix bug when pattern was not found ex \"*.fff\" wrote wrong pattern.</li> </ul>"},{"location":"update/2023_4/#uname","title":"uname","text":"<p>uname is again available (missing from shell 2023.3)</p>"},{"location":"update/2023_4/#viewhrs","title":"viewhrs","text":"<p>viewhrs is again available (missing from shell 2023.3)</p>"},{"location":"update/2023_4/#pstree","title":"pstree","text":"<p>Fix bug with wrong string after init process</p>"},{"location":"update/2023_4/#debug-command","title":"debug command","text":"<ul> <li>fix bug with 65C816 detection</li> </ul>"},{"location":"update/file/file/","title":"File","text":""},{"location":"update/file/file/#file","title":"file","text":""},{"location":"update/file/file/#20224","title":"2022.4","text":"<ul> <li>Built in order to manage fd file open</li> <li>built in relocation binary</li> <li>displays more informations from format 2</li> </ul>"},{"location":"user_manual/features/","title":"Features","text":""},{"location":"user_manual/features/#features","title":"Features","text":""},{"location":"user_manual/features/#start-atmosoric-1-tape-file-ftdos-dsk-files-roms","title":"Start atmos/oric-1 tape file, ftdos .dsk files, roms","text":""},{"location":"user_manual/features/#tap-file","title":".tap file","text":"Feature read Write joystick management <code>Atmos .tap file</code> <code>Oric-1 .tap file</code>"},{"location":"user_manual/features/#dsk-file","title":".dsk file","text":"Feature read Write joystick management <code>Sedoric .dsk file (beta)</code> <code>ftdos .dsk file</code>"},{"location":"user_manual/features/#play-games-with-joysticks-without-any-tap-patches","title":"Play games with joysticks without any .tap patches","text":""},{"location":"user_manual/features/#start-ftdos-dsk-file","title":"Start ftdos .dsk file","text":""},{"location":"user_manual/features/#loader","title":"Loader","text":""},{"location":"user_manual/loader/","title":"Software loader","text":""},{"location":"user_manual/loader/#loader","title":"Loader","text":"<p>Loader can start atmos or oric-1 tape files.</p> <p>If the software is available for Atmos, the tape file will be launched with atmos rom. But if the tape file is Oric-1 only, the software will be launched only in Oric-1 mode</p>"},{"location":"user_manual/loader/#usage","title":"Usage","text":"<p>Press ++funct+L++ to start loader</p>"},{"location":"user_manual/overview/","title":"Overview","text":""},{"location":"user_manual/overview/#overview","title":"Overview","text":""},{"location":"user_manual/quickstart/","title":"Quick Start","text":""},{"location":"user_manual/quickstart/#quick-start","title":"Quick Start","text":"<p>Default storage : the kernel is set with usb storage.</p> <p>The manual is : https://orix-software.github.io/twilighte_manual.pdf</p> <p>For board with 39SF040 eeprom, only use orixcfg equal or greater than 2023.2. Check version under Orix with : orixcfg -v. Beta version is here: http://repo.orix.oric.org/dists/alpha/tgz/6502/orixcfg.tgz</p>"},{"location":"user_manual/quickstart/#how-the-board-must-be-plugged","title":"How the board must be plugged","text":""},{"location":"user_manual/quickstart/#how-the-board-must-be-plugged-when-board-does-not-with-the-oric-keyboard-is-lost-or-prompt-does-not-appears","title":"How the board must be plugged when board does not with the oric (keyboard is lost or prompt does not appears)","text":""}]}